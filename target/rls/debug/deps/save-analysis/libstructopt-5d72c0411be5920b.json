{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22","program":"C:\\Users\\user\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","structopt","--edition=2018","C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=5d72c0411be5920b","-C","extra-filename=-5d72c0411be5920b","--out-dir","c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps","--extern","clap=c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps\\libclap-6f3c817754602bb5.rmeta","--extern","lazy_static=c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps\\liblazy_static-bd64fd2ac3c1fe4c.rmeta","--extern","structopt_derive=c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps\\structopt_derive-7ffc665360f9dc10.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\user\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps\\libstructopt-5d72c0411be5920b.rmeta"},"prelude":{"crate_id":{"name":"structopt","disambiguator":[2516048856596468640,0]},"crate_root":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src","external_crates":[{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5748888646060736057,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15195352194256834944,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8936219983177082535,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9514052684633617057,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11173665669995955307,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11489992985031151541,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16828784558795307081,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10060143980449217236,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14817981415011782061,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16087529398371340149,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":14,"id":{"name":"structopt_derive","disambiguator":[17889399136491457067,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":15,"id":{"name":"clap","disambiguator":[10027922353618444501,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":16,"id":{"name":"atty","disambiguator":[2659898393288588255,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":17,"id":{"name":"winapi","disambiguator":[3866011552936223613,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[14635134818681683527,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":19,"id":{"name":"strsim","disambiguator":[9544509764599520373,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":20,"id":{"name":"textwrap","disambiguator":[10244972748377605973,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":21,"id":{"name":"unicode_width","disambiguator":[738940202093888423,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":22,"id":{"name":"vec_map","disambiguator":[10400068343439008541,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","num":23,"id":{"name":"lazy_static","disambiguator":[4519470818501528546,0]}}],"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":370,"byte_end":41870,"line_start":9,"line_end":1218,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38021,"byte_end":38022,"line_start":1098,"line_end":1098,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38073,"byte_end":38077,"line_start":1103,"line_end":1103,"column_start":9,"column_end":13},"alias_span":null,"name":"clap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38183,"byte_end":38194,"line_start":1109,"line_end":1109,"column_start":9,"column_end":20},"alias_span":null,"name":"lazy_static","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":370,"byte_end":41870,"line_start":9,"line_end":1218,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":25},{"krate":0,"index":33},{"krate":0,"index":39}],"decl_id":null,"docs":" This crate defines the `StructOpt` trait and its custom derive.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":370,"byte_end":392,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":393,"byte_end":416,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/ This crate defines the `StructOpt` trait and its custom derive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":418,"byte_end":485,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":486,"byte_end":489,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":490,"byte_end":505,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":506,"byte_end":509,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If you want to disable all the `clap` features (colors,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":510,"byte_end":569,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ suggestions, ..) add `default-features = false` to the `structopt`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":570,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ dependency:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":641,"byte_end":656,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":657,"byte_end":660,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":661,"byte_end":672,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":673,"byte_end":691,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ structopt = { version = \"0.3\", default-features = false }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":692,"byte_end":753,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":754,"byte_end":761,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":762,"byte_end":765,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Support for [`paw`](https://github.com/rust-cli/paw) (the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":766,"byte_end":827,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/ `Command line argument paw-rser abstraction for main`) is disabled","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":828,"byte_end":898,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ by default, but can be enabled in the `structopt` dependency","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":899,"byte_end":963,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ with the feature `paw`:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":964,"byte_end":991,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":992,"byte_end":995,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":996,"byte_end":1007,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1008,"byte_end":1026,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ structopt = { version = \"0.3\", features = [ \"paw\" ] }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1027,"byte_end":1084,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/ paw = \"1.0\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1085,"byte_end":1100,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1101,"byte_end":1108,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1109,"byte_end":1112,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Table of Contents","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1113,"byte_end":1136,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1137,"byte_end":1140,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - [How to `derive(StructOpt)`](#how-to-derivestructopt)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1141,"byte_end":1200,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ - [Attributes](#attributes)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1201,"byte_end":1232,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/     - [Raw methods](#raw-methods)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1233,"byte_end":1270,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/     - [Magical methods](#magical-methods)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1271,"byte_end":1316,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/ - Arguments","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1317,"byte_end":1332,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/     - [Type magic](#type-magic)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1333,"byte_end":1368,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     - [Specifying argument types](#specifying-argument-types)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1369,"byte_end":1434,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/     - [Default values](#default-values)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1435,"byte_end":1478,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     - [Help messages](#help-messages)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1479,"byte_end":1520,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/     - [Environment variable fallback](#environment-variable-fallback)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1521,"byte_end":1594,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/ - [Skipping fields](#skipping-fields)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1595,"byte_end":1636,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ - [Subcommands](#subcommands)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1637,"byte_end":1670,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/     - [Optional subcommands](#optional-subcommands)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1671,"byte_end":1726,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/     - [External subcommands](#external-subcommands)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1727,"byte_end":1782,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/     - [Flattening subcommands](#flattening-subcommands)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1783,"byte_end":1842,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/ - [Flattening](#flattening)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1843,"byte_end":1874,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"/ - [Custom string parsers](#custom-string-parsers)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1875,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/ - [Generics](#generics)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1929,"byte_end":1956,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1957,"byte_end":1960,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1961,"byte_end":1964,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1965,"byte_end":1968,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ## How to `derive(StructOpt)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":1969,"byte_end":2002,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2003,"byte_end":2006,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ First, let's look at the example:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2007,"byte_end":2044,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2045,"byte_end":2048,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2049,"byte_end":2068,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2069,"byte_end":2096,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2097,"byte_end":2126,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2127,"byte_end":2130,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2131,"byte_end":2162,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/ #[structopt(name = \"example\", about = \"An example of StructOpt usage.\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2163,"byte_end":2239,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ struct Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2240,"byte_end":2256,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/     /// Activate debug mode","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2257,"byte_end":2288,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/     // short and long flags (-d, --debug) will be deduced from the field's name","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2289,"byte_end":2372,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/     #[structopt(short, long)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2373,"byte_end":2406,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/     debug: bool,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2407,"byte_end":2427,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2428,"byte_end":2431,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     /// Set speed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2432,"byte_end":2453,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     // we don't want to name it \"speed\", need to look smart","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2454,"byte_end":2517,"line_start":76,"line_end":76,"column_start":1,"column_end":64}},{"value":"/     #[structopt(short = \"v\", long = \"velocity\", default_value = \"42\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2518,"byte_end":2592,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/     speed: f64,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2593,"byte_end":2612,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2613,"byte_end":2616,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     /// Input file","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2617,"byte_end":2639,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/     #[structopt(parse(from_os_str))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2640,"byte_end":2680,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/     input: PathBuf,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2681,"byte_end":2704,"line_start":82,"line_end":82,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2705,"byte_end":2708,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     /// Output file, stdout if not present","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2709,"byte_end":2755,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/     #[structopt(parse(from_os_str))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2756,"byte_end":2796,"line_start":85,"line_end":85,"column_start":1,"column_end":41}},{"value":"/     output: Option<PathBuf>,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2797,"byte_end":2829,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2830,"byte_end":2833,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/     /// Where to write the output: to `stdout` or `file`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2834,"byte_end":2894,"line_start":88,"line_end":88,"column_start":1,"column_end":61}},{"value":"/     #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2895,"byte_end":2922,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"/     out_type: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2923,"byte_end":2948,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2949,"byte_end":2952,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     /// File name: only required when `out-type` is set to `file`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":2953,"byte_end":3022,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/     #[structopt(name = \"FILE\", required_if(\"out-type\", \"file\"))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3023,"byte_end":3091,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/     file_name: Option<String>,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3092,"byte_end":3126,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3127,"byte_end":3132,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3133,"byte_end":3136,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3137,"byte_end":3152,"line_start":97,"line_end":97,"column_start":1,"column_end":16}},{"value":"/     let opt = Opt::from_args();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3153,"byte_end":3188,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/     println!(\"{:?}\", opt);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3189,"byte_end":3219,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3220,"byte_end":3225,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3226,"byte_end":3233,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3234,"byte_end":3237,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ So `derive(StructOpt)` tells Rust to generate a command line parser,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3238,"byte_end":3310,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/ and the various `structopt` attributes are simply","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3311,"byte_end":3364,"line_start":104,"line_end":104,"column_start":1,"column_end":54}},{"value":"/ used for additional parameters.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3365,"byte_end":3400,"line_start":105,"line_end":105,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3401,"byte_end":3404,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ First, define a struct, whatever its name. This structure","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3405,"byte_end":3466,"line_start":107,"line_end":107,"column_start":1,"column_end":62}},{"value":"/ corresponds to a `clap::App`, its fields correspond to `clap::Arg`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3467,"byte_end":3537,"line_start":108,"line_end":108,"column_start":1,"column_end":71}},{"value":"/ (unless they're [subcommands](#subcommands)),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3538,"byte_end":3587,"line_start":109,"line_end":109,"column_start":1,"column_end":50}},{"value":"/ and you can adjust these apps and args by `#[structopt(...)]` [attributes](#attributes).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3588,"byte_end":3680,"line_start":110,"line_end":110,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3681,"byte_end":3684,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ **Note:**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3685,"byte_end":3698,"line_start":112,"line_end":112,"column_start":1,"column_end":14}},{"value":"/ _________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3699,"byte_end":3720,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/ Keep in mind that `StructOpt` trait is more than just `from_args` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3721,"byte_end":3798,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ It has a number of additional features, including access to underlying","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3799,"byte_end":3873,"line_start":115,"line_end":115,"column_start":1,"column_end":75}},{"value":"/ `clap::App` via `StructOpt::clap()`. See the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3874,"byte_end":3922,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [trait's reference documentation](trait.StructOpt.html).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3923,"byte_end":3983,"line_start":117,"line_end":117,"column_start":1,"column_end":61}},{"value":"/ _________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":3984,"byte_end":4005,"line_start":118,"line_end":118,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4006,"byte_end":4009,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ## Attributes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4010,"byte_end":4027,"line_start":120,"line_end":120,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4028,"byte_end":4031,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ You can control the way `structopt` translates your struct into an actual","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4032,"byte_end":4109,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ [`clap::App`] invocation via `#[structopt(...)]` attributes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4110,"byte_end":4174,"line_start":123,"line_end":123,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4175,"byte_end":4178,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The attributes fall into two categories:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4179,"byte_end":4223,"line_start":125,"line_end":125,"column_start":1,"column_end":45}},{"value":"/ - `structopt`'s own [magical methods](#magical-methods).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4224,"byte_end":4284,"line_start":126,"line_end":126,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4285,"byte_end":4288,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/    They are used by `structopt` itself. They come mostly in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4289,"byte_end":4352,"line_start":128,"line_end":128,"column_start":1,"column_end":64}},{"value":"/    `attr = [\"whatever\"]` form, but some `attr(args...)` also exist.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4353,"byte_end":4424,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4425,"byte_end":4428,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ - [`raw` attributes](#raw-methods).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4429,"byte_end":4468,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4469,"byte_end":4472,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/     They represent explicit `clap::Arg/App` method calls.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4473,"byte_end":4534,"line_start":133,"line_end":133,"column_start":1,"column_end":62}},{"value":"/     They are what used to be explicit `#[structopt(raw(...))]` attrs in pre-0.3 `structopt`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4535,"byte_end":4630,"line_start":134,"line_end":134,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4631,"byte_end":4634,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Every `structopt attribute` looks like comma-separated sequence of methods:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4635,"byte_end":4714,"line_start":136,"line_end":136,"column_start":1,"column_end":80}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4715,"byte_end":4733,"line_start":137,"line_end":137,"column_start":1,"column_end":19}},{"value":"/ #[structopt(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4734,"byte_end":4750,"line_start":138,"line_end":138,"column_start":1,"column_end":17}},{"value":"/     short, // method with no arguments - always magical","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4751,"byte_end":4810,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/     long = \"--long-option\", // method with one argument","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4811,"byte_end":4870,"line_start":140,"line_end":140,"column_start":1,"column_end":60}},{"value":"/     required_if(\"out\", \"file\"), // method with one and more args","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4871,"byte_end":4939,"line_start":141,"line_end":141,"column_start":1,"column_end":69}},{"value":"/     parse(from_os_str = path::to::parser) // some magical methods have their own syntax","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":4940,"byte_end":5031,"line_start":142,"line_end":142,"column_start":1,"column_end":92}},{"value":"/ )]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5032,"byte_end":5038,"line_start":143,"line_end":143,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5039,"byte_end":5046,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5047,"byte_end":5050,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ `#[structopt(...)]` attributes can be placed on top of `struct`, `enum`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5051,"byte_end":5127,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ `struct` field or `enum` variant. Attributes on top of `struct` or `enum`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5128,"byte_end":5205,"line_start":147,"line_end":147,"column_start":1,"column_end":78}},{"value":"/ represent `clap::App` method calls, field or variant attributes correspond","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5206,"byte_end":5284,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ to `clap::Arg` method calls.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5285,"byte_end":5317,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5318,"byte_end":5321,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ In other words, the `Opt` struct from the example above","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5322,"byte_end":5381,"line_start":151,"line_end":151,"column_start":1,"column_end":60}},{"value":"/ will be turned into this (*details omitted*):","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5382,"byte_end":5431,"line_start":152,"line_end":152,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5432,"byte_end":5435,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5436,"byte_end":5443,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # use structopt::clap::{Arg, App};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5444,"byte_end":5482,"line_start":155,"line_end":155,"column_start":1,"column_end":39}},{"value":"/ App::new(\"example\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5483,"byte_end":5506,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/     .version(\"0.2.0\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5507,"byte_end":5532,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/     .about(\"An example of StructOpt usage.\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5533,"byte_end":5581,"line_start":158,"line_end":158,"column_start":1,"column_end":49}},{"value":"/ .arg(Arg::with_name(\"debug\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5582,"byte_end":5614,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/     .help(\"Activate debug mode\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5615,"byte_end":5651,"line_start":160,"line_end":160,"column_start":1,"column_end":37}},{"value":"/     .short(\"debug\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5652,"byte_end":5675,"line_start":161,"line_end":161,"column_start":1,"column_end":24}},{"value":"/     .long(\"debug\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5676,"byte_end":5699,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"/ .arg(Arg::with_name(\"speed\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5700,"byte_end":5732,"line_start":163,"line_end":163,"column_start":1,"column_end":33}},{"value":"/     .help(\"Set speed\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5733,"byte_end":5759,"line_start":164,"line_end":164,"column_start":1,"column_end":27}},{"value":"/     .short(\"v\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5760,"byte_end":5779,"line_start":165,"line_end":165,"column_start":1,"column_end":20}},{"value":"/     .long(\"velocity\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5780,"byte_end":5805,"line_start":166,"line_end":166,"column_start":1,"column_end":26}},{"value":"/     .default_value(\"42\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5806,"byte_end":5835,"line_start":167,"line_end":167,"column_start":1,"column_end":30}},{"value":"/ // and so on","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5836,"byte_end":5852,"line_start":168,"line_end":168,"column_start":1,"column_end":17}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5853,"byte_end":5860,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5861,"byte_end":5868,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5869,"byte_end":5872,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ## Raw methods","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5873,"byte_end":5891,"line_start":172,"line_end":172,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5892,"byte_end":5895,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ They are the reason why `structopt` is so flexible. **Every and each method from","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5896,"byte_end":5980,"line_start":174,"line_end":174,"column_start":1,"column_end":85}},{"value":"/ `clap::App/Arg` can be used this way!**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":5981,"byte_end":6024,"line_start":175,"line_end":175,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6025,"byte_end":6028,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6029,"byte_end":6042,"line_start":177,"line_end":177,"column_start":1,"column_end":14}},{"value":"/ #[structopt(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6043,"byte_end":6059,"line_start":178,"line_end":178,"column_start":1,"column_end":17}},{"value":"/     global = true, // name = arg form, neat for one-arg methods","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6060,"byte_end":6127,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/     required_if(\"out\", \"file\") // name(arg1, arg2, ...) form.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6128,"byte_end":6193,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/ )]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6194,"byte_end":6200,"line_start":181,"line_end":181,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6201,"byte_end":6208,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6209,"byte_end":6212,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The first form can only be used for methods which take only one argument.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6213,"byte_end":6290,"line_start":184,"line_end":184,"column_start":1,"column_end":78}},{"value":"/ The second form must be used with multi-arg methods, but can also be used with","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6291,"byte_end":6373,"line_start":185,"line_end":185,"column_start":1,"column_end":83}},{"value":"/ single-arg methods. These forms are identical otherwise.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6374,"byte_end":6434,"line_start":186,"line_end":186,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6435,"byte_end":6438,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ As long as `method_name` is not one of the magical methods -","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6439,"byte_end":6503,"line_start":188,"line_end":188,"column_start":1,"column_end":65}},{"value":"/ it will be translated into a mere method call.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6504,"byte_end":6554,"line_start":189,"line_end":189,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6555,"byte_end":6558,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ **Note:**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6559,"byte_end":6572,"line_start":191,"line_end":191,"column_start":1,"column_end":14}},{"value":"/ _________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6573,"byte_end":6594,"line_start":192,"line_end":192,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6595,"byte_end":6598,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ \"Raw methods\" are direct replacement for pre-0.3 structopt's","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6599,"byte_end":6663,"line_start":194,"line_end":194,"column_start":1,"column_end":65}},{"value":"/ `#[structopt(raw(...))]` attributes, any time you would have used a `raw()` attribute","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6664,"byte_end":6753,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/ in 0.2 you should use raw method in 0.3.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6754,"byte_end":6798,"line_start":196,"line_end":196,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6799,"byte_end":6802,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Unfortunately, old raw attributes collide with `clap::Arg::raw` method. To explicitly","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6803,"byte_end":6892,"line_start":198,"line_end":198,"column_start":1,"column_end":90}},{"value":"/ warn users of this change we allow `#[structopt(raw())]` only with `true` or `false`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6893,"byte_end":6981,"line_start":199,"line_end":199,"column_start":1,"column_end":89}},{"value":"/ literals (this method is supposed to be called only with `true` anyway).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":6982,"byte_end":7058,"line_start":200,"line_end":200,"column_start":1,"column_end":77}},{"value":"/ __________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7059,"byte_end":7081,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7082,"byte_end":7085,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Magical methods","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7086,"byte_end":7108,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7109,"byte_end":7112,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ They are the reason why `structopt` is so easy to use and convenient in most cases.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7113,"byte_end":7200,"line_start":205,"line_end":205,"column_start":1,"column_end":88}},{"value":"/ Many of them have defaults, some of them get used even if not mentioned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7201,"byte_end":7277,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7278,"byte_end":7281,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ Methods may be used on \"top level\" (on top of a `struct`, `enum` or `enum` variant)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7282,"byte_end":7369,"line_start":208,"line_end":208,"column_start":1,"column_end":88}},{"value":"/ and/or on \"field-level\" (on top of a `struct` field or *inside* of an enum variant).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7370,"byte_end":7458,"line_start":209,"line_end":209,"column_start":1,"column_end":89}},{"value":"/ Top level (non-magical) methods correspond to `App::method` calls, field-level methods","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7459,"byte_end":7549,"line_start":210,"line_end":210,"column_start":1,"column_end":91}},{"value":"/ are `Arg::method` calls.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7550,"byte_end":7578,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7579,"byte_end":7582,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7583,"byte_end":7596,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ #[structopt(top_level)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7597,"byte_end":7624,"line_start":214,"line_end":214,"column_start":1,"column_end":28}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7625,"byte_end":7641,"line_start":215,"line_end":215,"column_start":1,"column_end":17}},{"value":"/     #[structopt(field_level)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7642,"byte_end":7675,"line_start":216,"line_end":216,"column_start":1,"column_end":34}},{"value":"/     field: u32","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7676,"byte_end":7694,"line_start":217,"line_end":217,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7695,"byte_end":7700,"line_start":218,"line_end":218,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7701,"byte_end":7704,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ #[structopt(top_level)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7705,"byte_end":7732,"line_start":220,"line_end":220,"column_start":1,"column_end":28}},{"value":"/ enum Bar {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7733,"byte_end":7747,"line_start":221,"line_end":221,"column_start":1,"column_end":15}},{"value":"/     #[structopt(top_level)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7748,"byte_end":7779,"line_start":222,"line_end":222,"column_start":1,"column_end":32}},{"value":"/     Pineapple {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7780,"byte_end":7799,"line_start":223,"line_end":223,"column_start":1,"column_end":20}},{"value":"/         #[structopt(field_level)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7800,"byte_end":7837,"line_start":224,"line_end":224,"column_start":1,"column_end":38}},{"value":"/         chocolate: String","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7838,"byte_end":7867,"line_start":225,"line_end":225,"column_start":1,"column_end":30}},{"value":"/     },","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7868,"byte_end":7878,"line_start":226,"line_end":226,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7879,"byte_end":7882,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     #[structopt(top_level)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7883,"byte_end":7914,"line_start":228,"line_end":228,"column_start":1,"column_end":32}},{"value":"/     Orange,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7915,"byte_end":7930,"line_start":229,"line_end":229,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7931,"byte_end":7936,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7937,"byte_end":7944,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7945,"byte_end":7948,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ - `name`: `[name = expr]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7949,"byte_end":7978,"line_start":233,"line_end":233,"column_start":1,"column_end":30}},{"value":"/   - On top level: `App::new(expr)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":7979,"byte_end":8018,"line_start":234,"line_end":234,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8019,"byte_end":8022,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/     The binary name displayed in help messages. Defaults to the crate name given by Cargo.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8023,"byte_end":8117,"line_start":236,"line_end":236,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8118,"byte_end":8121,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/   - On field-level: `Arg::with_name(expr)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8122,"byte_end":8169,"line_start":238,"line_end":238,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8170,"byte_end":8173,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/     The name for the argument the field stands for, this name appears in help messages.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8174,"byte_end":8265,"line_start":240,"line_end":240,"column_start":1,"column_end":92}},{"value":"/     Defaults to a name, deduced from a field, see also","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8266,"byte_end":8324,"line_start":241,"line_end":241,"column_start":1,"column_end":59}},{"value":"/     [`rename_all`](#specifying-argument-types).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8325,"byte_end":8376,"line_start":242,"line_end":242,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8377,"byte_end":8380,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ - `version`: `[version = \"version\"]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8381,"byte_end":8421,"line_start":244,"line_end":244,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8422,"byte_end":8425,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/     Usable only on top level: `App::version(\"version\" or env!(CARGO_PKG_VERSION))`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8426,"byte_end":8513,"line_start":246,"line_end":246,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8514,"byte_end":8517,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/     The version displayed in help messages.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8518,"byte_end":8565,"line_start":248,"line_end":248,"column_start":1,"column_end":48}},{"value":"/     Defaults to the crate version given by Cargo. If `CARGO_PKG_VERSION` is not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8566,"byte_end":8649,"line_start":249,"line_end":249,"column_start":1,"column_end":84}},{"value":"/     set no `.version()` calls will be generated unless requested.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8650,"byte_end":8719,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8720,"byte_end":8723,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ - `no_version`: `no_version`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8724,"byte_end":8756,"line_start":252,"line_end":252,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8757,"byte_end":8760,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/     Usable only on top level. Prevents default `App::version` call, i.e","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8761,"byte_end":8836,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/     when no `version = \"version\"` mentioned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8837,"byte_end":8885,"line_start":255,"line_end":255,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8886,"byte_end":8889,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ - `author`: `author [= \"author\"]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8890,"byte_end":8927,"line_start":257,"line_end":257,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8928,"byte_end":8931,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/     Usable only on top level: `App::author(\"author\" or env!(CARGO_PKG_AUTHORS))`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":8932,"byte_end":9017,"line_start":259,"line_end":259,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9018,"byte_end":9021,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/     Author/maintainer of the binary, this name appears in help messages.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9022,"byte_end":9098,"line_start":261,"line_end":261,"column_start":1,"column_end":77}},{"value":"/     Defaults to the crate author given by cargo, but only when `author` explicitly mentioned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9099,"byte_end":9196,"line_start":262,"line_end":262,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9197,"byte_end":9200,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ - `about`: `about [= \"about\"]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9201,"byte_end":9235,"line_start":264,"line_end":264,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9236,"byte_end":9239,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/     Usable only on top level: `App::about(\"about\" or env!(CARGO_PKG_DESCRIPTION))`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9240,"byte_end":9327,"line_start":266,"line_end":266,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9328,"byte_end":9331,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/     Short description of the binary, appears in help messages.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9332,"byte_end":9398,"line_start":268,"line_end":268,"column_start":1,"column_end":67}},{"value":"/     Defaults to the crate description given by cargo,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9399,"byte_end":9456,"line_start":269,"line_end":269,"column_start":1,"column_end":58}},{"value":"/     but only when `about` explicitly mentioned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9457,"byte_end":9508,"line_start":270,"line_end":270,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9509,"byte_end":9512,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ - [`short`](#specifying-argument-types): `short [= \"short-opt-name\"]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9513,"byte_end":9586,"line_start":272,"line_end":272,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9587,"byte_end":9590,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/     Usable only on field-level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9591,"byte_end":9626,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9627,"byte_end":9630,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ - [`long`](#specifying-argument-types): `long [= \"long-opt-name\"]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9631,"byte_end":9701,"line_start":276,"line_end":276,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9702,"byte_end":9705,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/     Usable only on field-level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9706,"byte_end":9741,"line_start":278,"line_end":278,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9742,"byte_end":9745,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ - [`default_value`](#default-values): `default_value [= \"default value\"]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9746,"byte_end":9823,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9824,"byte_end":9827,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/     Usable only on field-level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9828,"byte_end":9863,"line_start":282,"line_end":282,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9864,"byte_end":9867,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ - [`rename_all`](#specifying-argument-types):","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9868,"byte_end":9917,"line_start":284,"line_end":284,"column_start":1,"column_end":50}},{"value":"/     [`rename_all = \"kebab\"/\"snake\"/\"screaming-snake\"/\"camel\"/\"pascal\"/\"verbatim\"/\"lower\"/\"upper\"]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":9918,"byte_end":10020,"line_start":285,"line_end":285,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10021,"byte_end":10024,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/     Usable both on top level and field level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10025,"byte_end":10074,"line_start":287,"line_end":287,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10075,"byte_end":10078,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ - [`parse`](#custom-string-parsers): `parse(type [= path::to::parser::fn])`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10079,"byte_end":10158,"line_start":289,"line_end":289,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10159,"byte_end":10162,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/     Usable only on field-level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10163,"byte_end":10198,"line_start":291,"line_end":291,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10199,"byte_end":10202,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ - [`skip`](#skipping-fields): `skip [= expr]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10203,"byte_end":10252,"line_start":293,"line_end":293,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10253,"byte_end":10256,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/     Usable only on field-level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10257,"byte_end":10292,"line_start":295,"line_end":295,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10293,"byte_end":10296,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ - [`flatten`](#flattening): `flatten`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10297,"byte_end":10338,"line_start":297,"line_end":297,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10339,"byte_end":10342,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/     Usable on field-level or single-typed tuple variants.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10343,"byte_end":10404,"line_start":299,"line_end":299,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10405,"byte_end":10408,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ - [`subcommand`](#subcommands): `subcommand`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10409,"byte_end":10457,"line_start":301,"line_end":301,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10458,"byte_end":10461,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/     Usable only on field-level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10462,"byte_end":10497,"line_start":303,"line_end":303,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10498,"byte_end":10501,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ - [`external_subcommand`](#external-subcommands)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10502,"byte_end":10554,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10555,"byte_end":10558,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/     Usable only on enum variants.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10559,"byte_end":10596,"line_start":307,"line_end":307,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10597,"byte_end":10600,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ - [`env`](#environment-variable-fallback): `env [= str_literal]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10601,"byte_end":10669,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10670,"byte_end":10673,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/     Usable only on field-level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10674,"byte_end":10709,"line_start":311,"line_end":311,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10710,"byte_end":10713,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ - [`rename_all_env`](#auto-deriving-environment-variables):","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10714,"byte_end":10777,"line_start":313,"line_end":313,"column_start":1,"column_end":64}},{"value":"/     [`rename_all_env = \"kebab\"/\"snake\"/\"screaming-snake\"/\"camel\"/\"pascal\"/\"verbatim\"/\"lower\"/\"upper\"]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10778,"byte_end":10884,"line_start":314,"line_end":314,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10885,"byte_end":10888,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/     Usable both on top level and field level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10889,"byte_end":10938,"line_start":316,"line_end":316,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10939,"byte_end":10942,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ - [`verbatim_doc_comment`](#doc-comment-preprocessing-and-structoptverbatim_doc_comment):","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":10943,"byte_end":11036,"line_start":318,"line_end":318,"column_start":1,"column_end":94}},{"value":"/     `verbatim_doc_comment`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11037,"byte_end":11067,"line_start":319,"line_end":319,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11068,"byte_end":11071,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     Usable both on top level and field level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11072,"byte_end":11121,"line_start":321,"line_end":321,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11122,"byte_end":11125,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ## Type magic","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11126,"byte_end":11143,"line_start":323,"line_end":323,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11144,"byte_end":11147,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ One of major things that makes `structopt` so awesome is it's type magic.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11148,"byte_end":11225,"line_start":325,"line_end":325,"column_start":1,"column_end":78}},{"value":"/ Do you want optional positional argument? Use `Option<T>`! Or perhaps optional argument","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11226,"byte_end":11317,"line_start":326,"line_end":326,"column_start":1,"column_end":92}},{"value":"/ that optionally takes value (`[--opt=[val]]`)? Use `Option<Option<T>>`!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11318,"byte_end":11393,"line_start":327,"line_end":327,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11394,"byte_end":11397,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Here is the table of types and `clap` methods they correspond to:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11398,"byte_end":11467,"line_start":329,"line_end":329,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11468,"byte_end":11471,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ Type                         | Effect                                            | Added method call to `clap::Arg`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11472,"byte_end":11591,"line_start":331,"line_end":331,"column_start":1,"column_end":120}},{"value":"/ -----------------------------|---------------------------------------------------|--------------------------------------","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11592,"byte_end":11716,"line_start":332,"line_end":332,"column_start":1,"column_end":125}},{"value":"/ `bool`                       | `true` if the flag is present                     | `.takes_value(false).multiple(false)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11717,"byte_end":11841,"line_start":333,"line_end":333,"column_start":1,"column_end":125}},{"value":"/ `Option<T: FromStr>`         | optional positional argument or option            | `.takes_value(true).multiple(false)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11842,"byte_end":11965,"line_start":334,"line_end":334,"column_start":1,"column_end":124}},{"value":"/ `Option<Option<T: FromStr>>` | optional option with optional value               | `.takes_value(true).multiple(false).min_values(0).max_values(1)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":11966,"byte_end":12117,"line_start":335,"line_end":335,"column_start":1,"column_end":152}},{"value":"/ `Vec<T: FromStr>`            | list of options or the other positional arguments | `.takes_value(true).multiple(true)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12118,"byte_end":12240,"line_start":336,"line_end":336,"column_start":1,"column_end":123}},{"value":"/ `Option<Vec<T: FromStr>`     | optional list of options                          | `.takes_values(true).multiple(true).min_values(0)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12241,"byte_end":12378,"line_start":337,"line_end":337,"column_start":1,"column_end":138}},{"value":"/ `T: FromStr`                 | required option or positional argument            | `.takes_value(true).multiple(false).required(!has_default)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12379,"byte_end":12525,"line_start":338,"line_end":338,"column_start":1,"column_end":147}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12526,"byte_end":12529,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ The `FromStr` trait is used to convert the argument to the given","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12530,"byte_end":12598,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ type, and the `Arg::validator` method is set to a method using","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12599,"byte_end":12665,"line_start":341,"line_end":341,"column_start":1,"column_end":67}},{"value":"/ `to_string()` (`FromStr::Err` must implement `std::fmt::Display`).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12666,"byte_end":12736,"line_start":342,"line_end":342,"column_start":1,"column_end":71}},{"value":"/ If you would like to use a custom string parser other than `FromStr`, see","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12737,"byte_end":12814,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ the [same titled section](#custom-string-parsers) below.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12815,"byte_end":12875,"line_start":344,"line_end":344,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12876,"byte_end":12879,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ **Important:**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12880,"byte_end":12898,"line_start":346,"line_end":346,"column_start":1,"column_end":19}},{"value":"/ _________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12899,"byte_end":12920,"line_start":347,"line_end":347,"column_start":1,"column_end":22}},{"value":"/ Pay attention that *only literal occurrence* of this types is special, for example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":12921,"byte_end":13007,"line_start":348,"line_end":348,"column_start":1,"column_end":87}},{"value":"/ `Option<T>` is special while `::std::option::Option<T>` is not.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13008,"byte_end":13075,"line_start":349,"line_end":349,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13076,"byte_end":13079,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ If you need to avoid special casing you can make a `type` alias and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13080,"byte_end":13151,"line_start":351,"line_end":351,"column_start":1,"column_end":72}},{"value":"/ use it in place of the said type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13152,"byte_end":13189,"line_start":352,"line_end":352,"column_start":1,"column_end":38}},{"value":"/ _________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13190,"byte_end":13211,"line_start":353,"line_end":353,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13212,"byte_end":13215,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ **Note:**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13216,"byte_end":13229,"line_start":355,"line_end":355,"column_start":1,"column_end":14}},{"value":"/ _________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13230,"byte_end":13251,"line_start":356,"line_end":356,"column_start":1,"column_end":22}},{"value":"/ `bool` cannot be used as positional argument unless you provide an explicit parser.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13252,"byte_end":13339,"line_start":357,"line_end":357,"column_start":1,"column_end":88}},{"value":"/ If you need a positional bool, for example to parse `true` or `false`, you must","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13340,"byte_end":13423,"line_start":358,"line_end":358,"column_start":1,"column_end":84}},{"value":"/ annotate the field with explicit [`#[structopt(parse(...))]`](#custom-string-parsers).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13424,"byte_end":13514,"line_start":359,"line_end":359,"column_start":1,"column_end":91}},{"value":"/ _________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13515,"byte_end":13536,"line_start":360,"line_end":360,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13537,"byte_end":13540,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ Thus, the `speed` argument is generated as:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13541,"byte_end":13588,"line_start":362,"line_end":362,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13589,"byte_end":13592,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13593,"byte_end":13600,"line_start":364,"line_end":364,"column_start":1,"column_end":8}},{"value":"/ # fn parse_validator<T>(_: String) -> Result<(), String> { unimplemented!() }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13601,"byte_end":13682,"line_start":365,"line_end":365,"column_start":1,"column_end":82}},{"value":"/ clap::Arg::with_name(\"speed\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13683,"byte_end":13716,"line_start":366,"line_end":366,"column_start":1,"column_end":34}},{"value":"/     .takes_value(true)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13717,"byte_end":13743,"line_start":367,"line_end":367,"column_start":1,"column_end":27}},{"value":"/     .multiple(false)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13744,"byte_end":13768,"line_start":368,"line_end":368,"column_start":1,"column_end":25}},{"value":"/     .required(false)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13769,"byte_end":13793,"line_start":369,"line_end":369,"column_start":1,"column_end":25}},{"value":"/     .validator(parse_validator::<f64>)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13794,"byte_end":13836,"line_start":370,"line_end":370,"column_start":1,"column_end":43}},{"value":"/     .short(\"v\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13837,"byte_end":13856,"line_start":371,"line_end":371,"column_start":1,"column_end":20}},{"value":"/     .long(\"velocity\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13857,"byte_end":13882,"line_start":372,"line_end":372,"column_start":1,"column_end":26}},{"value":"/     .help(\"Set speed\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13883,"byte_end":13909,"line_start":373,"line_end":373,"column_start":1,"column_end":27}},{"value":"/     .default_value(\"42\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13910,"byte_end":13939,"line_start":374,"line_end":374,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13940,"byte_end":13947,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13948,"byte_end":13951,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ ## Specifying argument types","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13952,"byte_end":13984,"line_start":377,"line_end":377,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13985,"byte_end":13988,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ There are three types of arguments that can be supplied to each","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":13989,"byte_end":14056,"line_start":379,"line_end":379,"column_start":1,"column_end":68}},{"value":"/ (sub-)command:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14057,"byte_end":14075,"line_start":380,"line_end":380,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14076,"byte_end":14079,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/  - short (e.g. `-h`),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14080,"byte_end":14105,"line_start":382,"line_end":382,"column_start":1,"column_end":26}},{"value":"/  - long (e.g. `--help`)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14106,"byte_end":14133,"line_start":383,"line_end":383,"column_start":1,"column_end":28}},{"value":"/  - and positional.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14134,"byte_end":14156,"line_start":384,"line_end":384,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14157,"byte_end":14160,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ Like clap, structopt defaults to creating positional arguments.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14161,"byte_end":14228,"line_start":386,"line_end":386,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14229,"byte_end":14232,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ If you want to generate a long argument you can specify either","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14233,"byte_end":14299,"line_start":388,"line_end":388,"column_start":1,"column_end":67}},{"value":"/ `long = $NAME`, or just `long` to get a long flag generated using","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14300,"byte_end":14369,"line_start":389,"line_end":389,"column_start":1,"column_end":70}},{"value":"/ the field name.  The generated casing style can be modified using","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14370,"byte_end":14439,"line_start":390,"line_end":390,"column_start":1,"column_end":70}},{"value":"/ the `rename_all` attribute. See the `rename_all` example for more.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14440,"byte_end":14510,"line_start":391,"line_end":391,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14511,"byte_end":14514,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ For short arguments, `short` will use the first letter of the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14515,"byte_end":14580,"line_start":393,"line_end":393,"column_start":1,"column_end":66}},{"value":"/ field name by default, but just like the long option it's also","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14581,"byte_end":14647,"line_start":394,"line_end":394,"column_start":1,"column_end":67}},{"value":"/ possible to use a custom letter through `short = $LETTER`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14648,"byte_end":14710,"line_start":395,"line_end":395,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14711,"byte_end":14714,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ If an argument is renamed using `name = $NAME` any following call to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14715,"byte_end":14787,"line_start":397,"line_end":397,"column_start":1,"column_end":73}},{"value":"/ `short` or `long` will use the new name.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14788,"byte_end":14832,"line_start":398,"line_end":398,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14833,"byte_end":14836,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ **Attention**: If these arguments are used without an explicit name","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14837,"byte_end":14908,"line_start":400,"line_end":400,"column_start":1,"column_end":72}},{"value":"/ the resulting flag is going to be renamed using `kebab-case` if the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14909,"byte_end":14980,"line_start":401,"line_end":401,"column_start":1,"column_end":72}},{"value":"/ `rename_all` attribute was not specified previously. The same is true","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":14981,"byte_end":15054,"line_start":402,"line_end":402,"column_start":1,"column_end":74}},{"value":"/ for subcommands with implicit naming through the related data structure.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15055,"byte_end":15131,"line_start":403,"line_end":403,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15132,"byte_end":15135,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15136,"byte_end":15143,"line_start":405,"line_end":405,"column_start":1,"column_end":8}},{"value":"/ use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15144,"byte_end":15173,"line_start":406,"line_end":406,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15174,"byte_end":15177,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15178,"byte_end":15202,"line_start":408,"line_end":408,"column_start":1,"column_end":25}},{"value":"/ #[structopt(rename_all = \"kebab-case\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15203,"byte_end":15246,"line_start":409,"line_end":409,"column_start":1,"column_end":44}},{"value":"/ struct Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15247,"byte_end":15263,"line_start":410,"line_end":410,"column_start":1,"column_end":17}},{"value":"/     /// This option can be specified with something like `--foo-option","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15264,"byte_end":15338,"line_start":411,"line_end":411,"column_start":1,"column_end":75}},{"value":"/     /// value` or `--foo-option=value`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15339,"byte_end":15381,"line_start":412,"line_end":412,"column_start":1,"column_end":43}},{"value":"/     #[structopt(long)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15382,"byte_end":15408,"line_start":413,"line_end":413,"column_start":1,"column_end":27}},{"value":"/     foo_option: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15409,"byte_end":15436,"line_start":414,"line_end":414,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15437,"byte_end":15440,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/     /// This option can be specified with something like `-b value` (but","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15441,"byte_end":15517,"line_start":416,"line_end":416,"column_start":1,"column_end":77}},{"value":"/     /// not `--bar-option value`).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15518,"byte_end":15556,"line_start":417,"line_end":417,"column_start":1,"column_end":39}},{"value":"/     #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15557,"byte_end":15584,"line_start":418,"line_end":418,"column_start":1,"column_end":28}},{"value":"/     bar_option: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15585,"byte_end":15612,"line_start":419,"line_end":419,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15613,"byte_end":15616,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/     /// This option can be specified either `--baz value` or `-z value`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15617,"byte_end":15693,"line_start":421,"line_end":421,"column_start":1,"column_end":77}},{"value":"/     #[structopt(short = \"z\", long = \"baz\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15694,"byte_end":15741,"line_start":422,"line_end":422,"column_start":1,"column_end":48}},{"value":"/     baz_option: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15742,"byte_end":15769,"line_start":423,"line_end":423,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15770,"byte_end":15773,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/     /// This option can be specified either by `--custom value` or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15774,"byte_end":15844,"line_start":425,"line_end":425,"column_start":1,"column_end":71}},{"value":"/     /// `-c value`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15845,"byte_end":15868,"line_start":426,"line_end":426,"column_start":1,"column_end":24}},{"value":"/     #[structopt(name = \"custom\", long, short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15869,"byte_end":15919,"line_start":427,"line_end":427,"column_start":1,"column_end":51}},{"value":"/     custom_option: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15920,"byte_end":15950,"line_start":428,"line_end":428,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15951,"byte_end":15954,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/     /// This option is positional, meaning it is the first unadorned string","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":15955,"byte_end":16034,"line_start":430,"line_end":430,"column_start":1,"column_end":80}},{"value":"/     /// you provide (multiple others could follow).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16035,"byte_end":16090,"line_start":431,"line_end":431,"column_start":1,"column_end":56}},{"value":"/     my_positional: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16091,"byte_end":16121,"line_start":432,"line_end":432,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16122,"byte_end":16125,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/     /// This option is skipped and will be filled with the default value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16126,"byte_end":16202,"line_start":434,"line_end":434,"column_start":1,"column_end":77}},{"value":"/     /// for its type (in this case 0).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16203,"byte_end":16245,"line_start":435,"line_end":435,"column_start":1,"column_end":43}},{"value":"/     #[structopt(skip)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16246,"byte_end":16272,"line_start":436,"line_end":436,"column_start":1,"column_end":27}},{"value":"/     skipped: u32,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16273,"byte_end":16294,"line_start":437,"line_end":437,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16295,"byte_end":16298,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16299,"byte_end":16304,"line_start":439,"line_end":439,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16305,"byte_end":16308,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ # Opt::from_iter(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16309,"byte_end":16330,"line_start":441,"line_end":441,"column_start":1,"column_end":22}},{"value":"/ #    &[\"test\", \"--foo-option\", \"\", \"-b\", \"\", \"--baz\", \"\", \"--custom\", \"\", \"positional\"]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16331,"byte_end":16424,"line_start":442,"line_end":442,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16425,"byte_end":16432,"line_start":443,"line_end":443,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16433,"byte_end":16436,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ ## Default values","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16437,"byte_end":16458,"line_start":445,"line_end":445,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16459,"byte_end":16462,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ In clap, default values for options can be specified via [`Arg::default_value`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16463,"byte_end":16547,"line_start":447,"line_end":447,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16548,"byte_end":16551,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ Of course, you can use as a raw method:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16552,"byte_end":16595,"line_start":449,"line_end":449,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16596,"byte_end":16603,"line_start":450,"line_end":450,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16604,"byte_end":16635,"line_start":451,"line_end":451,"column_start":1,"column_end":32}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16636,"byte_end":16660,"line_start":452,"line_end":452,"column_start":1,"column_end":25}},{"value":"/ struct Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16661,"byte_end":16677,"line_start":453,"line_end":453,"column_start":1,"column_end":17}},{"value":"/     #[structopt(default_value = \"\", long)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16678,"byte_end":16724,"line_start":454,"line_end":454,"column_start":1,"column_end":47}},{"value":"/     prefix: String","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16725,"byte_end":16747,"line_start":455,"line_end":455,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16748,"byte_end":16753,"line_start":456,"line_end":456,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16754,"byte_end":16761,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16762,"byte_end":16765,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ This is quite mundane and error-prone to type the `\"...\"` default by yourself,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16766,"byte_end":16848,"line_start":459,"line_end":459,"column_start":1,"column_end":83}},{"value":"/ especially when the Rust ecosystem uses the [`Default`] trait for that.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16849,"byte_end":16924,"line_start":460,"line_end":460,"column_start":1,"column_end":76}},{"value":"/ It would be wonderful to have `structopt` to take the `Default_default` and fill it","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":16925,"byte_end":17012,"line_start":461,"line_end":461,"column_start":1,"column_end":88}},{"value":"/ for you. And yes, `structopt` can do that.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17013,"byte_end":17059,"line_start":462,"line_end":462,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17060,"byte_end":17063,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ Unfortunately, `default_value` takes `&str` but `Default::default`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17064,"byte_end":17134,"line_start":464,"line_end":464,"column_start":1,"column_end":71}},{"value":"/ gives us some `Self` value. We need to map `Self` to `&str` somehow.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17135,"byte_end":17207,"line_start":465,"line_end":465,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17208,"byte_end":17211,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ `structopt` solves this problem via [`ToString`] trait.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17212,"byte_end":17271,"line_start":467,"line_end":467,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17272,"byte_end":17275,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ To be able to use auto-default the type must implement *both* `Default` and `ToString`:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17276,"byte_end":17367,"line_start":469,"line_end":469,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17368,"byte_end":17371,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17372,"byte_end":17379,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17380,"byte_end":17411,"line_start":472,"line_end":472,"column_start":1,"column_end":32}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17412,"byte_end":17436,"line_start":473,"line_end":473,"column_start":1,"column_end":25}},{"value":"/ struct Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17437,"byte_end":17453,"line_start":474,"line_end":474,"column_start":1,"column_end":17}},{"value":"/     // just leave the `= \"...\"` part and structopt will figure it for you","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17454,"byte_end":17531,"line_start":475,"line_end":475,"column_start":1,"column_end":78}},{"value":"/     #[structopt(default_value, long)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17532,"byte_end":17573,"line_start":476,"line_end":476,"column_start":1,"column_end":42}},{"value":"/     prefix: String // `String` implements both `Default` and `ToString`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17574,"byte_end":17649,"line_start":477,"line_end":477,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17650,"byte_end":17655,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17656,"byte_end":17663,"line_start":479,"line_end":479,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17664,"byte_end":17667,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ [`Default`]: https://doc.rust-lang.org/std/default/trait.Default.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17668,"byte_end":17741,"line_start":481,"line_end":481,"column_start":1,"column_end":74}},{"value":"/ [`ToString`]: https://doc.rust-lang.org/std/string/trait.ToString.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17742,"byte_end":17816,"line_start":482,"line_end":482,"column_start":1,"column_end":75}},{"value":"/ [`Arg::default_value`]: https://docs.rs/clap/2.33.0/clap/struct.Arg.html#method.default_value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17817,"byte_end":17914,"line_start":483,"line_end":483,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17915,"byte_end":17918,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17919,"byte_end":17922,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ ## Help messages","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17923,"byte_end":17943,"line_start":486,"line_end":486,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17944,"byte_end":17947,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ In clap, help messages for the whole binary can be specified","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":17948,"byte_end":18012,"line_start":488,"line_end":488,"column_start":1,"column_end":65}},{"value":"/ via [`App::about`] and [`App::long_about`] while help messages","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18013,"byte_end":18079,"line_start":489,"line_end":489,"column_start":1,"column_end":67}},{"value":"/ for individual arguments can be specified via [`Arg::help`] and [`Arg::long_help`]\".","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18080,"byte_end":18168,"line_start":490,"line_end":490,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18169,"byte_end":18172,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ `long_*` variants are used when user calls the program with","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18173,"byte_end":18236,"line_start":492,"line_end":492,"column_start":1,"column_end":64}},{"value":"/ `--help` and \"short\" variants are used with `-h` flag. In `structopt`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18237,"byte_end":18311,"line_start":493,"line_end":493,"column_start":1,"column_end":75}},{"value":"/ you can use them via [raw methods](#raw-methods), for example:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18312,"byte_end":18378,"line_start":494,"line_end":494,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18379,"byte_end":18382,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18383,"byte_end":18390,"line_start":496,"line_end":496,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18391,"byte_end":18422,"line_start":497,"line_end":497,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18423,"byte_end":18426,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18427,"byte_end":18451,"line_start":499,"line_end":499,"column_start":1,"column_end":25}},{"value":"/ #[structopt(about = \"I am a program and I work, just pass `-h`\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18452,"byte_end":18521,"line_start":500,"line_end":500,"column_start":1,"column_end":70}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18522,"byte_end":18538,"line_start":501,"line_end":501,"column_start":1,"column_end":17}},{"value":"/   #[structopt(short, help = \"Pass `-h` and you'll see me!\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18539,"byte_end":18603,"line_start":502,"line_end":502,"column_start":1,"column_end":65}},{"value":"/   bar: String","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18604,"byte_end":18621,"line_start":503,"line_end":503,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18622,"byte_end":18627,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18628,"byte_end":18635,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18636,"byte_end":18639,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ For convenience, doc comments can be used instead of raw methods","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18640,"byte_end":18708,"line_start":507,"line_end":507,"column_start":1,"column_end":69}},{"value":"/ (this example works exactly like the one above):","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18709,"byte_end":18761,"line_start":508,"line_end":508,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18762,"byte_end":18765,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18766,"byte_end":18773,"line_start":510,"line_end":510,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18774,"byte_end":18805,"line_start":511,"line_end":511,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18806,"byte_end":18809,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18810,"byte_end":18834,"line_start":513,"line_end":513,"column_start":1,"column_end":25}},{"value":"/ /// I am a program and I work, just pass `-h`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18835,"byte_end":18884,"line_start":514,"line_end":514,"column_start":1,"column_end":50}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18885,"byte_end":18901,"line_start":515,"line_end":515,"column_start":1,"column_end":17}},{"value":"/   /// Pass `-h` and you'll see me!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18902,"byte_end":18940,"line_start":516,"line_end":516,"column_start":1,"column_end":39}},{"value":"/   bar: String","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18941,"byte_end":18958,"line_start":517,"line_end":517,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18959,"byte_end":18964,"line_start":518,"line_end":518,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18965,"byte_end":18972,"line_start":519,"line_end":519,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18973,"byte_end":18976,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ Doc comments on [top-level](#magical-methods) will be turned into","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":18977,"byte_end":19046,"line_start":521,"line_end":521,"column_start":1,"column_end":70}},{"value":"/ `App::about/long_about` call (see below), doc comments on field-level are","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19047,"byte_end":19124,"line_start":522,"line_end":522,"column_start":1,"column_end":78}},{"value":"/ `Arg::help/long_help` calls.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19125,"byte_end":19157,"line_start":523,"line_end":523,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19158,"byte_end":19161,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ **Important:**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19162,"byte_end":19180,"line_start":525,"line_end":525,"column_start":1,"column_end":19}},{"value":"/ _________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19181,"byte_end":19202,"line_start":526,"line_end":526,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19203,"byte_end":19206,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ Raw methods have priority over doc comments!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19207,"byte_end":19255,"line_start":528,"line_end":528,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19256,"byte_end":19259,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ **Top level doc comments always generate `App::about/long_about` calls!**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19260,"byte_end":19337,"line_start":530,"line_end":530,"column_start":1,"column_end":78}},{"value":"/ If you really want to use the `App::help/long_help` methods (you likely don't),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19338,"byte_end":19421,"line_start":531,"line_end":531,"column_start":1,"column_end":84}},{"value":"/ use a raw method to override the `App::about` call generated from the doc comment.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19422,"byte_end":19508,"line_start":532,"line_end":532,"column_start":1,"column_end":87}},{"value":"/ __________________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19509,"byte_end":19531,"line_start":533,"line_end":533,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19532,"byte_end":19535,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ ### `long_help` and `--help`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19536,"byte_end":19568,"line_start":535,"line_end":535,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19569,"byte_end":19572,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ A message passed to [`App::long_about`] or [`Arg::long_help`] will be displayed whenever","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19573,"byte_end":19665,"line_start":537,"line_end":537,"column_start":1,"column_end":93}},{"value":"/ your program is called with `--help` instead of `-h`. Of course, you can","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19666,"byte_end":19742,"line_start":538,"line_end":538,"column_start":1,"column_end":77}},{"value":"/ use them via raw methods as described [above](#help-messages).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19743,"byte_end":19809,"line_start":539,"line_end":539,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19810,"byte_end":19813,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ The more convenient way is to use a so-called \"long\" doc comment:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19814,"byte_end":19883,"line_start":541,"line_end":541,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19884,"byte_end":19887,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19888,"byte_end":19895,"line_start":543,"line_end":543,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19896,"byte_end":19927,"line_start":544,"line_end":544,"column_start":1,"column_end":32}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19928,"byte_end":19952,"line_start":545,"line_end":545,"column_start":1,"column_end":25}},{"value":"/ /// Hi there, I'm Robo!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19953,"byte_end":19980,"line_start":546,"line_end":546,"column_start":1,"column_end":28}},{"value":"/ ///","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19981,"byte_end":19988,"line_start":547,"line_end":547,"column_start":1,"column_end":8}},{"value":"/ /// I like beeping, stumbling, eating your electricity,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":19989,"byte_end":20048,"line_start":548,"line_end":548,"column_start":1,"column_end":60}},{"value":"/ /// and making records of you singing in a shower.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20049,"byte_end":20103,"line_start":549,"line_end":549,"column_start":1,"column_end":55}},{"value":"/ /// Pay up, or I'll upload it to youtube!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20104,"byte_end":20149,"line_start":550,"line_end":550,"column_start":1,"column_end":46}},{"value":"/ struct Robo {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20150,"byte_end":20167,"line_start":551,"line_end":551,"column_start":1,"column_end":18}},{"value":"/     /// Call my brother SkyNet.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20168,"byte_end":20203,"line_start":552,"line_end":552,"column_start":1,"column_end":36}},{"value":"/     ///","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20204,"byte_end":20215,"line_start":553,"line_end":553,"column_start":1,"column_end":12}},{"value":"/     /// I am artificial superintelligence. I won't rest","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20216,"byte_end":20275,"line_start":554,"line_end":554,"column_start":1,"column_end":60}},{"value":"/     /// until I'll have destroyed humanity. Enjoy your","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20276,"byte_end":20334,"line_start":555,"line_end":555,"column_start":1,"column_end":59}},{"value":"/     /// pathetic existence, you mere mortals.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20335,"byte_end":20384,"line_start":556,"line_end":556,"column_start":1,"column_end":50}},{"value":"/     #[structopt(long)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20385,"byte_end":20411,"line_start":557,"line_end":557,"column_start":1,"column_end":27}},{"value":"/     kill_all_humans: bool","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20412,"byte_end":20441,"line_start":558,"line_end":558,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20442,"byte_end":20447,"line_start":559,"line_end":559,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20448,"byte_end":20455,"line_start":560,"line_end":560,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20456,"byte_end":20459,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ A long doc comment consists of three parts:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20460,"byte_end":20507,"line_start":562,"line_end":562,"column_start":1,"column_end":48}},{"value":"/ * Short summary","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20508,"byte_end":20527,"line_start":563,"line_end":563,"column_start":1,"column_end":20}},{"value":"/ * A blank line (whitespace only)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20528,"byte_end":20564,"line_start":564,"line_end":564,"column_start":1,"column_end":37}},{"value":"/ * Detailed description, all the rest","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20565,"byte_end":20605,"line_start":565,"line_end":565,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20606,"byte_end":20609,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ In other words, \"long\" doc comment consists of two or more paragraphs,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20610,"byte_end":20684,"line_start":567,"line_end":567,"column_start":1,"column_end":75}},{"value":"/ with the first being a summary and the rest being the detailed description.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20685,"byte_end":20764,"line_start":568,"line_end":568,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20765,"byte_end":20768,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ **A long comment will result in two method calls**, `help(<summary>)` and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20769,"byte_end":20846,"line_start":570,"line_end":570,"column_start":1,"column_end":78}},{"value":"/ `long_help(<whole comment>)`, so clap will display the summary with `-h`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20847,"byte_end":20923,"line_start":571,"line_end":571,"column_start":1,"column_end":77}},{"value":"/ and the whole help message on `--help` (see below).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20924,"byte_end":20979,"line_start":572,"line_end":572,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20980,"byte_end":20983,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ So, the example above will be turned into this (details omitted):","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":20984,"byte_end":21053,"line_start":574,"line_end":574,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21054,"byte_end":21061,"line_start":575,"line_end":575,"column_start":1,"column_end":8}},{"value":"/ clap::App::new(\"<name>\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21062,"byte_end":21090,"line_start":576,"line_end":576,"column_start":1,"column_end":29}},{"value":"/     .about(\"Hi there, I'm Robo!\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21091,"byte_end":21128,"line_start":577,"line_end":577,"column_start":1,"column_end":38}},{"value":"/     .long_about(\"Hi there, I'm Robo!\\n\\n\\","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21129,"byte_end":21174,"line_start":578,"line_end":578,"column_start":1,"column_end":46}},{"value":"/                  I like beeping, stumbling, eating your electricity,\\","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21175,"byte_end":21248,"line_start":579,"line_end":579,"column_start":1,"column_end":74}},{"value":"/                  and making records of you singing in a shower.\\","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21249,"byte_end":21317,"line_start":580,"line_end":580,"column_start":1,"column_end":69}},{"value":"/                  Pay up or I'll upload it to youtube!\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21318,"byte_end":21377,"line_start":581,"line_end":581,"column_start":1,"column_end":60}},{"value":"/ // args...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21378,"byte_end":21392,"line_start":582,"line_end":582,"column_start":1,"column_end":15}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21393,"byte_end":21400,"line_start":583,"line_end":583,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21401,"byte_end":21408,"line_start":584,"line_end":584,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21409,"byte_end":21412,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ ### `-h` vs `--help` (A.K.A `help()` vs `long_help()`)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21413,"byte_end":21471,"line_start":586,"line_end":586,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21472,"byte_end":21475,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ The `-h` flag is not the same as `--help`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21476,"byte_end":21522,"line_start":588,"line_end":588,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21523,"byte_end":21526,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ -h corresponds to `Arg::help/App::about` and requests short \"summary\" messages","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21527,"byte_end":21609,"line_start":590,"line_end":590,"column_start":1,"column_end":83}},{"value":"/ while --help corresponds to `Arg::long_help/App::long_about` and requests more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21610,"byte_end":21692,"line_start":591,"line_end":591,"column_start":1,"column_end":83}},{"value":"/ detailed, descriptive messages.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21693,"byte_end":21728,"line_start":592,"line_end":592,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21729,"byte_end":21732,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ It is entirely up to `clap` what happens if you used only one of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21733,"byte_end":21801,"line_start":594,"line_end":594,"column_start":1,"column_end":69}},{"value":"/ [`Arg::help`]/[`Arg::long_help`], see `clap`'s documentation for these methods.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21802,"byte_end":21885,"line_start":595,"line_end":595,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21886,"byte_end":21889,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ As of clap v2.33, if only a short message ([`Arg::help`]) or only","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21890,"byte_end":21959,"line_start":597,"line_end":597,"column_start":1,"column_end":70}},{"value":"/ a long ([`Arg::long_help`]) message is provided, clap will use it","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":21960,"byte_end":22029,"line_start":598,"line_end":598,"column_start":1,"column_end":70}},{"value":"/ for both -h and --help. The same logic applies to `about/long_about`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22030,"byte_end":22103,"line_start":599,"line_end":599,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22104,"byte_end":22107,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ ### Doc comment preprocessing and `#[structopt(verbatim_doc_comment)]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22108,"byte_end":22182,"line_start":601,"line_end":601,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22183,"byte_end":22186,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ `structopt` applies some preprocessing to doc comments to ease the most common uses:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22187,"byte_end":22275,"line_start":603,"line_end":603,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22276,"byte_end":22279,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ * Strip leading and trailing whitespace from every line, if present.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22280,"byte_end":22352,"line_start":605,"line_end":605,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22353,"byte_end":22356,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ * Strip leading and trailing blank lines, if present.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22357,"byte_end":22414,"line_start":607,"line_end":607,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22415,"byte_end":22418,"line_start":608,"line_end":608,"column_start":1,"column_end":4}},{"value":"/ * Interpret each group of non-empty lines as a word-wrapped paragraph.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22419,"byte_end":22493,"line_start":609,"line_end":609,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22494,"byte_end":22497,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/   We replace newlines within paragraphs with spaces to allow the output","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22498,"byte_end":22573,"line_start":611,"line_end":611,"column_start":1,"column_end":76}},{"value":"/   to be re-wrapped to the terminal width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22574,"byte_end":22619,"line_start":612,"line_end":612,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22620,"byte_end":22623,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ * Strip any excess blank lines so that there is exactly one per paragraph break.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22624,"byte_end":22708,"line_start":614,"line_end":614,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22709,"byte_end":22712,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ * If the first paragraph ends in exactly one period,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22713,"byte_end":22769,"line_start":616,"line_end":616,"column_start":1,"column_end":57}},{"value":"/   remove the trailing period (i.e. strip trailing periods but not trailing ellipses).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22770,"byte_end":22859,"line_start":617,"line_end":617,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22860,"byte_end":22863,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ Sometimes you don't want this preprocessing to apply, for example the comment contains","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22864,"byte_end":22954,"line_start":619,"line_end":619,"column_start":1,"column_end":91}},{"value":"/ some ASCII art or markdown tables, you would need to preserve LFs along with","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":22955,"byte_end":23035,"line_start":620,"line_end":620,"column_start":1,"column_end":81}},{"value":"/ blank lines and the leading/trailing whitespace. You can ask `structopt` to preserve them","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23036,"byte_end":23129,"line_start":621,"line_end":621,"column_start":1,"column_end":94}},{"value":"/ via `#[structopt(verbatim_doc_comment)]` attribute.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23130,"byte_end":23185,"line_start":622,"line_end":622,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23186,"byte_end":23189,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ **This attribute must be applied to each field separately**, there's no global switch.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23190,"byte_end":23280,"line_start":624,"line_end":624,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23281,"byte_end":23284,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ **Important:**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23285,"byte_end":23303,"line_start":626,"line_end":626,"column_start":1,"column_end":19}},{"value":"/ ______________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23304,"byte_end":23322,"line_start":627,"line_end":627,"column_start":1,"column_end":19}},{"value":"/ Keep in mind that `structopt` will *still* remove one leading space from each","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23323,"byte_end":23404,"line_start":628,"line_end":628,"column_start":1,"column_end":82}},{"value":"/ line, even if this attribute is present, to allow for a space between","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23405,"byte_end":23478,"line_start":629,"line_end":629,"column_start":1,"column_end":74}},{"value":"/ `///` and the content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23479,"byte_end":23505,"line_start":630,"line_end":630,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23506,"byte_end":23509,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ Also, `structopt` will *still* remove leading and trailing blank lines so","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23510,"byte_end":23587,"line_start":632,"line_end":632,"column_start":1,"column_end":78}},{"value":"/ these formats are equivalent:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23588,"byte_end":23621,"line_start":633,"line_end":633,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23622,"byte_end":23625,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23626,"byte_end":23639,"line_start":635,"line_end":635,"column_start":1,"column_end":14}},{"value":"/ /** This is a doc comment","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23640,"byte_end":23669,"line_start":636,"line_end":636,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23670,"byte_end":23673,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ Hello! */","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23674,"byte_end":23687,"line_start":638,"line_end":638,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23688,"byte_end":23691,"line_start":639,"line_end":639,"column_start":1,"column_end":4}},{"value":"/ /**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23692,"byte_end":23699,"line_start":640,"line_end":640,"column_start":1,"column_end":8}},{"value":"/ This is a doc comment","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23700,"byte_end":23725,"line_start":641,"line_end":641,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23726,"byte_end":23729,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ Hello!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23730,"byte_end":23740,"line_start":643,"line_end":643,"column_start":1,"column_end":11}},{"value":"/ */","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23741,"byte_end":23747,"line_start":644,"line_end":644,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23748,"byte_end":23751,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ /// This is a doc comment","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23752,"byte_end":23781,"line_start":646,"line_end":646,"column_start":1,"column_end":30}},{"value":"/ ///","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23782,"byte_end":23789,"line_start":647,"line_end":647,"column_start":1,"column_end":8}},{"value":"/ /// Hello!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23790,"byte_end":23804,"line_start":648,"line_end":648,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23805,"byte_end":23812,"line_start":649,"line_end":649,"column_start":1,"column_end":8}},{"value":"/ ______________","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23813,"byte_end":23831,"line_start":650,"line_end":650,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23832,"byte_end":23835,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ [`App::about`]:      https://docs.rs/clap/2/clap/struct.App.html#method.about","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23836,"byte_end":23917,"line_start":652,"line_end":652,"column_start":1,"column_end":82}},{"value":"/ [`App::long_about`]: https://docs.rs/clap/2/clap/struct.App.html#method.long_about","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":23918,"byte_end":24004,"line_start":653,"line_end":653,"column_start":1,"column_end":87}},{"value":"/ [`Arg::help`]:       https://docs.rs/clap/2/clap/struct.Arg.html#method.help","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24005,"byte_end":24085,"line_start":654,"line_end":654,"column_start":1,"column_end":81}},{"value":"/ [`Arg::long_help`]:  https://docs.rs/clap/2/clap/struct.Arg.html#method.long_help","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24086,"byte_end":24171,"line_start":655,"line_end":655,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24172,"byte_end":24175,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ ## Environment variable fallback","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24176,"byte_end":24212,"line_start":657,"line_end":657,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24213,"byte_end":24216,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ It is possible to specify an environment variable fallback option for an arguments","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24217,"byte_end":24303,"line_start":659,"line_end":659,"column_start":1,"column_end":87}},{"value":"/ so that its value is taken from the specified environment variable if not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24304,"byte_end":24381,"line_start":660,"line_end":660,"column_start":1,"column_end":78}},{"value":"/ given through the command-line:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24382,"byte_end":24417,"line_start":661,"line_end":661,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24418,"byte_end":24421,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24422,"byte_end":24429,"line_start":663,"line_end":663,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24430,"byte_end":24461,"line_start":664,"line_end":664,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24462,"byte_end":24465,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24466,"byte_end":24490,"line_start":666,"line_end":666,"column_start":1,"column_end":25}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24491,"byte_end":24507,"line_start":667,"line_end":667,"column_start":1,"column_end":17}},{"value":"/   #[structopt(short, long, env = \"PARAMETER_VALUE\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24508,"byte_end":24564,"line_start":668,"line_end":668,"column_start":1,"column_end":57}},{"value":"/   parameter_value: String","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24565,"byte_end":24594,"line_start":669,"line_end":669,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24595,"byte_end":24600,"line_start":670,"line_end":670,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24601,"byte_end":24608,"line_start":671,"line_end":671,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24609,"byte_end":24612,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ By default, values from the environment are shown in the help output (i.e. when invoking","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24613,"byte_end":24705,"line_start":673,"line_end":673,"column_start":1,"column_end":93}},{"value":"/ `--help`):","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24706,"byte_end":24720,"line_start":674,"line_end":674,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24721,"byte_end":24724,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24725,"byte_end":24737,"line_start":676,"line_end":676,"column_start":1,"column_end":13}},{"value":"/ $ cargo run -- --help","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24738,"byte_end":24763,"line_start":677,"line_end":677,"column_start":1,"column_end":26}},{"value":"/ ...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24764,"byte_end":24771,"line_start":678,"line_end":678,"column_start":1,"column_end":8}},{"value":"/ OPTIONS:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24772,"byte_end":24784,"line_start":679,"line_end":679,"column_start":1,"column_end":13}},{"value":"/   -p, --parameter-value <parameter-value>     [env: PARAMETER_VALUE=env_value]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24785,"byte_end":24867,"line_start":680,"line_end":680,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24868,"byte_end":24875,"line_start":681,"line_end":681,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24876,"byte_end":24879,"line_start":682,"line_end":682,"column_start":1,"column_end":4}},{"value":"/ In some cases this may be undesirable, for example when being used for passing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24880,"byte_end":24962,"line_start":683,"line_end":683,"column_start":1,"column_end":83}},{"value":"/ credentials or secret tokens. In those cases you can use `hide_env_values` to avoid","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":24963,"byte_end":25050,"line_start":684,"line_end":684,"column_start":1,"column_end":88}},{"value":"/ having structopt emit the actual secret values:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25051,"byte_end":25102,"line_start":685,"line_end":685,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25103,"byte_end":25110,"line_start":686,"line_end":686,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25111,"byte_end":25142,"line_start":687,"line_end":687,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25143,"byte_end":25146,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25147,"byte_end":25171,"line_start":689,"line_end":689,"column_start":1,"column_end":25}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25172,"byte_end":25188,"line_start":690,"line_end":690,"column_start":1,"column_end":17}},{"value":"/   #[structopt(long = \"secret\", env = \"SECRET_VALUE\", hide_env_values = true)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25189,"byte_end":25270,"line_start":691,"line_end":691,"column_start":1,"column_end":82}},{"value":"/   secret_value: String","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25271,"byte_end":25297,"line_start":692,"line_end":692,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25298,"byte_end":25303,"line_start":693,"line_end":693,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25304,"byte_end":25311,"line_start":694,"line_end":694,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25312,"byte_end":25315,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ ### Auto-deriving environment variables","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25316,"byte_end":25359,"line_start":696,"line_end":696,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25360,"byte_end":25363,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ Environment variables tend to be called after the corresponding `struct`'s field,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25364,"byte_end":25449,"line_start":698,"line_end":698,"column_start":1,"column_end":86}},{"value":"/ as in example above. The field is `secret_value` and the env var is \"SECRET_VALUE\";","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25450,"byte_end":25537,"line_start":699,"line_end":699,"column_start":1,"column_end":88}},{"value":"/ the name is the same, except casing is different.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25538,"byte_end":25591,"line_start":700,"line_end":700,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25592,"byte_end":25595,"line_start":701,"line_end":701,"column_start":1,"column_end":4}},{"value":"/ It's pretty tedious and error-prone to type the same name twice,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25596,"byte_end":25664,"line_start":702,"line_end":702,"column_start":1,"column_end":69}},{"value":"/ so you can ask `structopt` to do that for you.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25665,"byte_end":25715,"line_start":703,"line_end":703,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25716,"byte_end":25719,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25720,"byte_end":25727,"line_start":705,"line_end":705,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25728,"byte_end":25759,"line_start":706,"line_end":706,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25760,"byte_end":25763,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25764,"byte_end":25788,"line_start":708,"line_end":708,"column_start":1,"column_end":25}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25789,"byte_end":25805,"line_start":709,"line_end":709,"column_start":1,"column_end":17}},{"value":"/   #[structopt(long = \"secret\", env)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25806,"byte_end":25846,"line_start":710,"line_end":710,"column_start":1,"column_end":41}},{"value":"/   secret_value: String","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25847,"byte_end":25873,"line_start":711,"line_end":711,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25874,"byte_end":25879,"line_start":712,"line_end":712,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25880,"byte_end":25887,"line_start":713,"line_end":713,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25888,"byte_end":25891,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ It works just like `#[structopt(short/long)]`: if `env` is not set to some concrete","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25892,"byte_end":25979,"line_start":715,"line_end":715,"column_start":1,"column_end":88}},{"value":"/ value the value will be derived from the field's name. This is controlled by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":25980,"byte_end":26060,"line_start":716,"line_end":716,"column_start":1,"column_end":81}},{"value":"/ `#[structopt(rename_all_env)]`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26061,"byte_end":26096,"line_start":717,"line_end":717,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26097,"byte_end":26100,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ `rename_all_env` works exactly as `rename_all` (including overriding)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26101,"byte_end":26174,"line_start":719,"line_end":719,"column_start":1,"column_end":74}},{"value":"/ except default casing is `SCREAMING_SNAKE_CASE` instead of `kebab-case`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26175,"byte_end":26251,"line_start":720,"line_end":720,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26252,"byte_end":26255,"line_start":721,"line_end":721,"column_start":1,"column_end":4}},{"value":"/ ## Skipping fields","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26256,"byte_end":26278,"line_start":722,"line_end":722,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26279,"byte_end":26282,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ Sometimes you may want to add a field to your `Opt` struct that is not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26283,"byte_end":26357,"line_start":724,"line_end":724,"column_start":1,"column_end":75}},{"value":"/ a command line option and `clap` should know nothing about it. You can ask","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26358,"byte_end":26436,"line_start":725,"line_end":725,"column_start":1,"column_end":79}},{"value":"/ `structopt` to skip the field entirely via `#[structopt(skip = value)]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26437,"byte_end":26512,"line_start":726,"line_end":726,"column_start":1,"column_end":76}},{"value":"/ (`value` must implement `Into<FieldType>`)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26513,"byte_end":26559,"line_start":727,"line_end":727,"column_start":1,"column_end":47}},{"value":"/ or `#[structopt(skip)]` if you want assign the field with `Default::default()`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26560,"byte_end":26642,"line_start":728,"line_end":728,"column_start":1,"column_end":83}},{"value":"/ (obviously, the field's type must implement `Default`).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26643,"byte_end":26702,"line_start":729,"line_end":729,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26703,"byte_end":26706,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26707,"byte_end":26714,"line_start":731,"line_end":731,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26715,"byte_end":26746,"line_start":732,"line_end":732,"column_start":1,"column_end":32}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26747,"byte_end":26771,"line_start":733,"line_end":733,"column_start":1,"column_end":25}},{"value":"/ pub struct Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26772,"byte_end":26792,"line_start":734,"line_end":734,"column_start":1,"column_end":21}},{"value":"/     #[structopt(long, short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26793,"byte_end":26826,"line_start":735,"line_end":735,"column_start":1,"column_end":34}},{"value":"/     number: u32,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26827,"byte_end":26847,"line_start":736,"line_end":736,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26848,"byte_end":26851,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/     // these fields are to be assigned with Default::default()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26852,"byte_end":26918,"line_start":738,"line_end":738,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26919,"byte_end":26922,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/     #[structopt(skip)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26923,"byte_end":26949,"line_start":740,"line_end":740,"column_start":1,"column_end":27}},{"value":"/     k: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26950,"byte_end":26968,"line_start":741,"line_end":741,"column_start":1,"column_end":19}},{"value":"/     #[structopt(skip)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26969,"byte_end":26995,"line_start":742,"line_end":742,"column_start":1,"column_end":27}},{"value":"/     v: Vec<u32>,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":26996,"byte_end":27016,"line_start":743,"line_end":743,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27017,"byte_end":27020,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/     // these fields get set explicitly","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27021,"byte_end":27063,"line_start":745,"line_end":745,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27064,"byte_end":27067,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/     #[structopt(skip = vec![1, 2, 3])]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27068,"byte_end":27110,"line_start":747,"line_end":747,"column_start":1,"column_end":43}},{"value":"/     k2: Vec<u32>,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27111,"byte_end":27132,"line_start":748,"line_end":748,"column_start":1,"column_end":22}},{"value":"/     #[structopt(skip = \"cake\")] // &str implements Into<String>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27133,"byte_end":27200,"line_start":749,"line_end":749,"column_start":1,"column_end":68}},{"value":"/     v2: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27201,"byte_end":27220,"line_start":750,"line_end":750,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27221,"byte_end":27226,"line_start":751,"line_end":751,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27227,"byte_end":27234,"line_start":752,"line_end":752,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27235,"byte_end":27238,"line_start":753,"line_end":753,"column_start":1,"column_end":4}},{"value":"/ ## Subcommands","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27239,"byte_end":27257,"line_start":754,"line_end":754,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27258,"byte_end":27261,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ Some applications, especially large ones, split their functionality","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27262,"byte_end":27333,"line_start":756,"line_end":756,"column_start":1,"column_end":72}},{"value":"/ through the use of \"subcommands\". Each of these act somewhat like a separate","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27334,"byte_end":27414,"line_start":757,"line_end":757,"column_start":1,"column_end":81}},{"value":"/ command, but is part of the larger group.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27415,"byte_end":27460,"line_start":758,"line_end":758,"column_start":1,"column_end":46}},{"value":"/ One example is `git`, which has subcommands such as `add`, `commit`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27461,"byte_end":27533,"line_start":759,"line_end":759,"column_start":1,"column_end":73}},{"value":"/ and `clone`, to mention just a few.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27534,"byte_end":27573,"line_start":760,"line_end":760,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27574,"byte_end":27577,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ `clap` has this functionality, and `structopt` supports it through enums:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27578,"byte_end":27655,"line_start":762,"line_end":762,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27656,"byte_end":27659,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27660,"byte_end":27667,"line_start":764,"line_end":764,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27668,"byte_end":27699,"line_start":765,"line_end":765,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27700,"byte_end":27703,"line_start":766,"line_end":766,"column_start":1,"column_end":4}},{"value":"/ # use std::path::PathBuf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27704,"byte_end":27733,"line_start":767,"line_end":767,"column_start":1,"column_end":30}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27734,"byte_end":27758,"line_start":768,"line_end":768,"column_start":1,"column_end":25}},{"value":"/ #[structopt(about = \"the stupid content tracker\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27759,"byte_end":27813,"line_start":769,"line_end":769,"column_start":1,"column_end":55}},{"value":"/ enum Git {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27814,"byte_end":27828,"line_start":770,"line_end":770,"column_start":1,"column_end":15}},{"value":"/     Add {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27829,"byte_end":27842,"line_start":771,"line_end":771,"column_start":1,"column_end":14}},{"value":"/         #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27843,"byte_end":27874,"line_start":772,"line_end":772,"column_start":1,"column_end":32}},{"value":"/         interactive: bool,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27875,"byte_end":27905,"line_start":773,"line_end":773,"column_start":1,"column_end":31}},{"value":"/         #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27906,"byte_end":27937,"line_start":774,"line_end":774,"column_start":1,"column_end":32}},{"value":"/         patch: bool,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27938,"byte_end":27962,"line_start":775,"line_end":775,"column_start":1,"column_end":25}},{"value":"/         #[structopt(parse(from_os_str))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":27963,"byte_end":28007,"line_start":776,"line_end":776,"column_start":1,"column_end":45}},{"value":"/         files: Vec<PathBuf>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28008,"byte_end":28039,"line_start":777,"line_end":777,"column_start":1,"column_end":32}},{"value":"/     },","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28040,"byte_end":28050,"line_start":778,"line_end":778,"column_start":1,"column_end":11}},{"value":"/     Fetch {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28051,"byte_end":28066,"line_start":779,"line_end":779,"column_start":1,"column_end":16}},{"value":"/         #[structopt(long)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28067,"byte_end":28097,"line_start":780,"line_end":780,"column_start":1,"column_end":31}},{"value":"/         dry_run: bool,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28098,"byte_end":28124,"line_start":781,"line_end":781,"column_start":1,"column_end":27}},{"value":"/         #[structopt(long)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28125,"byte_end":28155,"line_start":782,"line_end":782,"column_start":1,"column_end":31}},{"value":"/         all: bool,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28156,"byte_end":28178,"line_start":783,"line_end":783,"column_start":1,"column_end":23}},{"value":"/         repository: Option<String>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28179,"byte_end":28217,"line_start":784,"line_end":784,"column_start":1,"column_end":39}},{"value":"/     },","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28218,"byte_end":28228,"line_start":785,"line_end":785,"column_start":1,"column_end":11}},{"value":"/     Commit {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28229,"byte_end":28245,"line_start":786,"line_end":786,"column_start":1,"column_end":17}},{"value":"/         #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28246,"byte_end":28277,"line_start":787,"line_end":787,"column_start":1,"column_end":32}},{"value":"/         message: Option<String>,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28278,"byte_end":28314,"line_start":788,"line_end":788,"column_start":1,"column_end":37}},{"value":"/         #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28315,"byte_end":28346,"line_start":789,"line_end":789,"column_start":1,"column_end":32}},{"value":"/         all: bool","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28347,"byte_end":28368,"line_start":790,"line_end":790,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28369,"byte_end":28378,"line_start":791,"line_end":791,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28379,"byte_end":28384,"line_start":792,"line_end":792,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28385,"byte_end":28392,"line_start":793,"line_end":793,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28393,"byte_end":28396,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ Using `derive(StructOpt)` on an enum instead of a struct will produce","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28397,"byte_end":28470,"line_start":795,"line_end":795,"column_start":1,"column_end":74}},{"value":"/ a `clap::App` that only takes subcommands. So `git add`, `git fetch`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28471,"byte_end":28544,"line_start":796,"line_end":796,"column_start":1,"column_end":74}},{"value":"/ and `git commit` would be commands allowed for the above example.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28545,"byte_end":28614,"line_start":797,"line_end":797,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28615,"byte_end":28618,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ `structopt` also provides support for applications where certain flags","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28619,"byte_end":28693,"line_start":799,"line_end":799,"column_start":1,"column_end":75}},{"value":"/ need to apply to all subcommands, as well as nested subcommands:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28694,"byte_end":28762,"line_start":800,"line_end":800,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28763,"byte_end":28766,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28767,"byte_end":28774,"line_start":802,"line_end":802,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28775,"byte_end":28806,"line_start":803,"line_end":803,"column_start":1,"column_end":32}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28807,"byte_end":28831,"line_start":804,"line_end":804,"column_start":1,"column_end":25}},{"value":"/ struct MakeCookie {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28832,"byte_end":28855,"line_start":805,"line_end":805,"column_start":1,"column_end":24}},{"value":"/     #[structopt(name = \"supervisor\", default_value = \"Puck\", long = \"supervisor\")]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28856,"byte_end":28942,"line_start":806,"line_end":806,"column_start":1,"column_end":87}},{"value":"/     supervising_faerie: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28943,"byte_end":28978,"line_start":807,"line_end":807,"column_start":1,"column_end":36}},{"value":"/     /// The faerie tree this cookie is being made in.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":28979,"byte_end":29036,"line_start":808,"line_end":808,"column_start":1,"column_end":58}},{"value":"/     tree: Option<String>,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29037,"byte_end":29066,"line_start":809,"line_end":809,"column_start":1,"column_end":30}},{"value":"/     #[structopt(subcommand)]  // Note that we mark a field as a subcommand","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29067,"byte_end":29145,"line_start":810,"line_end":810,"column_start":1,"column_end":79}},{"value":"/     cmd: Command","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29146,"byte_end":29166,"line_start":811,"line_end":811,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29167,"byte_end":29172,"line_start":812,"line_end":812,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29173,"byte_end":29176,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29177,"byte_end":29201,"line_start":814,"line_end":814,"column_start":1,"column_end":25}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29202,"byte_end":29220,"line_start":815,"line_end":815,"column_start":1,"column_end":19}},{"value":"/     /// Pound acorns into flour for cookie dough.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29221,"byte_end":29274,"line_start":816,"line_end":816,"column_start":1,"column_end":54}},{"value":"/     Pound {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29275,"byte_end":29290,"line_start":817,"line_end":817,"column_start":1,"column_end":16}},{"value":"/         acorns: u32","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29291,"byte_end":29314,"line_start":818,"line_end":818,"column_start":1,"column_end":24}},{"value":"/     },","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29315,"byte_end":29325,"line_start":819,"line_end":819,"column_start":1,"column_end":11}},{"value":"/     /// Add magical sparkles -- the secret ingredient!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29326,"byte_end":29384,"line_start":820,"line_end":820,"column_start":1,"column_end":59}},{"value":"/     Sparkle {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29385,"byte_end":29402,"line_start":821,"line_end":821,"column_start":1,"column_end":18}},{"value":"/         #[structopt(short, parse(from_occurrences))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29403,"byte_end":29459,"line_start":822,"line_end":822,"column_start":1,"column_end":57}},{"value":"/         magicality: u64,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29460,"byte_end":29488,"line_start":823,"line_end":823,"column_start":1,"column_end":29}},{"value":"/         #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29489,"byte_end":29520,"line_start":824,"line_end":824,"column_start":1,"column_end":32}},{"value":"/         color: String","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29521,"byte_end":29546,"line_start":825,"line_end":825,"column_start":1,"column_end":26}},{"value":"/     },","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29547,"byte_end":29557,"line_start":826,"line_end":826,"column_start":1,"column_end":11}},{"value":"/     Finish(Finish),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29558,"byte_end":29581,"line_start":827,"line_end":827,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29582,"byte_end":29587,"line_start":828,"line_end":828,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29588,"byte_end":29591,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ // Subcommand can also be externalized by using a 1-uple enum variant","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29592,"byte_end":29665,"line_start":830,"line_end":830,"column_start":1,"column_end":74}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29666,"byte_end":29690,"line_start":831,"line_end":831,"column_start":1,"column_end":25}},{"value":"/ struct Finish {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29691,"byte_end":29710,"line_start":832,"line_end":832,"column_start":1,"column_end":20}},{"value":"/     #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29711,"byte_end":29738,"line_start":833,"line_end":833,"column_start":1,"column_end":28}},{"value":"/     time: u32,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29739,"byte_end":29757,"line_start":834,"line_end":834,"column_start":1,"column_end":19}},{"value":"/     #[structopt(subcommand)]  // Note that we mark a field as a subcommand","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29758,"byte_end":29836,"line_start":835,"line_end":835,"column_start":1,"column_end":79}},{"value":"/     finish_type: FinishType","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29837,"byte_end":29868,"line_start":836,"line_end":836,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29869,"byte_end":29874,"line_start":837,"line_end":837,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29875,"byte_end":29878,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ // subsubcommand!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29879,"byte_end":29900,"line_start":839,"line_end":839,"column_start":1,"column_end":22}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29901,"byte_end":29925,"line_start":840,"line_end":840,"column_start":1,"column_end":25}},{"value":"/ enum FinishType {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29926,"byte_end":29947,"line_start":841,"line_end":841,"column_start":1,"column_end":22}},{"value":"/     Glaze {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29948,"byte_end":29963,"line_start":842,"line_end":842,"column_start":1,"column_end":16}},{"value":"/         applications: u32","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29964,"byte_end":29993,"line_start":843,"line_end":843,"column_start":1,"column_end":30}},{"value":"/     },","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":29994,"byte_end":30004,"line_start":844,"line_end":844,"column_start":1,"column_end":11}},{"value":"/     Powder {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30005,"byte_end":30021,"line_start":845,"line_end":845,"column_start":1,"column_end":17}},{"value":"/         flavor: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30022,"byte_end":30049,"line_start":846,"line_end":846,"column_start":1,"column_end":28}},{"value":"/         dips: u32","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30050,"byte_end":30071,"line_start":847,"line_end":847,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30072,"byte_end":30081,"line_start":848,"line_end":848,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30082,"byte_end":30087,"line_start":849,"line_end":849,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30088,"byte_end":30095,"line_start":850,"line_end":850,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30096,"byte_end":30099,"line_start":851,"line_end":851,"column_start":1,"column_end":4}},{"value":"/ Marking a field with `structopt(subcommand)` will add the subcommands of the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30100,"byte_end":30180,"line_start":852,"line_end":852,"column_start":1,"column_end":81}},{"value":"/ designated enum to the current `clap::App`. The designated enum *must* also","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30181,"byte_end":30260,"line_start":853,"line_end":853,"column_start":1,"column_end":80}},{"value":"/ be derived `StructOpt`. So the above example would take the following","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30261,"byte_end":30334,"line_start":854,"line_end":854,"column_start":1,"column_end":74}},{"value":"/ commands:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30335,"byte_end":30348,"line_start":855,"line_end":855,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30349,"byte_end":30352,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ + `make-cookie pound 50`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30353,"byte_end":30381,"line_start":857,"line_end":857,"column_start":1,"column_end":29}},{"value":"/ + `make-cookie sparkle -mmm --color \"green\"`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30382,"byte_end":30430,"line_start":858,"line_end":858,"column_start":1,"column_end":49}},{"value":"/ + `make-cookie finish 130 glaze 3`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30431,"byte_end":30469,"line_start":859,"line_end":859,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30470,"byte_end":30473,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ ### Optional subcommands","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30474,"byte_end":30502,"line_start":861,"line_end":861,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30503,"byte_end":30506,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ Subcommands may be optional:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30507,"byte_end":30539,"line_start":863,"line_end":863,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30540,"byte_end":30543,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30544,"byte_end":30551,"line_start":865,"line_end":865,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30552,"byte_end":30583,"line_start":866,"line_end":866,"column_start":1,"column_end":32}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30584,"byte_end":30608,"line_start":867,"line_end":867,"column_start":1,"column_end":25}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30609,"byte_end":30625,"line_start":868,"line_end":868,"column_start":1,"column_end":17}},{"value":"/     file: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30626,"byte_end":30647,"line_start":869,"line_end":869,"column_start":1,"column_end":22}},{"value":"/     #[structopt(subcommand)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30648,"byte_end":30680,"line_start":870,"line_end":870,"column_start":1,"column_end":33}},{"value":"/     cmd: Option<Command>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30681,"byte_end":30709,"line_start":871,"line_end":871,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30710,"byte_end":30715,"line_start":872,"line_end":872,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30716,"byte_end":30719,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30720,"byte_end":30744,"line_start":874,"line_end":874,"column_start":1,"column_end":25}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30745,"byte_end":30763,"line_start":875,"line_end":875,"column_start":1,"column_end":19}},{"value":"/     Bar,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30764,"byte_end":30776,"line_start":876,"line_end":876,"column_start":1,"column_end":13}},{"value":"/     Baz,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30777,"byte_end":30789,"line_start":877,"line_end":877,"column_start":1,"column_end":13}},{"value":"/     Quux","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30790,"byte_end":30802,"line_start":878,"line_end":878,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30803,"byte_end":30808,"line_start":879,"line_end":879,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30809,"byte_end":30816,"line_start":880,"line_end":880,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30817,"byte_end":30820,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ ### External subcommands","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30821,"byte_end":30849,"line_start":882,"line_end":882,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30850,"byte_end":30853,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ Sometimes you want to support not only the set of well-known subcommands","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30854,"byte_end":30930,"line_start":884,"line_end":884,"column_start":1,"column_end":77}},{"value":"/ but you also want to allow other, user-driven subcommands. `clap` supports","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":30931,"byte_end":31009,"line_start":885,"line_end":885,"column_start":1,"column_end":79}},{"value":"/ this via [`AppSettings::AllowExternalSubcommands`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31010,"byte_end":31065,"line_start":886,"line_end":886,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31066,"byte_end":31069,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ `structopt` provides it's own dedicated syntax for that:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31070,"byte_end":31130,"line_start":888,"line_end":888,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31131,"byte_end":31134,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31135,"byte_end":31142,"line_start":890,"line_end":890,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31143,"byte_end":31174,"line_start":891,"line_end":891,"column_start":1,"column_end":32}},{"value":"/ #[derive(Debug, PartialEq, StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31175,"byte_end":31217,"line_start":892,"line_end":892,"column_start":1,"column_end":43}},{"value":"/ struct Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31218,"byte_end":31234,"line_start":893,"line_end":893,"column_start":1,"column_end":17}},{"value":"/     #[structopt(subcommand)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31235,"byte_end":31267,"line_start":894,"line_end":894,"column_start":1,"column_end":33}},{"value":"/     sub: Subcommands,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31268,"byte_end":31293,"line_start":895,"line_end":895,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31294,"byte_end":31299,"line_start":896,"line_end":896,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31300,"byte_end":31303,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31304,"byte_end":31346,"line_start":898,"line_end":898,"column_start":1,"column_end":43}},{"value":"/ enum Subcommands {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31347,"byte_end":31369,"line_start":899,"line_end":899,"column_start":1,"column_end":23}},{"value":"/     // normal subcommand","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31370,"byte_end":31398,"line_start":900,"line_end":900,"column_start":1,"column_end":29}},{"value":"/     Add,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31399,"byte_end":31411,"line_start":901,"line_end":901,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31412,"byte_end":31415,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/     // `external_subcommand` tells structopt to put","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31416,"byte_end":31471,"line_start":903,"line_end":903,"column_start":1,"column_end":56}},{"value":"/     // all the extra arguments into this Vec","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31472,"byte_end":31520,"line_start":904,"line_end":904,"column_start":1,"column_end":49}},{"value":"/     #[structopt(external_subcommand)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31521,"byte_end":31562,"line_start":905,"line_end":905,"column_start":1,"column_end":42}},{"value":"/     Other(Vec<String>),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31563,"byte_end":31590,"line_start":906,"line_end":906,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31591,"byte_end":31596,"line_start":907,"line_end":907,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31597,"byte_end":31600,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ // normal subcommand","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31601,"byte_end":31625,"line_start":909,"line_end":909,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31626,"byte_end":31641,"line_start":910,"line_end":910,"column_start":1,"column_end":16}},{"value":"/     Opt::from_iter(&[\"test\", \"add\"]),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31642,"byte_end":31683,"line_start":911,"line_end":911,"column_start":1,"column_end":42}},{"value":"/     Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31684,"byte_end":31697,"line_start":912,"line_end":912,"column_start":1,"column_end":14}},{"value":"/         sub: Subcommands::Add","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31698,"byte_end":31731,"line_start":913,"line_end":913,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31732,"byte_end":31741,"line_start":914,"line_end":914,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31742,"byte_end":31748,"line_start":915,"line_end":915,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31749,"byte_end":31752,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31753,"byte_end":31768,"line_start":917,"line_end":917,"column_start":1,"column_end":16}},{"value":"/     Opt::from_iter(&[\"test\", \"git\", \"status\"]),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31769,"byte_end":31820,"line_start":918,"line_end":918,"column_start":1,"column_end":52}},{"value":"/     Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31821,"byte_end":31834,"line_start":919,"line_end":919,"column_start":1,"column_end":14}},{"value":"/         sub: Subcommands::Other(vec![\"git\".into(), \"status\".into()])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31835,"byte_end":31907,"line_start":920,"line_end":920,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31908,"byte_end":31917,"line_start":921,"line_end":921,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31918,"byte_end":31924,"line_start":922,"line_end":922,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31925,"byte_end":31928,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ // Please note that if you'd wanted to allow \"no subcommands at all\" case","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":31929,"byte_end":32006,"line_start":924,"line_end":924,"column_start":1,"column_end":78}},{"value":"/ // you should have used `sub: Option<Subcommands>` above","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32007,"byte_end":32067,"line_start":925,"line_end":925,"column_start":1,"column_end":61}},{"value":"/ assert!(Opt::from_iter_safe(&[\"test\"]).is_err());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32068,"byte_end":32121,"line_start":926,"line_end":926,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32122,"byte_end":32129,"line_start":927,"line_end":927,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32130,"byte_end":32133,"line_start":928,"line_end":928,"column_start":1,"column_end":4}},{"value":"/ In other words, you just add an extra tuple variant marked with","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32134,"byte_end":32201,"line_start":929,"line_end":929,"column_start":1,"column_end":68}},{"value":"/ `#[structopt(subcommand)]`, and its type must be either","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32202,"byte_end":32261,"line_start":930,"line_end":930,"column_start":1,"column_end":60}},{"value":"/ `Vec<String>` or `Vec<OsString>`. `structopt` will detect `String` in this context","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32262,"byte_end":32348,"line_start":931,"line_end":931,"column_start":1,"column_end":87}},{"value":"/ and use appropriate `clap` API.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32349,"byte_end":32384,"line_start":932,"line_end":932,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32385,"byte_end":32388,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ [`AppSettings::AllowExternalSubcommands`]: https://docs.rs/clap/2.32.0/clap/enum.AppSettings.html#variant.AllowExternalSubcommands","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32389,"byte_end":32523,"line_start":934,"line_end":934,"column_start":1,"column_end":135}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32524,"byte_end":32527,"line_start":935,"line_end":935,"column_start":1,"column_end":4}},{"value":"/ ### Flattening subcommands","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32528,"byte_end":32558,"line_start":936,"line_end":936,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32559,"byte_end":32562,"line_start":937,"line_end":937,"column_start":1,"column_end":4}},{"value":"/ It is also possible to combine multiple enums of subcommands into one.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32563,"byte_end":32637,"line_start":938,"line_end":938,"column_start":1,"column_end":75}},{"value":"/ All the subcommands will be on the same level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32638,"byte_end":32688,"line_start":939,"line_end":939,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32689,"byte_end":32692,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32693,"byte_end":32700,"line_start":941,"line_end":941,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32701,"byte_end":32732,"line_start":942,"line_end":942,"column_start":1,"column_end":32}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32733,"byte_end":32757,"line_start":943,"line_end":943,"column_start":1,"column_end":25}},{"value":"/ enum BaseCli {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32758,"byte_end":32776,"line_start":944,"line_end":944,"column_start":1,"column_end":19}},{"value":"/     Ghost10 {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32777,"byte_end":32794,"line_start":945,"line_end":945,"column_start":1,"column_end":18}},{"value":"/         arg1: i32,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32795,"byte_end":32817,"line_start":946,"line_end":946,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32818,"byte_end":32827,"line_start":947,"line_end":947,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32828,"byte_end":32833,"line_start":948,"line_end":948,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32834,"byte_end":32837,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32838,"byte_end":32862,"line_start":950,"line_end":950,"column_start":1,"column_end":25}},{"value":"/ enum Opt {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32863,"byte_end":32877,"line_start":951,"line_end":951,"column_start":1,"column_end":15}},{"value":"/     #[structopt(flatten)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32878,"byte_end":32907,"line_start":952,"line_end":952,"column_start":1,"column_end":30}},{"value":"/     BaseCli(BaseCli),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32908,"byte_end":32933,"line_start":953,"line_end":953,"column_start":1,"column_end":26}},{"value":"/     Dex {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32934,"byte_end":32947,"line_start":954,"line_end":954,"column_start":1,"column_end":14}},{"value":"/         arg2: i32,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32948,"byte_end":32970,"line_start":955,"line_end":955,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32971,"byte_end":32980,"line_start":956,"line_end":956,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32981,"byte_end":32986,"line_start":957,"line_end":957,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32987,"byte_end":32994,"line_start":958,"line_end":958,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32995,"byte_end":32998,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":32999,"byte_end":33011,"line_start":960,"line_end":960,"column_start":1,"column_end":13}},{"value":"/ cli ghost10 42","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33012,"byte_end":33030,"line_start":961,"line_end":961,"column_start":1,"column_end":19}},{"value":"/ cli dex 42","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33031,"byte_end":33045,"line_start":962,"line_end":962,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33046,"byte_end":33053,"line_start":963,"line_end":963,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33054,"byte_end":33057,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ ## Flattening","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33058,"byte_end":33075,"line_start":965,"line_end":965,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33076,"byte_end":33079,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ It can sometimes be useful to group related arguments in a substruct,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33080,"byte_end":33153,"line_start":967,"line_end":967,"column_start":1,"column_end":74}},{"value":"/ while keeping the command-line interface flat. In these cases you can mark","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33154,"byte_end":33232,"line_start":968,"line_end":968,"column_start":1,"column_end":79}},{"value":"/ a field as `flatten` and give it another type that derives `StructOpt`:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33233,"byte_end":33308,"line_start":969,"line_end":969,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33309,"byte_end":33312,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33313,"byte_end":33320,"line_start":971,"line_end":971,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33321,"byte_end":33352,"line_start":972,"line_end":972,"column_start":1,"column_end":32}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33353,"byte_end":33377,"line_start":973,"line_end":973,"column_start":1,"column_end":25}},{"value":"/ struct Cmdline {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33378,"byte_end":33398,"line_start":974,"line_end":974,"column_start":1,"column_end":21}},{"value":"/     /// switch on verbosity","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33399,"byte_end":33430,"line_start":975,"line_end":975,"column_start":1,"column_end":32}},{"value":"/     #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33431,"byte_end":33458,"line_start":976,"line_end":976,"column_start":1,"column_end":28}},{"value":"/     verbose: bool,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33459,"byte_end":33481,"line_start":977,"line_end":977,"column_start":1,"column_end":23}},{"value":"/     #[structopt(flatten)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33482,"byte_end":33511,"line_start":978,"line_end":978,"column_start":1,"column_end":30}},{"value":"/     daemon_opts: DaemonOpts,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33512,"byte_end":33544,"line_start":979,"line_end":979,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33545,"byte_end":33550,"line_start":980,"line_end":980,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33551,"byte_end":33554,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33555,"byte_end":33579,"line_start":982,"line_end":982,"column_start":1,"column_end":25}},{"value":"/ struct DaemonOpts {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33580,"byte_end":33603,"line_start":983,"line_end":983,"column_start":1,"column_end":24}},{"value":"/     /// daemon user","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33604,"byte_end":33627,"line_start":984,"line_end":984,"column_start":1,"column_end":24}},{"value":"/     #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33628,"byte_end":33655,"line_start":985,"line_end":985,"column_start":1,"column_end":28}},{"value":"/     user: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33656,"byte_end":33677,"line_start":986,"line_end":986,"column_start":1,"column_end":22}},{"value":"/     /// daemon group","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33678,"byte_end":33702,"line_start":987,"line_end":987,"column_start":1,"column_end":25}},{"value":"/     #[structopt(short)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33703,"byte_end":33730,"line_start":988,"line_end":988,"column_start":1,"column_end":28}},{"value":"/     group: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33731,"byte_end":33753,"line_start":989,"line_end":989,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33754,"byte_end":33759,"line_start":990,"line_end":990,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33760,"byte_end":33767,"line_start":991,"line_end":991,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33768,"byte_end":33771,"line_start":992,"line_end":992,"column_start":1,"column_end":4}},{"value":"/ In this example, the derived `Cmdline` parser will support the options `-v`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33772,"byte_end":33852,"line_start":993,"line_end":993,"column_start":1,"column_end":81}},{"value":"/ `-u` and `-g`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33853,"byte_end":33871,"line_start":994,"line_end":994,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33872,"byte_end":33875,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ This feature also makes it possible to define a `StructOpt` struct in a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33876,"byte_end":33951,"line_start":996,"line_end":996,"column_start":1,"column_end":76}},{"value":"/ library, parse the corresponding arguments in the main argument parser, and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":33952,"byte_end":34031,"line_start":997,"line_end":997,"column_start":1,"column_end":80}},{"value":"/ pass off this struct to a handler provided by that library.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34032,"byte_end":34095,"line_start":998,"line_end":998,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34096,"byte_end":34099,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ ## Custom string parsers","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34100,"byte_end":34128,"line_start":1000,"line_end":1000,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34129,"byte_end":34132,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ If the field type does not have a `FromStr` implementation, or you would","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34133,"byte_end":34209,"line_start":1002,"line_end":1002,"column_start":1,"column_end":77}},{"value":"/ like to provide a custom parsing scheme other than `FromStr`, you may","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34210,"byte_end":34283,"line_start":1003,"line_end":1003,"column_start":1,"column_end":74}},{"value":"/ provide a custom string parser using `parse(...)` like this:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34284,"byte_end":34348,"line_start":1004,"line_end":1004,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34349,"byte_end":34352,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34353,"byte_end":34360,"line_start":1006,"line_end":1006,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34361,"byte_end":34392,"line_start":1007,"line_end":1007,"column_start":1,"column_end":32}},{"value":"/ use std::num::ParseIntError;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34393,"byte_end":34425,"line_start":1008,"line_end":1008,"column_start":1,"column_end":33}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34426,"byte_end":34453,"line_start":1009,"line_end":1009,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34454,"byte_end":34457,"line_start":1010,"line_end":1010,"column_start":1,"column_end":4}},{"value":"/ fn parse_hex(src: &str) -> Result<u32, ParseIntError> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34458,"byte_end":34517,"line_start":1011,"line_end":1011,"column_start":1,"column_end":60}},{"value":"/     u32::from_str_radix(src, 16)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34518,"byte_end":34554,"line_start":1012,"line_end":1012,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34555,"byte_end":34560,"line_start":1013,"line_end":1013,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34561,"byte_end":34564,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34565,"byte_end":34589,"line_start":1015,"line_end":1015,"column_start":1,"column_end":25}},{"value":"/ struct HexReader {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34590,"byte_end":34612,"line_start":1016,"line_end":1016,"column_start":1,"column_end":23}},{"value":"/     #[structopt(short, parse(try_from_str = parse_hex))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34613,"byte_end":34673,"line_start":1017,"line_end":1017,"column_start":1,"column_end":61}},{"value":"/     number: u32,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34674,"byte_end":34694,"line_start":1018,"line_end":1018,"column_start":1,"column_end":21}},{"value":"/     #[structopt(short, parse(from_os_str))]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34695,"byte_end":34742,"line_start":1019,"line_end":1019,"column_start":1,"column_end":48}},{"value":"/     output: PathBuf,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34743,"byte_end":34767,"line_start":1020,"line_end":1020,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34768,"byte_end":34773,"line_start":1021,"line_end":1021,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34774,"byte_end":34781,"line_start":1022,"line_end":1022,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34782,"byte_end":34785,"line_start":1023,"line_end":1023,"column_start":1,"column_end":4}},{"value":"/ There are five kinds of custom parsers:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34786,"byte_end":34829,"line_start":1024,"line_end":1024,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34830,"byte_end":34833,"line_start":1025,"line_end":1025,"column_start":1,"column_end":4}},{"value":"/ | Kind              | Signature                             | Default                         |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34834,"byte_end":34933,"line_start":1026,"line_end":1026,"column_start":1,"column_end":100}},{"value":"/ |-------------------|---------------------------------------|---------------------------------|","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":34934,"byte_end":35033,"line_start":1027,"line_end":1027,"column_start":1,"column_end":100}},{"value":"/ | `from_str`        | `fn(&str) -> T`                       | `::std::convert::From::from`    |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35034,"byte_end":35133,"line_start":1028,"line_end":1028,"column_start":1,"column_end":100}},{"value":"/ | `try_from_str`    | `fn(&str) -> Result<T, E>`            | `::std::str::FromStr::from_str` |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35134,"byte_end":35233,"line_start":1029,"line_end":1029,"column_start":1,"column_end":100}},{"value":"/ | `from_os_str`     | `fn(&OsStr) -> T`                     | `::std::convert::From::from`    |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35234,"byte_end":35333,"line_start":1030,"line_end":1030,"column_start":1,"column_end":100}},{"value":"/ | `try_from_os_str` | `fn(&OsStr) -> Result<T, OsString>`   | (no default function)           |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35334,"byte_end":35433,"line_start":1031,"line_end":1031,"column_start":1,"column_end":100}},{"value":"/ | `from_occurrences`| `fn(u64) -> T`                        | `value as T`                    |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35434,"byte_end":35533,"line_start":1032,"line_end":1032,"column_start":1,"column_end":100}},{"value":"/ | `from_flag`       | `fn(bool) -> T`                       | `::std::convert::From::from`    |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35534,"byte_end":35633,"line_start":1033,"line_end":1033,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35634,"byte_end":35637,"line_start":1034,"line_end":1034,"column_start":1,"column_end":4}},{"value":"/ The `from_occurrences` parser is special. Using `parse(from_occurrences)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35638,"byte_end":35715,"line_start":1035,"line_end":1035,"column_start":1,"column_end":78}},{"value":"/ results in the _number of flags occurrences_ being stored in the relevant","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35716,"byte_end":35793,"line_start":1036,"line_end":1036,"column_start":1,"column_end":78}},{"value":"/ field or being passed to the supplied function. In other words, it converts","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35794,"byte_end":35873,"line_start":1037,"line_end":1037,"column_start":1,"column_end":80}},{"value":"/ something like `-vvv` to `3`. This is equivalent to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35874,"byte_end":35929,"line_start":1038,"line_end":1038,"column_start":1,"column_end":56}},{"value":"/ `.takes_value(false).multiple(true)`. Note that the default parser can only","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":35930,"byte_end":36009,"line_start":1039,"line_end":1039,"column_start":1,"column_end":80}},{"value":"/ be used with fields of integer types (`u8`, `usize`, `i64`, etc.).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36010,"byte_end":36080,"line_start":1040,"line_end":1040,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36081,"byte_end":36084,"line_start":1041,"line_end":1041,"column_start":1,"column_end":4}},{"value":"/ The `from_flag` parser is also special. Using `parse(from_flag)` or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36085,"byte_end":36156,"line_start":1042,"line_end":1042,"column_start":1,"column_end":72}},{"value":"/ `parse(from_flag = some_func)` will result in the field being treated as a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36157,"byte_end":36235,"line_start":1043,"line_end":1043,"column_start":1,"column_end":79}},{"value":"/ flag even if it does not have type `bool`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36236,"byte_end":36282,"line_start":1044,"line_end":1044,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36283,"byte_end":36286,"line_start":1045,"line_end":1045,"column_start":1,"column_end":4}},{"value":"/ When supplying a custom string parser, `bool` will not be treated specially:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36287,"byte_end":36367,"line_start":1046,"line_end":1046,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36368,"byte_end":36371,"line_start":1047,"line_end":1047,"column_start":1,"column_end":4}},{"value":"/ Type        | Effect            | Added method call to `clap::Arg`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36372,"byte_end":36442,"line_start":1048,"line_end":1048,"column_start":1,"column_end":71}},{"value":"/ ------------|-------------------|--------------------------------------","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36443,"byte_end":36518,"line_start":1049,"line_end":1049,"column_start":1,"column_end":76}},{"value":"/ `Option<T>` | optional argument | `.takes_value(true).multiple(false)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36519,"byte_end":36593,"line_start":1050,"line_end":1050,"column_start":1,"column_end":75}},{"value":"/ `Vec<T>`    | list of arguments | `.takes_value(true).multiple(true)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36594,"byte_end":36667,"line_start":1051,"line_end":1051,"column_start":1,"column_end":74}},{"value":"/ `T`         | required argument | `.takes_value(true).multiple(false).required(!has_default)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36668,"byte_end":36765,"line_start":1052,"line_end":1052,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36766,"byte_end":36769,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ In the `try_from_*` variants, the function will run twice on valid input:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36770,"byte_end":36847,"line_start":1054,"line_end":1054,"column_start":1,"column_end":78}},{"value":"/ once to validate, and once to parse. Hence, make sure the function is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36848,"byte_end":36921,"line_start":1055,"line_end":1055,"column_start":1,"column_end":74}},{"value":"/ side-effect-free.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36922,"byte_end":36943,"line_start":1056,"line_end":1056,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36944,"byte_end":36947,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ ## Generics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36948,"byte_end":36963,"line_start":1058,"line_end":1058,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36964,"byte_end":36967,"line_start":1059,"line_end":1059,"column_start":1,"column_end":4}},{"value":"/ Generic structs and enums can be used. They require explicit trait bounds","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":36968,"byte_end":37045,"line_start":1060,"line_end":1060,"column_start":1,"column_end":78}},{"value":"/ on any generic types that will be used by the `StructOpt` derive macro. In","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37046,"byte_end":37124,"line_start":1061,"line_end":1061,"column_start":1,"column_end":79}},{"value":"/ some cases, associated types will require additional bounds. See the usage","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37125,"byte_end":37203,"line_start":1062,"line_end":1062,"column_start":1,"column_end":79}},{"value":"/ of `FromStr` below for an example of this.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37204,"byte_end":37250,"line_start":1063,"line_end":1063,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37251,"byte_end":37254,"line_start":1064,"line_end":1064,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37255,"byte_end":37262,"line_start":1065,"line_end":1065,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37263,"byte_end":37294,"line_start":1066,"line_end":1066,"column_start":1,"column_end":32}},{"value":"/ use std::{fmt, str::FromStr};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37295,"byte_end":37328,"line_start":1067,"line_end":1067,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37329,"byte_end":37332,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ // a struct with single custom argument","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37333,"byte_end":37376,"line_start":1069,"line_end":1069,"column_start":1,"column_end":44}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37377,"byte_end":37401,"line_start":1070,"line_end":1070,"column_start":1,"column_end":25}},{"value":"/ struct GenericArgs<T:FromStr> where <T as FromStr>::Err: fmt::Display + fmt::Debug {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37402,"byte_end":37490,"line_start":1071,"line_end":1071,"column_start":1,"column_end":89}},{"value":"/     generic_arg_1: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37491,"byte_end":37521,"line_start":1072,"line_end":1072,"column_start":1,"column_end":31}},{"value":"/     generic_arg_2: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37522,"byte_end":37552,"line_start":1073,"line_end":1073,"column_start":1,"column_end":31}},{"value":"/     custom_arg_1: T","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37553,"byte_end":37576,"line_start":1074,"line_end":1074,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37577,"byte_end":37582,"line_start":1075,"line_end":1075,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37583,"byte_end":37590,"line_start":1076,"line_end":1076,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37591,"byte_end":37594,"line_start":1077,"line_end":1077,"column_start":1,"column_end":4}},{"value":"/ or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37595,"byte_end":37601,"line_start":1078,"line_end":1078,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37602,"byte_end":37605,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37606,"byte_end":37613,"line_start":1080,"line_end":1080,"column_start":1,"column_end":8}},{"value":"/ # use structopt::StructOpt;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37614,"byte_end":37645,"line_start":1081,"line_end":1081,"column_start":1,"column_end":32}},{"value":"/ // a struct with multiple custom arguments in a substructure","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37646,"byte_end":37710,"line_start":1082,"line_end":1082,"column_start":1,"column_end":65}},{"value":"/ #[derive(StructOpt)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37711,"byte_end":37735,"line_start":1083,"line_end":1083,"column_start":1,"column_end":25}},{"value":"/ struct GenericArgs<T:StructOpt> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37736,"byte_end":37773,"line_start":1084,"line_end":1084,"column_start":1,"column_end":38}},{"value":"/     generic_arg_1: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37774,"byte_end":37804,"line_start":1085,"line_end":1085,"column_start":1,"column_end":31}},{"value":"/     generic_arg_2: String,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37805,"byte_end":37835,"line_start":1086,"line_end":1086,"column_start":1,"column_end":31}},{"value":"/     #[structopt(flatten)]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37836,"byte_end":37865,"line_start":1087,"line_end":1087,"column_start":1,"column_end":30}},{"value":"/     custom_args: T","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37866,"byte_end":37888,"line_start":1088,"line_end":1088,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37889,"byte_end":37894,"line_start":1089,"line_end":1089,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37895,"byte_end":37902,"line_start":1090,"line_end":1090,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":37938,"byte_end":37978,"line_start":1095,"line_end":1095,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38267,"byte_end":38276,"line_start":1112,"line_end":1112,"column_start":11,"column_end":20},"name":"StructOpt","qualname":"::StructOpt","value":"StructOpt","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23}],"decl_id":null,"docs":" A struct that is converted from command line arguments.\n","sig":null,"attributes":[{"value":"/ A struct that is converted from command line arguments.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38197,"byte_end":38256,"line_start":1111,"line_end":1111,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38345,"byte_end":38349,"line_start":1114,"line_end":1114,"column_start":8,"column_end":12},"name":"clap","qualname":"::StructOpt::clap","value":"pub fn clap<'a, 'b>() -> clap::App","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Returns [`clap::App`] corresponding to the struct.\n","sig":null,"attributes":[{"value":"/ Returns [`clap::App`] corresponding to the struct.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38283,"byte_end":38337,"line_start":1113,"line_end":1113,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38607,"byte_end":38616,"line_start":1119,"line_end":1119,"column_start":8,"column_end":17},"name":"from_clap","qualname":"::StructOpt::from_clap","value":"pub fn from_clap(&clap::ArgMatches) -> Self","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Builds the struct from [`clap::ArgMatches`]. It's guaranteed to succeed\n if `matches` originates from an `App` generated by [`StructOpt::clap`] called on\n the same type, otherwise it must panic.\n","sig":null,"attributes":[{"value":"/ Builds the struct from [`clap::ArgMatches`]. It's guaranteed to succeed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38387,"byte_end":38462,"line_start":1116,"line_end":1116,"column_start":5,"column_end":80}},{"value":"/ if `matches` originates from an `App` generated by [`StructOpt::clap`] called on","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38467,"byte_end":38551,"line_start":1117,"line_end":1117,"column_start":5,"column_end":89}},{"value":"/ the same type, otherwise it must panic.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38556,"byte_end":38599,"line_start":1118,"line_end":1118,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38850,"byte_end":38859,"line_start":1123,"line_end":1123,"column_start":8,"column_end":17},"name":"from_args","qualname":"::StructOpt::from_args","value":"pub fn from_args() -> Self where Self: Sized","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Builds the struct from the command line arguments ([`std::env::args_os`]).\n Calls [`clap::Error::exit`] on failure, printing the error message and aborting the program.\n","sig":null,"attributes":[{"value":"/ Builds the struct from the command line arguments ([`std::env::args_os`]).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38663,"byte_end":38741,"line_start":1121,"line_end":1121,"column_start":5,"column_end":83}},{"value":"/ Calls [`clap::Error::exit`] on failure, printing the error message and aborting the program.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38746,"byte_end":38842,"line_start":1122,"line_end":1122,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39228,"byte_end":39242,"line_start":1133,"line_end":1133,"column_start":8,"column_end":22},"name":"from_args_safe","qualname":"::StructOpt::from_args_safe","value":"pub fn from_args_safe() -> Result<Self, clap::Error> where Self: Sized","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Builds the struct from the command line arguments ([`std::env::args_os`]).\n Unlike [`StructOpt::from_args`], returns [`clap::Error`] on failure instead of aborting the program,\n so calling [`.exit`][clap::Error::exit] is up to you.\n","sig":null,"attributes":[{"value":"/ Builds the struct from the command line arguments ([`std::env::args_os`]).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":38971,"byte_end":39049,"line_start":1130,"line_end":1130,"column_start":5,"column_end":83}},{"value":"/ Unlike [`StructOpt::from_args`], returns [`clap::Error`] on failure instead of aborting the program,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39054,"byte_end":39158,"line_start":1131,"line_end":1131,"column_start":5,"column_end":109}},{"value":"/ so calling [`.exit`][clap::Error::exit] is up to you.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39163,"byte_end":39220,"line_start":1132,"line_end":1132,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39724,"byte_end":39733,"line_start":1147,"line_end":1147,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::StructOpt::from_iter","value":"pub fn from_iter<I>(I) -> Self where Self: Sized, I: IntoIterator,\nI::Item: Into<OsString> + Clone","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Gets the struct from any iterator such as a `Vec` of your making.\n Print the error message and quit the program in case of failure.","sig":null,"attributes":[{"value":"/ Gets the struct from any iterator such as a `Vec` of your making.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39429,"byte_end":39498,"line_start":1142,"line_end":1142,"column_start":5,"column_end":74}},{"value":"/ Print the error message and quit the program in case of failure.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39503,"byte_end":39571,"line_start":1143,"line_end":1143,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39576,"byte_end":39579,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ **NOTE**: The first argument will be parsed as the binary name unless","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39584,"byte_end":39657,"line_start":1145,"line_end":1145,"column_start":5,"column_end":78}},{"value":"/ [`clap::AppSettings::NoBinaryName`] has been used.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39662,"byte_end":39716,"line_start":1146,"line_end":1146,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40426,"byte_end":40440,"line_start":1164,"line_end":1164,"column_start":8,"column_end":22},"name":"from_iter_safe","qualname":"::StructOpt::from_iter_safe","value":"pub fn from_iter_safe<I>(I) -> Result<Self, clap::Error> where Self: Sized,\nI: IntoIterator, I::Item: Into<OsString> + Clone","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Gets the struct from any iterator such as a `Vec` of your making.","sig":null,"attributes":[{"value":"/ Gets the struct from any iterator such as a `Vec` of your making.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":39930,"byte_end":39999,"line_start":1156,"line_end":1156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40004,"byte_end":40007,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ Returns a [`clap::Error`] in case of failure. This does *not* exit in the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40012,"byte_end":40089,"line_start":1158,"line_end":1158,"column_start":5,"column_end":82}},{"value":"/ case of `--help` or `--version`, to achieve the same behavior as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40094,"byte_end":40162,"line_start":1159,"line_end":1159,"column_start":5,"column_end":73}},{"value":"/ [`from_iter()`][StructOpt::from_iter] you must call [`.exit()`][clap::Error::exit] on the error value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40167,"byte_end":40273,"line_start":1160,"line_end":1160,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40278,"byte_end":40281,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ **NOTE**: The first argument will be parsed as the binary name unless","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40286,"byte_end":40359,"line_start":1162,"line_end":1162,"column_start":5,"column_end":78}},{"value":"/ [`clap::AppSettings::NoBinaryName`] has been used.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40364,"byte_end":40418,"line_start":1163,"line_end":1163,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40757,"byte_end":40774,"line_start":1176,"line_end":1176,"column_start":11,"column_end":28},"name":"StructOptInternal","qualname":"::StructOptInternal","value":"StructOptInternal: StructOpt","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" This trait is NOT API. **SUBJECT TO CHANGE WITHOUT NOTICE!**.\n","sig":null,"attributes":[{"value":"/ This trait is NOT API. **SUBJECT TO CHANGE WITHOUT NOTICE!**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40666,"byte_end":40731,"line_start":1174,"line_end":1174,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40795,"byte_end":40807,"line_start":1177,"line_end":1177,"column_start":8,"column_end":20},"name":"augment_clap","qualname":"::StructOptInternal::augment_clap","value":"pub fn augment_clap<'a, 'b>(clap::App) -> clap::App","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40889,"byte_end":40902,"line_start":1181,"line_end":1181,"column_start":8,"column_end":21},"name":"is_subcommand","qualname":"::StructOptInternal::is_subcommand","value":"pub fn is_subcommand() -> bool","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40943,"byte_end":40958,"line_start":1185,"line_end":1185,"column_start":8,"column_end":23},"name":"from_subcommand","qualname":"::StructOptInternal::from_subcommand","value":"pub fn from_subcommand<'a, 'b>((&'b str, Option<&'b clap::ArgMatches>))\n-> Option<Self> where Self: std::marker::Sized","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":41139,"byte_end":41142,"line_start":1193,"line_end":1193,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":41405,"byte_end":41408,"line_start":1203,"line_end":1203,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":40776,"byte_end":40785,"line_start":1176,"line_end":1176,"column_start":30,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":13},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":41139,"byte_end":41142,"line_start":1193,"line_end":1193,"column_start":34,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":13}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\structopt-0.3.22\\src\\lib.rs","byte_start":41405,"byte_end":41408,"line_start":1203,"line_end":1203,"column_start":50,"column_end":53},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":25}}]}
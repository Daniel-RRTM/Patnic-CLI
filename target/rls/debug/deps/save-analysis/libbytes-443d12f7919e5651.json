{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0","program":"C:\\Users\\user\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bytes","--edition=2018","C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=443d12f7919e5651","-C","extra-filename=-443d12f7919e5651","--out-dir","c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\user\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\user\\Desktop\\Patnic-CLI\\target\\rls\\debug\\deps\\libbytes-443d12f7919e5651.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[14389842831990006100,0]},"crate_root":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src","external_crates":[{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[15195352194256834944,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":5,"id":{"name":"std","disambiguator":[5748888646060736057,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8936219983177082535,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9514052684633617057,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11173665669995955307,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11489992985031151541,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16828784558795307081,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10060143980449217236,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14817981415011782061,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16087529398371340149,0]}}],"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":0,"byte_end":3480,"line_start":1,"line_end":116,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4417,"byte_end":4420,"line_start":32,"line_end":32,"column_start":25,"column_end":28},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4445,"byte_end":4451,"line_start":33,"line_end":33,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4474,"byte_end":4479,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4501,"byte_end":4509,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4532,"byte_end":4537,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"alias_span":null,"name":"Limit","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4559,"byte_end":4563,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4593,"byte_end":4604,"line_start":38,"line_end":38,"column_start":29,"column_end":40},"alias_span":null,"name":"UninitSlice","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4654,"byte_end":4660,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4670,"byte_end":4676,"line_start":41,"line_end":41,"column_start":40,"column_end":46},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2945,"byte_end":2948,"line_start":84,"line_end":84,"column_start":22,"column_end":25},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2950,"byte_end":2956,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":3027,"byte_end":3032,"line_start":90,"line_end":90,"column_start":23,"column_end":28},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":3060,"byte_end":3068,"line_start":91,"line_end":91,"column_start":27,"column_end":35},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":0,"byte_end":3480,"line_start":1,"line_end":116,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":736},{"krate":0,"index":1045},{"krate":0,"index":1106},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1135}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"no_std","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":189,"byte_end":199,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/ Provides abstractions for working with bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":201,"byte_end":250,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":251,"byte_end":254,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `bytes` crate provides an efficient byte buffer structure","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":255,"byte_end":320,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ ([`Bytes`](struct.Bytes.html)) and traits for working with buffer","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":321,"byte_end":390,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ implementations ([`Buf`], [`BufMut`]).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":391,"byte_end":433,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":434,"byte_end":437,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":438,"byte_end":465,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":466,"byte_end":499,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":500,"byte_end":503,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # `Bytes`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":504,"byte_end":517,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":518,"byte_end":521,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":522,"byte_end":599,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":600,"byte_end":678,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":679,"byte_end":725,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":726,"byte_end":729,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":730,"byte_end":810,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory. This is managed by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":811,"byte_end":889,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ using a reference count to track when the memory is no longer needed and can","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":890,"byte_end":970,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be freed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":971,"byte_end":984,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":985,"byte_end":988,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":989,"byte_end":1078,"line_start":28,"line_end":28,"column_start":1,"column_end":90}},{"value":"/ or `Vec<u8>`), but usually a `BytesMut` is used first and written to. For","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1079,"byte_end":1156,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ example:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1157,"byte_end":1169,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1170,"byte_end":1173,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1174,"byte_end":1185,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1186,"byte_end":1220,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1221,"byte_end":1224,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1225,"byte_end":1273,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1274,"byte_end":1307,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ buf.put_u16(1234);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1308,"byte_end":1330,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1331,"byte_end":1334,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let a = buf.split();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1335,"byte_end":1359,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(a, b\"hello world\\x04\\xD2\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1360,"byte_end":1406,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1407,"byte_end":1410,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"goodbye world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1411,"byte_end":1446,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1447,"byte_end":1450,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let b = buf.split();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1451,"byte_end":1475,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(b, b\"goodbye world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1476,"byte_end":1516,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1517,"byte_end":1520,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf.capacity(), 998);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1521,"byte_end":1557,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1558,"byte_end":1565,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1566,"byte_end":1569,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ In the above example, only a single buffer of 1024 is allocated. The handles","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1570,"byte_end":1650,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ `a` and `b` will share the underlying buffer and maintain indices tracking","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1651,"byte_end":1729,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ the view into the buffer represented by the handle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1730,"byte_end":1785,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1786,"byte_end":1789,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ See the [struct docs] for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1790,"byte_end":1833,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1834,"byte_end":1837,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ [struct docs]: struct.Bytes.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1838,"byte_end":1874,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1875,"byte_end":1878,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # `Buf`, `BufMut`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1879,"byte_end":1900,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1901,"byte_end":1904,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ These two traits provide read and write access to buffers. The underlying","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1905,"byte_end":1982,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ storage may or may not be in contiguous memory. For example, `Bytes` is a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":1983,"byte_end":2060,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/ buffer that guarantees contiguous memory, but a [rope] stores the bytes in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2061,"byte_end":2139,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ disjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2140,"byte_end":2217,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ position in the underlying byte storage. When bytes are read or written, the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2218,"byte_end":2298,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ cursor is advanced.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2299,"byte_end":2322,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2323,"byte_end":2326,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2327,"byte_end":2390,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2391,"byte_end":2394,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Relation with `Read` and `Write`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2395,"byte_end":2434,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2435,"byte_end":2438,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ At first glance, it may seem that `Buf` and `BufMut` overlap in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2439,"byte_end":2506,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ functionality with `std::io::Read` and `std::io::Write`. However, they","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2507,"byte_end":2581,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ serve different purposes. A buffer is the value that is provided as an","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2582,"byte_end":2656,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ argument to `Read::read` and `Write::write`. `Read` and `Write` may then","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2657,"byte_end":2733,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ perform a syscall, which has the potential of failing. Operations on `Buf`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2734,"byte_end":2812,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ and `BufMut` are infallible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2813,"byte_end":2845,"line_start":76,"line_end":76,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":111},{"krate":0,"index":223},{"krate":0,"index":274},{"krate":0,"index":291},{"krate":0,"index":315},{"krate":0,"index":340},{"krate":0,"index":366},{"krate":0,"index":417},{"krate":0,"index":428},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[{"value":"/ Utilities for working with buffers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3482,"byte_end":3521,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3522,"byte_end":3525,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A buffer is any structure that contains a sequence of bytes. The bytes may","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3526,"byte_end":3604,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ or may not be stored in contiguous memory. This module contains traits used","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3605,"byte_end":3684,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ to abstract over buffers as well as utilities for working with buffer types.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3685,"byte_end":3765,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3766,"byte_end":3769,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Buf`, `BufMut`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3770,"byte_end":3791,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3792,"byte_end":3795,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These are the two foundational traits for abstractly working with buffers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3796,"byte_end":3874,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ They can be thought as iterators for byte structures. They offer additional","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3875,"byte_end":3954,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ performance over `Iterator` by providing an API optimized for byte slices.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":3955,"byte_end":4033,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4034,"byte_end":4037,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Buf`] and [`BufMut`] for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4038,"byte_end":4086,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4087,"byte_end":4090,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4091,"byte_end":4154,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4155,"byte_end":4182,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\mod.rs","byte_start":4183,"byte_end":4216,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7226,"byte_end":7229,"line_start":76,"line_end":76,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf_impl::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[{"value":"/ Read bytes from a buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6509,"byte_end":6538,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6539,"byte_end":6542,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that read operations are infallible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6543,"byte_end":6620,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `Buf` value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6621,"byte_end":6701,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ is a cursor into the buffer. Reading from `Buf` advances the cursor","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6702,"byte_end":6773,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ position. It can be thought of as an efficient `Iterator` for collections of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6774,"byte_end":6854,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6855,"byte_end":6865,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6866,"byte_end":6869,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The simplest `Buf` is a `&[u8]`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6870,"byte_end":6906,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6907,"byte_end":6910,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6911,"byte_end":6918,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6919,"byte_end":6938,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6939,"byte_end":6942,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6943,"byte_end":6981,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6982,"byte_end":6985,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":6986,"byte_end":7021,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'e', buf.get_u8());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7022,"byte_end":7057,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'l', buf.get_u8());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7058,"byte_end":7093,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7094,"byte_end":7097,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let mut rest = [0; 8];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7098,"byte_end":7124,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ buf.copy_to_slice(&mut rest);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7125,"byte_end":7158,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7159,"byte_end":7162,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&rest[..], &b\"lo world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7163,"byte_end":7207,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7208,"byte_end":7215,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7978,"byte_end":7987,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf_impl::Buf::remaining","value":"pub fn remaining(&Self) -> usize","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[{"value":"/ Returns the number of bytes between the current position and the end of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7236,"byte_end":7311,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7316,"byte_end":7331,"line_start":78,"line_end":78,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7336,"byte_end":7339,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7344,"byte_end":7419,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ by `chunk()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7424,"byte_end":7441,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7446,"byte_end":7449,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7454,"byte_end":7468,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7473,"byte_end":7476,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7481,"byte_end":7488,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7493,"byte_end":7512,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7517,"byte_end":7520,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7525,"byte_end":7563,"line_start":88,"line_end":88,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7568,"byte_end":7571,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 11);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7576,"byte_end":7612,"line_start":90,"line_end":90,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7617,"byte_end":7620,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7625,"byte_end":7642,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7647,"byte_end":7650,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 10);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7655,"byte_end":7691,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7696,"byte_end":7703,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7708,"byte_end":7711,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7716,"byte_end":7739,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7744,"byte_end":7747,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining` should ensure that the return value does","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7752,"byte_end":7827,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ not change unless a call is made to `advance` or any other function that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7832,"byte_end":7908,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ is documented to change the `Buf`'s current position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":7913,"byte_end":7970,"line_start":101,"line_end":101,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9005,"byte_end":9010,"line_start":133,"line_end":133,"column_start":8,"column_end":13},"name":"chunk","qualname":"::buf::buf_impl::Buf::chunk","value":"pub fn chunk(&Self) -> &[u8]","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[{"value":"/ Returns a slice starting at the current position and of length between 0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8010,"byte_end":8086,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ and `Buf::remaining()`. Note that this *can* return shorter slice (this allows","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8091,"byte_end":8173,"line_start":105,"line_end":105,"column_start":5,"column_end":87}},{"value":"/ non-continuous internal representation).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8178,"byte_end":8222,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8227,"byte_end":8230,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8235,"byte_end":8306,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8311,"byte_end":8325,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8330,"byte_end":8333,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8338,"byte_end":8352,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8357,"byte_end":8360,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8365,"byte_end":8372,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8377,"byte_end":8396,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8401,"byte_end":8404,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8409,"byte_end":8447,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8452,"byte_end":8455,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8460,"byte_end":8509,"line_start":118,"line_end":118,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8514,"byte_end":8517,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8522,"byte_end":8541,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8546,"byte_end":8549,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8554,"byte_end":8597,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8602,"byte_end":8609,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8614,"byte_end":8617,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8622,"byte_end":8645,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8650,"byte_end":8653,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8658,"byte_end":8734,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `chunk()` should return an","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8739,"byte_end":8812,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ empty slice.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":8817,"byte_end":8833,"line_start":129,"line_end":129,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10381,"byte_end":10396,"line_start":163,"line_end":163,"column_start":8,"column_end":23},"name":"chunks_vectored","qualname":"::buf::buf_impl::Buf::chunks_vectored","value":"pub fn chunks_vectored<'a>(&'a Self, &mut [IoSlice]) -> usize","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"/ Fills `dst` with potentially multiple slices starting at `self`'s","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9033,"byte_end":9102,"line_start":135,"line_end":135,"column_start":5,"column_end":74}},{"value":"/ current position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9107,"byte_end":9128,"line_start":136,"line_end":136,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9133,"byte_end":9136,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If the `Buf` is backed by disjoint slices of bytes, `chunk_vectored` enables","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9141,"byte_end":9221,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ fetching more than one slice at once. `dst` is a slice of `IoSlice`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9226,"byte_end":9297,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ references, enabling the slice to be directly used with [`writev`]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9302,"byte_end":9372,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ without any further conversion. The sum of the lengths of all the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9377,"byte_end":9446,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/ buffers in `dst` will be less than or equal to `Buf::remaining()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9451,"byte_end":9521,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9526,"byte_end":9529,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The entries in `dst` will be overwritten, but the data **contained** by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9534,"byte_end":9609,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ the slices **will not** be modified. If `chunk_vectored` does not fill every","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9614,"byte_end":9694,"line_start":145,"line_end":145,"column_start":5,"column_end":85}},{"value":"/ entry in `dst`, then `dst` is guaranteed to contain all remaining slices","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9699,"byte_end":9775,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ in `self.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9780,"byte_end":9793,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9798,"byte_end":9801,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9806,"byte_end":9877,"line_start":149,"line_end":149,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9882,"byte_end":9896,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9901,"byte_end":9904,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9909,"byte_end":9932,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9937,"byte_end":9940,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":9945,"byte_end":10021,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `chunk_vectored` must return 0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10026,"byte_end":10103,"line_start":155,"line_end":155,"column_start":5,"column_end":82}},{"value":"/ without mutating `dst`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10108,"byte_end":10135,"line_start":156,"line_end":156,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10140,"byte_end":10143,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Implementations should also take care to properly handle being called","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10148,"byte_end":10221,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ with `dst` being a zero length slice.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10226,"byte_end":10267,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10272,"byte_end":10275,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10280,"byte_end":10345,"line_start":161,"line_end":161,"column_start":5,"column_end":70}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10350,"byte_end":10373,"line_start":162,"line_end":162,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11540,"byte_end":11547,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf_impl::Buf::advance","value":"pub fn advance(&mut Self, usize)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the Buf","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10657,"byte_end":10699,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10704,"byte_end":10707,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The next call to `chunk()` will return a slice starting `cnt` bytes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10712,"byte_end":10783,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ further into the underlying buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10788,"byte_end":10827,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10832,"byte_end":10835,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10840,"byte_end":10854,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10859,"byte_end":10862,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10867,"byte_end":10874,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10879,"byte_end":10898,"line_start":184,"line_end":184,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10903,"byte_end":10906,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10911,"byte_end":10949,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10954,"byte_end":10957,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":10962,"byte_end":11011,"line_start":188,"line_end":188,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11016,"byte_end":11019,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11024,"byte_end":11043,"line_start":190,"line_end":190,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11048,"byte_end":11051,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.chunk(), &b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11056,"byte_end":11099,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11104,"byte_end":11111,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11116,"byte_end":11119,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11124,"byte_end":11136,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11141,"byte_end":11144,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11149,"byte_end":11209,"line_start":197,"line_end":197,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11214,"byte_end":11217,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11222,"byte_end":11245,"line_start":199,"line_end":199,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11250,"byte_end":11253,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance` to panic if `cnt >","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11258,"byte_end":11331,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ self.remaining()`. If the implementation does not panic, the call must","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11336,"byte_end":11410,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ behave as if `cnt == self.remaining()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11415,"byte_end":11458,"line_start":203,"line_end":203,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11463,"byte_end":11466,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11471,"byte_end":11532,"line_start":205,"line_end":205,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11950,"byte_end":11963,"line_start":225,"line_end":225,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf_impl::Buf::has_remaining","value":"pub fn has_remaining(&Self) -> bool","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[{"value":"/ Returns true if there are any more bytes to consume","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11577,"byte_end":11632,"line_start":208,"line_end":208,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11637,"byte_end":11640,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining() != 0`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11645,"byte_end":11695,"line_start":210,"line_end":210,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11700,"byte_end":11703,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11708,"byte_end":11722,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11727,"byte_end":11730,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11735,"byte_end":11742,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11747,"byte_end":11766,"line_start":215,"line_end":215,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11771,"byte_end":11774,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"a\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11779,"byte_end":11807,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11812,"byte_end":11815,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11820,"byte_end":11853,"line_start":219,"line_end":219,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11858,"byte_end":11861,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11866,"byte_end":11883,"line_start":221,"line_end":221,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11888,"byte_end":11891,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11896,"byte_end":11930,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":11935,"byte_end":11942,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12588,"byte_end":12601,"line_start":250,"line_end":250,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf_impl::Buf::copy_to_slice","value":"pub fn copy_to_slice(&mut Self, &mut [u8])","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[{"value":"/ Copies bytes from `self` into `dst`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12021,"byte_end":12061,"line_start":229,"line_end":229,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12066,"byte_end":12069,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The cursor is advanced by the number of bytes copied. `self` must have","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12074,"byte_end":12148,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ enough remaining bytes to fill `dst`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12153,"byte_end":12194,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12199,"byte_end":12202,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12207,"byte_end":12221,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12226,"byte_end":12229,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12234,"byte_end":12241,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12246,"byte_end":12265,"line_start":237,"line_end":237,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12270,"byte_end":12273,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12278,"byte_end":12316,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12321,"byte_end":12346,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12351,"byte_end":12354,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ buf.copy_to_slice(&mut dst);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12359,"byte_end":12391,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(&b\"hello\"[..], &dst);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12396,"byte_end":12432,"line_start":243,"line_end":243,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(6, buf.remaining());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12437,"byte_end":12472,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12477,"byte_end":12484,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12489,"byte_end":12492,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12497,"byte_end":12509,"line_start":247,"line_end":247,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12514,"byte_end":12517,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function panics if `self.remaining() < dst.len()`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":12522,"byte_end":12580,"line_start":249,"line_end":249,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13452,"byte_end":13458,"line_start":287,"line_end":287,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf_impl::Buf::get_u8","value":"pub fn get_u8(&mut Self) -> u8","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets an unsigned 8 bit integer from `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13064,"byte_end":13111,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13116,"byte_end":13119,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13124,"byte_end":13166,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13171,"byte_end":13174,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13179,"byte_end":13193,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13198,"byte_end":13201,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13206,"byte_end":13213,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13218,"byte_end":13237,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13242,"byte_end":13245,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13250,"byte_end":13287,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_u8());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13292,"byte_end":13324,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13329,"byte_end":13336,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13341,"byte_end":13344,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13349,"byte_end":13361,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13366,"byte_end":13369,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13374,"byte_end":13444,"line_start":286,"line_end":286,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13986,"byte_end":13992,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf_impl::Buf::get_i8","value":"pub fn get_i8(&mut Self) -> i8","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets a signed 8 bit integer from `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13601,"byte_end":13645,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13650,"byte_end":13653,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13658,"byte_end":13700,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13705,"byte_end":13708,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13713,"byte_end":13727,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13732,"byte_end":13735,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13740,"byte_end":13747,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13752,"byte_end":13771,"line_start":301,"line_end":301,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13776,"byte_end":13779,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13784,"byte_end":13821,"line_start":303,"line_end":303,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_i8());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13826,"byte_end":13858,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13863,"byte_end":13870,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13875,"byte_end":13878,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13883,"byte_end":13895,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13900,"byte_end":13903,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":13908,"byte_end":13978,"line_start":309,"line_end":309,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14568,"byte_end":14575,"line_start":333,"line_end":333,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf_impl::Buf::get_u16","value":"pub fn get_u16(&mut Self) -> u16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14141,"byte_end":14214,"line_start":317,"line_end":317,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14219,"byte_end":14222,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14227,"byte_end":14269,"line_start":319,"line_end":319,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14274,"byte_end":14277,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14282,"byte_end":14296,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14301,"byte_end":14304,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14309,"byte_end":14316,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14321,"byte_end":14340,"line_start":324,"line_end":324,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14345,"byte_end":14348,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14353,"byte_end":14394,"line_start":326,"line_end":326,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14399,"byte_end":14437,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14442,"byte_end":14449,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14454,"byte_end":14457,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14462,"byte_end":14474,"line_start":330,"line_end":330,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14479,"byte_end":14482,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14487,"byte_end":14560,"line_start":332,"line_end":332,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15089,"byte_end":15099,"line_start":353,"line_end":353,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf_impl::Buf::get_u16_le","value":"pub fn get_u16_le(&mut Self) -> u16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14656,"byte_end":14732,"line_start":337,"line_end":337,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14737,"byte_end":14740,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14745,"byte_end":14787,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14792,"byte_end":14795,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14800,"byte_end":14814,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14819,"byte_end":14822,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14827,"byte_end":14834,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14839,"byte_end":14858,"line_start":344,"line_end":344,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14863,"byte_end":14866,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14871,"byte_end":14912,"line_start":346,"line_end":346,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14917,"byte_end":14958,"line_start":347,"line_end":347,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14963,"byte_end":14970,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14975,"byte_end":14978,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":14983,"byte_end":14995,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15000,"byte_end":15003,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15008,"byte_end":15081,"line_start":352,"line_end":352,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15722,"byte_end":15732,"line_start":376,"line_end":376,"column_start":8,"column_end":18},"name":"get_u16_ne","qualname":"::buf::buf_impl::Buf::get_u16_ne","value":"pub fn get_u16_ne(&mut Self) -> u16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15180,"byte_end":15256,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15261,"byte_end":15264,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15269,"byte_end":15311,"line_start":359,"line_end":359,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15316,"byte_end":15319,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15324,"byte_end":15338,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15343,"byte_end":15346,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15351,"byte_end":15358,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15363,"byte_end":15382,"line_start":364,"line_end":364,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15387,"byte_end":15390,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15395,"byte_end":15455,"line_start":366,"line_end":366,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x08\\x09 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15460,"byte_end":15494,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/     false => b\"\\x09\\x08 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15499,"byte_end":15534,"line_start":368,"line_end":368,"column_start":5,"column_end":40}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15539,"byte_end":15545,"line_start":369,"line_end":369,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0809, buf.get_u16_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15550,"byte_end":15591,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15596,"byte_end":15603,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15608,"byte_end":15611,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15616,"byte_end":15628,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15633,"byte_end":15636,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15641,"byte_end":15714,"line_start":375,"line_end":375,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16237,"byte_end":16244,"line_start":396,"line_end":396,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf_impl::Buf::get_i16","value":"pub fn get_i16(&mut Self) -> i16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15813,"byte_end":15883,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15888,"byte_end":15891,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15896,"byte_end":15938,"line_start":382,"line_end":382,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15943,"byte_end":15946,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15951,"byte_end":15965,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15970,"byte_end":15973,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15978,"byte_end":15985,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":15990,"byte_end":16009,"line_start":387,"line_end":387,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16014,"byte_end":16017,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16022,"byte_end":16063,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16068,"byte_end":16106,"line_start":390,"line_end":390,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16111,"byte_end":16118,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16123,"byte_end":16126,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16131,"byte_end":16143,"line_start":393,"line_end":393,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16148,"byte_end":16151,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16156,"byte_end":16229,"line_start":395,"line_end":395,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16755,"byte_end":16765,"line_start":416,"line_end":416,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf_impl::Buf::get_i16_le","value":"pub fn get_i16_le(&mut Self) -> i16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16325,"byte_end":16398,"line_start":400,"line_end":400,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16403,"byte_end":16406,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16411,"byte_end":16453,"line_start":402,"line_end":402,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16458,"byte_end":16461,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16466,"byte_end":16480,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16485,"byte_end":16488,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16493,"byte_end":16500,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16505,"byte_end":16524,"line_start":407,"line_end":407,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16529,"byte_end":16532,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16537,"byte_end":16578,"line_start":409,"line_end":409,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16583,"byte_end":16624,"line_start":410,"line_end":410,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16629,"byte_end":16636,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16641,"byte_end":16644,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16649,"byte_end":16661,"line_start":413,"line_end":413,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16666,"byte_end":16669,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16674,"byte_end":16747,"line_start":415,"line_end":415,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17385,"byte_end":17395,"line_start":439,"line_end":439,"column_start":8,"column_end":18},"name":"get_i16_ne","qualname":"::buf::buf_impl::Buf::get_i16_ne","value":"pub fn get_i16_ne(&mut Self) -> i16","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16846,"byte_end":16919,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16924,"byte_end":16927,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16932,"byte_end":16974,"line_start":422,"line_end":422,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16979,"byte_end":16982,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":16987,"byte_end":17001,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17006,"byte_end":17009,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17014,"byte_end":17021,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17026,"byte_end":17045,"line_start":427,"line_end":427,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17050,"byte_end":17053,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17058,"byte_end":17118,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x08\\x09 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17123,"byte_end":17157,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"/     false => b\"\\x09\\x08 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17162,"byte_end":17197,"line_start":431,"line_end":431,"column_start":5,"column_end":40}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17202,"byte_end":17208,"line_start":432,"line_end":432,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0809, buf.get_i16_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17213,"byte_end":17254,"line_start":433,"line_end":433,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17259,"byte_end":17266,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17271,"byte_end":17274,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17279,"byte_end":17291,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17296,"byte_end":17299,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17304,"byte_end":17377,"line_start":438,"line_end":438,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17919,"byte_end":17926,"line_start":459,"line_end":459,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf_impl::Buf::get_u32","value":"pub fn get_u32(&mut Self) -> u32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17476,"byte_end":17553,"line_start":443,"line_end":443,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17558,"byte_end":17561,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17566,"byte_end":17608,"line_start":445,"line_end":445,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17613,"byte_end":17616,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17621,"byte_end":17635,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17640,"byte_end":17643,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17648,"byte_end":17655,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17660,"byte_end":17679,"line_start":450,"line_end":450,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17684,"byte_end":17687,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17692,"byte_end":17741,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17746,"byte_end":17788,"line_start":453,"line_end":453,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17793,"byte_end":17800,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17805,"byte_end":17808,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17813,"byte_end":17825,"line_start":456,"line_end":456,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17830,"byte_end":17833,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":17838,"byte_end":17911,"line_start":458,"line_end":458,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18456,"byte_end":18466,"line_start":479,"line_end":479,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf_impl::Buf::get_u32_le","value":"pub fn get_u32_le(&mut Self) -> u32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18007,"byte_end":18087,"line_start":463,"line_end":463,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18092,"byte_end":18095,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18100,"byte_end":18142,"line_start":465,"line_end":465,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18147,"byte_end":18150,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18155,"byte_end":18169,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18174,"byte_end":18177,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18182,"byte_end":18189,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18194,"byte_end":18213,"line_start":470,"line_end":470,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18218,"byte_end":18221,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18226,"byte_end":18275,"line_start":472,"line_end":472,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18280,"byte_end":18325,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18330,"byte_end":18337,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18342,"byte_end":18345,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18350,"byte_end":18362,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18367,"byte_end":18370,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18375,"byte_end":18448,"line_start":478,"line_end":478,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19109,"byte_end":19119,"line_start":502,"line_end":502,"column_start":8,"column_end":18},"name":"get_u32_ne","qualname":"::buf::buf_impl::Buf::get_u32_ne","value":"pub fn get_u32_ne(&mut Self) -> u32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18547,"byte_end":18623,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18628,"byte_end":18631,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18636,"byte_end":18678,"line_start":485,"line_end":485,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18683,"byte_end":18686,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18691,"byte_end":18705,"line_start":487,"line_end":487,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18710,"byte_end":18713,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18718,"byte_end":18725,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18730,"byte_end":18749,"line_start":490,"line_end":490,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18754,"byte_end":18757,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18762,"byte_end":18822,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x08\\x09\\xA0\\xA1 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18827,"byte_end":18869,"line_start":493,"line_end":493,"column_start":5,"column_end":47}},{"value":"/     false => b\"\\xA1\\xA0\\x09\\x08 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18874,"byte_end":18917,"line_start":494,"line_end":494,"column_start":5,"column_end":48}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18922,"byte_end":18928,"line_start":495,"line_end":495,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18933,"byte_end":18978,"line_start":496,"line_end":496,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18983,"byte_end":18990,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":18995,"byte_end":18998,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19003,"byte_end":19015,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19020,"byte_end":19023,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19028,"byte_end":19101,"line_start":501,"line_end":501,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19636,"byte_end":19643,"line_start":522,"line_end":522,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf_impl::Buf::get_i32","value":"pub fn get_i32(&mut Self) -> i32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19200,"byte_end":19270,"line_start":506,"line_end":506,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19275,"byte_end":19278,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19283,"byte_end":19325,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19330,"byte_end":19333,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19338,"byte_end":19352,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19357,"byte_end":19360,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19365,"byte_end":19372,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19377,"byte_end":19396,"line_start":513,"line_end":513,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19401,"byte_end":19404,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19409,"byte_end":19458,"line_start":515,"line_end":515,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19463,"byte_end":19505,"line_start":516,"line_end":516,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19510,"byte_end":19517,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19522,"byte_end":19525,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19530,"byte_end":19542,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19547,"byte_end":19550,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19555,"byte_end":19628,"line_start":521,"line_end":521,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20166,"byte_end":20176,"line_start":542,"line_end":542,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf_impl::Buf::get_i32_le","value":"pub fn get_i32_le(&mut Self) -> i32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19724,"byte_end":19797,"line_start":526,"line_end":526,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19802,"byte_end":19805,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19810,"byte_end":19852,"line_start":528,"line_end":528,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19857,"byte_end":19860,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19865,"byte_end":19879,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19884,"byte_end":19887,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19892,"byte_end":19899,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19904,"byte_end":19923,"line_start":533,"line_end":533,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19928,"byte_end":19931,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19936,"byte_end":19985,"line_start":535,"line_end":535,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":19990,"byte_end":20035,"line_start":536,"line_end":536,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20040,"byte_end":20047,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20052,"byte_end":20055,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20060,"byte_end":20072,"line_start":539,"line_end":539,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20077,"byte_end":20080,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20085,"byte_end":20158,"line_start":541,"line_end":541,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20816,"byte_end":20826,"line_start":565,"line_end":565,"column_start":8,"column_end":18},"name":"get_i32_ne","qualname":"::buf::buf_impl::Buf::get_i32_ne","value":"pub fn get_i32_ne(&mut Self) -> i32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20257,"byte_end":20330,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20335,"byte_end":20338,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20343,"byte_end":20385,"line_start":548,"line_end":548,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20390,"byte_end":20393,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20398,"byte_end":20412,"line_start":550,"line_end":550,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20417,"byte_end":20420,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20425,"byte_end":20432,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20437,"byte_end":20456,"line_start":553,"line_end":553,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20461,"byte_end":20464,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20469,"byte_end":20529,"line_start":555,"line_end":555,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x08\\x09\\xA0\\xA1 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20534,"byte_end":20576,"line_start":556,"line_end":556,"column_start":5,"column_end":47}},{"value":"/     false => b\"\\xA1\\xA0\\x09\\x08 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20581,"byte_end":20624,"line_start":557,"line_end":557,"column_start":5,"column_end":48}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20629,"byte_end":20635,"line_start":558,"line_end":558,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20640,"byte_end":20685,"line_start":559,"line_end":559,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20690,"byte_end":20697,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20702,"byte_end":20705,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20710,"byte_end":20722,"line_start":562,"line_end":562,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20727,"byte_end":20730,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20735,"byte_end":20808,"line_start":564,"line_end":564,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21370,"byte_end":21377,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf_impl::Buf::get_u64","value":"pub fn get_u64(&mut Self) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20907,"byte_end":20980,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20985,"byte_end":20988,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":20993,"byte_end":21035,"line_start":571,"line_end":571,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21040,"byte_end":21043,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21048,"byte_end":21062,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21067,"byte_end":21070,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21075,"byte_end":21082,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21087,"byte_end":21106,"line_start":576,"line_end":576,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21111,"byte_end":21114,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21119,"byte_end":21184,"line_start":578,"line_end":578,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21189,"byte_end":21239,"line_start":579,"line_end":579,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21244,"byte_end":21251,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21256,"byte_end":21259,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21264,"byte_end":21276,"line_start":582,"line_end":582,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21281,"byte_end":21284,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21289,"byte_end":21362,"line_start":584,"line_end":584,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21927,"byte_end":21937,"line_start":605,"line_end":605,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf_impl::Buf::get_u64_le","value":"pub fn get_u64_le(&mut Self) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21458,"byte_end":21534,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21539,"byte_end":21542,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21547,"byte_end":21589,"line_start":591,"line_end":591,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21594,"byte_end":21597,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21602,"byte_end":21616,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21621,"byte_end":21624,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21629,"byte_end":21636,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21641,"byte_end":21660,"line_start":596,"line_end":596,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21665,"byte_end":21668,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21673,"byte_end":21738,"line_start":598,"line_end":598,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21743,"byte_end":21796,"line_start":599,"line_end":599,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21801,"byte_end":21808,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21813,"byte_end":21816,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21821,"byte_end":21833,"line_start":602,"line_end":602,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21838,"byte_end":21841,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":21846,"byte_end":21919,"line_start":604,"line_end":604,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22620,"byte_end":22630,"line_start":628,"line_end":628,"column_start":8,"column_end":18},"name":"get_u64_ne","qualname":"::buf::buf_impl::Buf::get_u64_ne","value":"pub fn get_u64_ne(&mut Self) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22018,"byte_end":22094,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22099,"byte_end":22102,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22107,"byte_end":22149,"line_start":611,"line_end":611,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22154,"byte_end":22157,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22162,"byte_end":22176,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22181,"byte_end":22184,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22189,"byte_end":22196,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22201,"byte_end":22220,"line_start":616,"line_end":616,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22225,"byte_end":22228,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22233,"byte_end":22293,"line_start":618,"line_end":618,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22298,"byte_end":22356,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/     false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22361,"byte_end":22420,"line_start":620,"line_end":620,"column_start":5,"column_end":64}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22425,"byte_end":22431,"line_start":621,"line_end":621,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22436,"byte_end":22489,"line_start":622,"line_end":622,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22494,"byte_end":22501,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22506,"byte_end":22509,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22514,"byte_end":22526,"line_start":625,"line_end":625,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22531,"byte_end":22534,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22539,"byte_end":22612,"line_start":627,"line_end":627,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23171,"byte_end":23178,"line_start":648,"line_end":648,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf_impl::Buf::get_i64","value":"pub fn get_i64(&mut Self) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22711,"byte_end":22781,"line_start":632,"line_end":632,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22786,"byte_end":22789,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22794,"byte_end":22836,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22841,"byte_end":22844,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22849,"byte_end":22863,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22868,"byte_end":22871,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22876,"byte_end":22883,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22888,"byte_end":22907,"line_start":639,"line_end":639,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22912,"byte_end":22915,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22920,"byte_end":22985,"line_start":641,"line_end":641,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":22990,"byte_end":23040,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23045,"byte_end":23052,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23057,"byte_end":23060,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23065,"byte_end":23077,"line_start":645,"line_end":645,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23082,"byte_end":23085,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23090,"byte_end":23163,"line_start":647,"line_end":647,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23725,"byte_end":23735,"line_start":668,"line_end":668,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf_impl::Buf::get_i64_le","value":"pub fn get_i64_le(&mut Self) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23259,"byte_end":23332,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23337,"byte_end":23340,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23345,"byte_end":23387,"line_start":654,"line_end":654,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23392,"byte_end":23395,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23400,"byte_end":23414,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23419,"byte_end":23422,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23427,"byte_end":23434,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23439,"byte_end":23458,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23463,"byte_end":23466,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23471,"byte_end":23536,"line_start":661,"line_end":661,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23541,"byte_end":23594,"line_start":662,"line_end":662,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23599,"byte_end":23606,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23611,"byte_end":23614,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23619,"byte_end":23631,"line_start":665,"line_end":665,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23636,"byte_end":23639,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23644,"byte_end":23717,"line_start":667,"line_end":667,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24415,"byte_end":24425,"line_start":691,"line_end":691,"column_start":8,"column_end":18},"name":"get_i64_ne","qualname":"::buf::buf_impl::Buf::get_i64_ne","value":"pub fn get_i64_ne(&mut Self) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23816,"byte_end":23889,"line_start":672,"line_end":672,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23894,"byte_end":23897,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23902,"byte_end":23944,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23949,"byte_end":23952,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23957,"byte_end":23971,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23976,"byte_end":23979,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23984,"byte_end":23991,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":23996,"byte_end":24015,"line_start":679,"line_end":679,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24020,"byte_end":24023,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24028,"byte_end":24088,"line_start":681,"line_end":681,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24093,"byte_end":24151,"line_start":682,"line_end":682,"column_start":5,"column_end":63}},{"value":"/     false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24156,"byte_end":24215,"line_start":683,"line_end":683,"column_start":5,"column_end":64}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24220,"byte_end":24226,"line_start":684,"line_end":684,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24231,"byte_end":24284,"line_start":685,"line_end":685,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24289,"byte_end":24296,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24301,"byte_end":24304,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24309,"byte_end":24321,"line_start":688,"line_end":688,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24326,"byte_end":24329,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24334,"byte_end":24407,"line_start":690,"line_end":690,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25020,"byte_end":25028,"line_start":711,"line_end":711,"column_start":8,"column_end":16},"name":"get_u128","qualname":"::buf::buf_impl::Buf::get_u128","value":"pub fn get_u128(&mut Self) -> u128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24506,"byte_end":24580,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24585,"byte_end":24588,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24593,"byte_end":24636,"line_start":697,"line_end":697,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24641,"byte_end":24644,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24649,"byte_end":24663,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24668,"byte_end":24671,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24676,"byte_end":24683,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24688,"byte_end":24707,"line_start":702,"line_end":702,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24712,"byte_end":24715,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24720,"byte_end":24817,"line_start":704,"line_end":704,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24822,"byte_end":24889,"line_start":705,"line_end":705,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24894,"byte_end":24901,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24906,"byte_end":24909,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24914,"byte_end":24926,"line_start":708,"line_end":708,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24931,"byte_end":24934,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":24939,"byte_end":25012,"line_start":710,"line_end":710,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25631,"byte_end":25642,"line_start":731,"line_end":731,"column_start":8,"column_end":19},"name":"get_u128_le","qualname":"::buf::buf_impl::Buf::get_u128_le","value":"pub fn get_u128_le(&mut Self) -> u128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25111,"byte_end":25188,"line_start":715,"line_end":715,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25193,"byte_end":25196,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25201,"byte_end":25244,"line_start":717,"line_end":717,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25249,"byte_end":25252,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25257,"byte_end":25271,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25276,"byte_end":25279,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25284,"byte_end":25291,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25296,"byte_end":25315,"line_start":722,"line_end":722,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25320,"byte_end":25323,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25328,"byte_end":25425,"line_start":724,"line_end":724,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25430,"byte_end":25500,"line_start":725,"line_end":725,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25505,"byte_end":25512,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25517,"byte_end":25520,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25525,"byte_end":25537,"line_start":728,"line_end":728,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25542,"byte_end":25545,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25550,"byte_end":25623,"line_start":730,"line_end":730,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26410,"byte_end":26421,"line_start":754,"line_end":754,"column_start":8,"column_end":19},"name":"get_u128_ne","qualname":"::buf::buf_impl::Buf::get_u128_ne","value":"pub fn get_u128_ne(&mut Self) -> u128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25725,"byte_end":25802,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25807,"byte_end":25810,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25815,"byte_end":25858,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25863,"byte_end":25866,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25871,"byte_end":25885,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25890,"byte_end":25893,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25898,"byte_end":25905,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25910,"byte_end":25929,"line_start":742,"line_end":742,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25934,"byte_end":25937,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":25942,"byte_end":26002,"line_start":744,"line_end":744,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26007,"byte_end":26097,"line_start":745,"line_end":745,"column_start":5,"column_end":95}},{"value":"/     false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26102,"byte_end":26193,"line_start":746,"line_end":746,"column_start":5,"column_end":96}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26198,"byte_end":26204,"line_start":747,"line_end":747,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26209,"byte_end":26279,"line_start":748,"line_end":748,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26284,"byte_end":26291,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26296,"byte_end":26299,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26304,"byte_end":26316,"line_start":751,"line_end":751,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26321,"byte_end":26324,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26329,"byte_end":26402,"line_start":753,"line_end":753,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27015,"byte_end":27023,"line_start":774,"line_end":774,"column_start":8,"column_end":16},"name":"get_i128","qualname":"::buf::buf_impl::Buf::get_i128","value":"pub fn get_i128(&mut Self) -> i128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26504,"byte_end":26575,"line_start":758,"line_end":758,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26580,"byte_end":26583,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26588,"byte_end":26631,"line_start":760,"line_end":760,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26636,"byte_end":26639,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26644,"byte_end":26658,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26663,"byte_end":26666,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26671,"byte_end":26678,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26683,"byte_end":26702,"line_start":765,"line_end":765,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26707,"byte_end":26710,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26715,"byte_end":26812,"line_start":767,"line_end":767,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26817,"byte_end":26884,"line_start":768,"line_end":768,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26889,"byte_end":26896,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26901,"byte_end":26904,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26909,"byte_end":26921,"line_start":771,"line_end":771,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26926,"byte_end":26929,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":26934,"byte_end":27007,"line_start":773,"line_end":773,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27623,"byte_end":27634,"line_start":794,"line_end":794,"column_start":8,"column_end":19},"name":"get_i128_le","qualname":"::buf::buf_impl::Buf::get_i128_le","value":"pub fn get_i128_le(&mut Self) -> i128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27106,"byte_end":27180,"line_start":778,"line_end":778,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27185,"byte_end":27188,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27193,"byte_end":27236,"line_start":780,"line_end":780,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27241,"byte_end":27244,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27249,"byte_end":27263,"line_start":782,"line_end":782,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27268,"byte_end":27271,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27276,"byte_end":27283,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27288,"byte_end":27307,"line_start":785,"line_end":785,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27312,"byte_end":27315,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27320,"byte_end":27417,"line_start":787,"line_end":787,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27422,"byte_end":27492,"line_start":788,"line_end":788,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27497,"byte_end":27504,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27509,"byte_end":27512,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27517,"byte_end":27529,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27534,"byte_end":27537,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27542,"byte_end":27615,"line_start":793,"line_end":793,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28399,"byte_end":28410,"line_start":817,"line_end":817,"column_start":8,"column_end":19},"name":"get_i128_ne","qualname":"::buf::buf_impl::Buf::get_i128_ne","value":"pub fn get_i128_ne(&mut Self) -> i128","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27717,"byte_end":27791,"line_start":798,"line_end":798,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27796,"byte_end":27799,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27804,"byte_end":27847,"line_start":800,"line_end":800,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27852,"byte_end":27855,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27860,"byte_end":27874,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27879,"byte_end":27882,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27887,"byte_end":27894,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27899,"byte_end":27918,"line_start":805,"line_end":805,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27923,"byte_end":27926,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27931,"byte_end":27991,"line_start":807,"line_end":807,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":27996,"byte_end":28086,"line_start":808,"line_end":808,"column_start":5,"column_end":95}},{"value":"/     false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28091,"byte_end":28182,"line_start":809,"line_end":809,"column_start":5,"column_end":96}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28187,"byte_end":28193,"line_start":810,"line_end":810,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28198,"byte_end":28268,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28273,"byte_end":28280,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28285,"byte_end":28288,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28293,"byte_end":28305,"line_start":814,"line_end":814,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28310,"byte_end":28313,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28318,"byte_end":28391,"line_start":816,"line_end":816,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28935,"byte_end":28943,"line_start":837,"line_end":837,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf_impl::Buf::get_uint","value":"pub fn get_uint(&mut Self, usize) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28493,"byte_end":28566,"line_start":821,"line_end":821,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28571,"byte_end":28574,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28579,"byte_end":28628,"line_start":823,"line_end":823,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28633,"byte_end":28636,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28641,"byte_end":28655,"line_start":825,"line_end":825,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28660,"byte_end":28663,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28668,"byte_end":28675,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28680,"byte_end":28699,"line_start":828,"line_end":828,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28704,"byte_end":28707,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28712,"byte_end":28757,"line_start":830,"line_end":830,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint(3));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28762,"byte_end":28804,"line_start":831,"line_end":831,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28809,"byte_end":28816,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28821,"byte_end":28824,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28829,"byte_end":28841,"line_start":834,"line_end":834,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28846,"byte_end":28849,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":28854,"byte_end":28927,"line_start":836,"line_end":836,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29486,"byte_end":29497,"line_start":857,"line_end":857,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf_impl::Buf::get_uint_le","value":"pub fn get_uint_le(&mut Self, usize) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29038,"byte_end":29114,"line_start":841,"line_end":841,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29119,"byte_end":29122,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29127,"byte_end":29176,"line_start":843,"line_end":843,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29181,"byte_end":29184,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29189,"byte_end":29203,"line_start":845,"line_end":845,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29208,"byte_end":29211,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29216,"byte_end":29223,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29228,"byte_end":29247,"line_start":848,"line_end":848,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29252,"byte_end":29255,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29260,"byte_end":29305,"line_start":850,"line_end":850,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint_le(3));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29310,"byte_end":29355,"line_start":851,"line_end":851,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29360,"byte_end":29367,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29372,"byte_end":29375,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29380,"byte_end":29392,"line_start":854,"line_end":854,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29397,"byte_end":29400,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29405,"byte_end":29478,"line_start":856,"line_end":856,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30153,"byte_end":30164,"line_start":880,"line_end":880,"column_start":8,"column_end":19},"name":"get_uint_ne","qualname":"::buf::buf_impl::Buf::get_uint_ne","value":"pub fn get_uint_ne(&mut Self, usize) -> u64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29592,"byte_end":29668,"line_start":861,"line_end":861,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29673,"byte_end":29676,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29681,"byte_end":29730,"line_start":863,"line_end":863,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29735,"byte_end":29738,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29743,"byte_end":29757,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29762,"byte_end":29765,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29770,"byte_end":29777,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29782,"byte_end":29801,"line_start":868,"line_end":868,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29806,"byte_end":29809,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29814,"byte_end":29874,"line_start":870,"line_end":870,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29879,"byte_end":29917,"line_start":871,"line_end":871,"column_start":5,"column_end":43}},{"value":"/     false => b\"\\x03\\x02\\x01 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29922,"byte_end":29961,"line_start":872,"line_end":872,"column_start":5,"column_end":44}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29966,"byte_end":29972,"line_start":873,"line_end":873,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x010203, buf.get_uint_ne(3));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":29977,"byte_end":30022,"line_start":874,"line_end":874,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30027,"byte_end":30034,"line_start":875,"line_end":875,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30039,"byte_end":30042,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30047,"byte_end":30059,"line_start":877,"line_end":877,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30064,"byte_end":30067,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30072,"byte_end":30145,"line_start":879,"line_end":879,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30788,"byte_end":30795,"line_start":904,"line_end":904,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf_impl::Buf::get_int","value":"pub fn get_int(&mut Self, usize) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30350,"byte_end":30420,"line_start":888,"line_end":888,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30425,"byte_end":30428,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30433,"byte_end":30482,"line_start":890,"line_end":890,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30487,"byte_end":30490,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30495,"byte_end":30509,"line_start":892,"line_end":892,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30514,"byte_end":30517,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30522,"byte_end":30529,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30534,"byte_end":30553,"line_start":895,"line_end":895,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30558,"byte_end":30561,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30566,"byte_end":30611,"line_start":897,"line_end":897,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int(3));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30616,"byte_end":30657,"line_start":898,"line_end":898,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30662,"byte_end":30669,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30674,"byte_end":30677,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30682,"byte_end":30694,"line_start":901,"line_end":901,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30699,"byte_end":30702,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30707,"byte_end":30780,"line_start":903,"line_end":903,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31334,"byte_end":31344,"line_start":924,"line_end":924,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf_impl::Buf::get_int_le","value":"pub fn get_int_le(&mut Self, usize) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30890,"byte_end":30963,"line_start":908,"line_end":908,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30968,"byte_end":30971,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":30976,"byte_end":31025,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31030,"byte_end":31033,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31038,"byte_end":31052,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31057,"byte_end":31060,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31065,"byte_end":31072,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31077,"byte_end":31096,"line_start":915,"line_end":915,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31101,"byte_end":31104,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31109,"byte_end":31154,"line_start":917,"line_end":917,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int_le(3));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31159,"byte_end":31203,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31208,"byte_end":31215,"line_start":919,"line_end":919,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31220,"byte_end":31223,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31228,"byte_end":31240,"line_start":921,"line_end":921,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31245,"byte_end":31248,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31253,"byte_end":31326,"line_start":923,"line_end":923,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31996,"byte_end":32006,"line_start":947,"line_end":947,"column_start":8,"column_end":18},"name":"get_int_ne","qualname":"::buf::buf_impl::Buf::get_int_ne","value":"pub fn get_int_ne(&mut Self, usize) -> i64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31439,"byte_end":31512,"line_start":928,"line_end":928,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31517,"byte_end":31520,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31525,"byte_end":31574,"line_start":930,"line_end":930,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31579,"byte_end":31582,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31587,"byte_end":31601,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31606,"byte_end":31609,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31614,"byte_end":31621,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31626,"byte_end":31645,"line_start":935,"line_end":935,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31650,"byte_end":31653,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31658,"byte_end":31718,"line_start":937,"line_end":937,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x01\\x02\\x03 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31723,"byte_end":31761,"line_start":938,"line_end":938,"column_start":5,"column_end":43}},{"value":"/     false => b\"\\x03\\x02\\x01 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31766,"byte_end":31805,"line_start":939,"line_end":939,"column_start":5,"column_end":44}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31810,"byte_end":31816,"line_start":940,"line_end":940,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(0x010203, buf.get_int_ne(3));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31821,"byte_end":31865,"line_start":941,"line_end":941,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31870,"byte_end":31877,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31882,"byte_end":31885,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31890,"byte_end":31902,"line_start":944,"line_end":944,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31907,"byte_end":31910,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":31915,"byte_end":31988,"line_start":946,"line_end":946,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32666,"byte_end":32673,"line_start":972,"line_end":972,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf_impl::Buf::get_f32","value":"pub fn get_f32(&mut Self) -> f32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32190,"byte_end":32263,"line_start":955,"line_end":955,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32268,"byte_end":32304,"line_start":956,"line_end":956,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32309,"byte_end":32312,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32317,"byte_end":32359,"line_start":958,"line_end":958,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32364,"byte_end":32367,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32372,"byte_end":32386,"line_start":960,"line_end":960,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32391,"byte_end":32394,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32399,"byte_end":32406,"line_start":962,"line_end":962,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32411,"byte_end":32430,"line_start":963,"line_end":963,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32435,"byte_end":32438,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32443,"byte_end":32492,"line_start":965,"line_end":965,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32497,"byte_end":32535,"line_start":966,"line_end":966,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32540,"byte_end":32547,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32552,"byte_end":32555,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32560,"byte_end":32572,"line_start":969,"line_end":969,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32577,"byte_end":32580,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32585,"byte_end":32658,"line_start":971,"line_end":971,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33231,"byte_end":33241,"line_start":993,"line_end":993,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf_impl::Buf::get_f32_le","value":"pub fn get_f32_le(&mut Self) -> f32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32749,"byte_end":32822,"line_start":976,"line_end":976,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32827,"byte_end":32866,"line_start":977,"line_end":977,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32871,"byte_end":32874,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32879,"byte_end":32921,"line_start":979,"line_end":979,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32926,"byte_end":32929,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32934,"byte_end":32948,"line_start":981,"line_end":981,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32953,"byte_end":32956,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32961,"byte_end":32968,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32973,"byte_end":32992,"line_start":984,"line_end":984,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":32997,"byte_end":33000,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33005,"byte_end":33054,"line_start":986,"line_end":986,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33059,"byte_end":33100,"line_start":987,"line_end":987,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33105,"byte_end":33112,"line_start":988,"line_end":988,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33117,"byte_end":33120,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33125,"byte_end":33137,"line_start":990,"line_end":990,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33142,"byte_end":33145,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33150,"byte_end":33223,"line_start":992,"line_end":992,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33919,"byte_end":33929,"line_start":1017,"line_end":1017,"column_start":8,"column_end":18},"name":"get_f32_ne","qualname":"::buf::buf_impl::Buf::get_f32_ne","value":"pub fn get_f32_ne(&mut Self) -> f32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33320,"byte_end":33393,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33398,"byte_end":33437,"line_start":998,"line_end":998,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33442,"byte_end":33445,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33450,"byte_end":33492,"line_start":1000,"line_end":1000,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33497,"byte_end":33500,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33505,"byte_end":33519,"line_start":1002,"line_end":1002,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33524,"byte_end":33527,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33532,"byte_end":33539,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33544,"byte_end":33563,"line_start":1005,"line_end":1005,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33568,"byte_end":33571,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33576,"byte_end":33636,"line_start":1007,"line_end":1007,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x3F\\x99\\x99\\x9A hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33641,"byte_end":33683,"line_start":1008,"line_end":1008,"column_start":5,"column_end":47}},{"value":"/     false => b\"\\x9A\\x99\\x99\\x3F hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33688,"byte_end":33731,"line_start":1009,"line_end":1009,"column_start":5,"column_end":48}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33736,"byte_end":33742,"line_start":1010,"line_end":1010,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(1.2f32, buf.get_f32_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33747,"byte_end":33788,"line_start":1011,"line_end":1011,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33793,"byte_end":33800,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33805,"byte_end":33808,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33813,"byte_end":33825,"line_start":1014,"line_end":1014,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33830,"byte_end":33833,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":33838,"byte_end":33911,"line_start":1016,"line_end":1016,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34500,"byte_end":34507,"line_start":1038,"line_end":1038,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf_impl::Buf::get_f64","value":"pub fn get_f64(&mut Self) -> f64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34008,"byte_end":34081,"line_start":1021,"line_end":1021,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34086,"byte_end":34122,"line_start":1022,"line_end":1022,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34127,"byte_end":34130,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34135,"byte_end":34177,"line_start":1024,"line_end":1024,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34182,"byte_end":34185,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34190,"byte_end":34204,"line_start":1026,"line_end":1026,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34209,"byte_end":34212,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34217,"byte_end":34224,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34229,"byte_end":34248,"line_start":1029,"line_end":1029,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34253,"byte_end":34256,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34261,"byte_end":34326,"line_start":1031,"line_end":1031,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34331,"byte_end":34369,"line_start":1032,"line_end":1032,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34374,"byte_end":34381,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34386,"byte_end":34389,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34394,"byte_end":34406,"line_start":1035,"line_end":1035,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34411,"byte_end":34414,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34419,"byte_end":34492,"line_start":1037,"line_end":1037,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35081,"byte_end":35091,"line_start":1059,"line_end":1059,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf_impl::Buf::get_f64_le","value":"pub fn get_f64_le(&mut Self) -> f64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34583,"byte_end":34656,"line_start":1042,"line_end":1042,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34661,"byte_end":34700,"line_start":1043,"line_end":1043,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34705,"byte_end":34708,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34713,"byte_end":34755,"line_start":1045,"line_end":1045,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34760,"byte_end":34763,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34768,"byte_end":34782,"line_start":1047,"line_end":1047,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34787,"byte_end":34790,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34795,"byte_end":34802,"line_start":1049,"line_end":1049,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34807,"byte_end":34826,"line_start":1050,"line_end":1050,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34831,"byte_end":34834,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34839,"byte_end":34904,"line_start":1052,"line_end":1052,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64_le());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34909,"byte_end":34950,"line_start":1053,"line_end":1053,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34955,"byte_end":34962,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34967,"byte_end":34970,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34975,"byte_end":34987,"line_start":1056,"line_end":1056,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":34992,"byte_end":34995,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35000,"byte_end":35073,"line_start":1058,"line_end":1058,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35801,"byte_end":35811,"line_start":1083,"line_end":1083,"column_start":8,"column_end":18},"name":"get_f64_ne","qualname":"::buf::buf_impl::Buf::get_f64_ne","value":"pub fn get_f64_ne(&mut Self) -> f64","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35170,"byte_end":35243,"line_start":1063,"line_end":1063,"column_start":5,"column_end":78}},{"value":"/ `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35248,"byte_end":35287,"line_start":1064,"line_end":1064,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35292,"byte_end":35295,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35300,"byte_end":35342,"line_start":1066,"line_end":1066,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35347,"byte_end":35350,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35355,"byte_end":35369,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35374,"byte_end":35377,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35382,"byte_end":35389,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35394,"byte_end":35413,"line_start":1071,"line_end":1071,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35418,"byte_end":35421,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let mut buf: &[u8] = match cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35426,"byte_end":35486,"line_start":1073,"line_end":1073,"column_start":5,"column_end":65}},{"value":"/     true => b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35491,"byte_end":35549,"line_start":1074,"line_end":1074,"column_start":5,"column_end":63}},{"value":"/     false => b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35554,"byte_end":35613,"line_start":1075,"line_end":1075,"column_start":5,"column_end":64}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35618,"byte_end":35624,"line_start":1076,"line_end":1076,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(1.2f64, buf.get_f64_ne());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35629,"byte_end":35670,"line_start":1077,"line_end":1077,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35675,"byte_end":35682,"line_start":1078,"line_end":1078,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35687,"byte_end":35690,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35695,"byte_end":35707,"line_start":1080,"line_end":1080,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35712,"byte_end":35715,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35720,"byte_end":35793,"line_start":1082,"line_end":1082,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36384,"byte_end":36397,"line_start":1102,"line_end":1102,"column_start":8,"column_end":21},"name":"copy_to_bytes","qualname":"::buf::buf_impl::Buf::copy_to_bytes","value":"pub fn copy_to_bytes(&mut Self, usize) -> crate::Bytes","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Consumes `len` bytes inside self and returns new instance of `Bytes`\n with this data.","sig":null,"attributes":[{"value":"/ Consumes `len` bytes inside self and returns new instance of `Bytes`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35890,"byte_end":35962,"line_start":1087,"line_end":1087,"column_start":5,"column_end":77}},{"value":"/ with this data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35967,"byte_end":35986,"line_start":1088,"line_end":1088,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35991,"byte_end":35994,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ This function may be optimized by the underlying type to avoid actual","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":35999,"byte_end":36072,"line_start":1090,"line_end":1090,"column_start":5,"column_end":78}},{"value":"/ copies. For example, `Bytes` implementation will do a shallow copy","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36077,"byte_end":36147,"line_start":1091,"line_end":1091,"column_start":5,"column_end":75}},{"value":"/ (ref-count increment).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36152,"byte_end":36178,"line_start":1092,"line_end":1092,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36183,"byte_end":36186,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36191,"byte_end":36205,"line_start":1094,"line_end":1094,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36210,"byte_end":36213,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36218,"byte_end":36225,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36230,"byte_end":36249,"line_start":1097,"line_end":1097,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36254,"byte_end":36257,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let bytes = (&b\"hello world\"[..]).copy_to_bytes(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36262,"byte_end":36317,"line_start":1099,"line_end":1099,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&bytes[..], &b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36322,"byte_end":36364,"line_start":1100,"line_end":1100,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36369,"byte_end":36376,"line_start":1101,"line_end":1101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37239,"byte_end":37243,"line_start":1133,"line_end":1133,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::buf_impl::Buf::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will read at most `limit` bytes from `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36666,"byte_end":36739,"line_start":1112,"line_end":1112,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36744,"byte_end":36747,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ This function returns a new instance of `Buf` which will read at most","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36752,"byte_end":36825,"line_start":1114,"line_end":1114,"column_start":5,"column_end":78}},{"value":"/ `limit` bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36830,"byte_end":36848,"line_start":1115,"line_end":1115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36853,"byte_end":36856,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36861,"byte_end":36875,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36880,"byte_end":36883,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36888,"byte_end":36895,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36900,"byte_end":36929,"line_start":1120,"line_end":1120,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36934,"byte_end":36937,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\"[..].take(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36942,"byte_end":36987,"line_start":1122,"line_end":1122,"column_start":5,"column_end":50}},{"value":"/ let mut dst = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":36992,"byte_end":37017,"line_start":1123,"line_end":1123,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37022,"byte_end":37025,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37030,"byte_end":37052,"line_start":1125,"line_end":1125,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37057,"byte_end":37087,"line_start":1126,"line_end":1126,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37092,"byte_end":37095,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37100,"byte_end":37135,"line_start":1128,"line_end":1128,"column_start":5,"column_end":40}},{"value":"/ dst.clear();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37140,"byte_end":37156,"line_start":1129,"line_end":1129,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37161,"byte_end":37183,"line_start":1130,"line_end":1130,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\" world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37188,"byte_end":37219,"line_start":1131,"line_end":1131,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37224,"byte_end":37231,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37836,"byte_end":37841,"line_start":1155,"line_end":1155,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::buf_impl::Buf::chain","value":"pub fn chain<U: Buf>(Self, U) -> Chain<Self, U> where Self: Sized","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this buffer with another.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37357,"byte_end":37422,"line_start":1140,"line_end":1140,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37427,"byte_end":37430,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ The returned `Buf` instance will first consume all bytes from `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37435,"byte_end":37508,"line_start":1142,"line_end":1142,"column_start":5,"column_end":78}},{"value":"/ Afterwards the output is equivalent to the output of next.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37513,"byte_end":37575,"line_start":1143,"line_end":1143,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37580,"byte_end":37583,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37588,"byte_end":37602,"line_start":1145,"line_end":1145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37607,"byte_end":37610,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37615,"byte_end":37622,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37627,"byte_end":37646,"line_start":1148,"line_end":1148,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37651,"byte_end":37654,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ let mut chain = b\"hello \"[..].chain(&b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37659,"byte_end":37714,"line_start":1150,"line_end":1150,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37719,"byte_end":37722,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ let full = chain.copy_to_bytes(11);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37727,"byte_end":37766,"line_start":1152,"line_end":1152,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(full.chunk(), b\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37771,"byte_end":37816,"line_start":1153,"line_end":1153,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37821,"byte_end":37828,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38731,"byte_end":38737,"line_start":1186,"line_end":1186,"column_start":8,"column_end":14},"name":"reader","qualname":"::buf::buf_impl::Buf::reader","value":"pub fn reader(Self) -> Reader<Self> where Self: Sized","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Read` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Read` trait for `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":37962,"byte_end":38030,"line_start":1162,"line_end":1162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38035,"byte_end":38038,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Read` by adapting","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38043,"byte_end":38116,"line_start":1164,"line_end":1164,"column_start":5,"column_end":78}},{"value":"/ the `Read` trait functions to the `Buf` trait functions. Given that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38121,"byte_end":38192,"line_start":1165,"line_end":1165,"column_start":5,"column_end":76}},{"value":"/ `Buf` operations are infallible, none of the `Read` functions will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38197,"byte_end":38267,"line_start":1166,"line_end":1166,"column_start":5,"column_end":75}},{"value":"/ return with `Err`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38272,"byte_end":38294,"line_start":1167,"line_end":1167,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38299,"byte_end":38302,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38307,"byte_end":38321,"line_start":1169,"line_end":1169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38326,"byte_end":38329,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38334,"byte_end":38341,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, Buf};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38346,"byte_end":38374,"line_start":1172,"line_end":1172,"column_start":5,"column_end":33}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38379,"byte_end":38401,"line_start":1173,"line_end":1173,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38406,"byte_end":38409,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38414,"byte_end":38455,"line_start":1175,"line_end":1175,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38460,"byte_end":38463,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ let mut reader = buf.reader();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38468,"byte_end":38502,"line_start":1177,"line_end":1177,"column_start":5,"column_end":39}},{"value":"/ let mut dst = [0; 1024];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38507,"byte_end":38535,"line_start":1178,"line_end":1178,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38540,"byte_end":38543,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ let num = reader.read(&mut dst).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38548,"byte_end":38593,"line_start":1180,"line_end":1180,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38598,"byte_end":38601,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38606,"byte_end":38630,"line_start":1182,"line_end":1182,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&dst[..11], &b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38635,"byte_end":38683,"line_start":1183,"line_end":1183,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38688,"byte_end":38695,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":38700,"byte_end":38723,"line_start":1185,"line_end":1185,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44006,"byte_end":44012,"line_start":29,"line_end":29,"column_start":18,"column_end":24},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[{"value":"/ A trait for values that provide sequential write access to bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43435,"byte_end":43504,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43505,"byte_end":43508,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Write bytes to a buffer","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43509,"byte_end":43536,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43537,"byte_end":43540,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that write operations are infallible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43541,"byte_end":43619,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `BufMut`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43620,"byte_end":43697,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ value is a cursor into the buffer. Writing to `BufMut` advances the cursor","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43698,"byte_end":43776,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43777,"byte_end":43790,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43791,"byte_end":43794,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The simplest `BufMut` is a `Vec<u8>`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43795,"byte_end":43836,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43837,"byte_end":43840,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43841,"byte_end":43848,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43849,"byte_end":43871,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43872,"byte_end":43875,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43876,"byte_end":43901,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43902,"byte_end":43905,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43906,"byte_end":43939,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43940,"byte_end":43943,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43944,"byte_end":43980,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":43981,"byte_end":43988,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45209,"byte_end":45222,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"pub fn remaining_mut(&Self) -> usize","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be written from the current","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44019,"byte_end":44087,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ position until the end of the buffer is reached.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44092,"byte_end":44144,"line_start":31,"line_end":31,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44149,"byte_end":44152,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44157,"byte_end":44232,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ by `chunk_mut()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44237,"byte_end":44258,"line_start":34,"line_end":34,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44263,"byte_end":44266,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Writing to a `BufMut` may involve allocating more memory on the fly.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44271,"byte_end":44343,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ Implementations may fail before reaching the number of bytes indicated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44348,"byte_end":44422,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ by this method if they encounter an allocation failure.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44427,"byte_end":44486,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44491,"byte_end":44494,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44499,"byte_end":44513,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44518,"byte_end":44521,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44526,"byte_end":44533,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44538,"byte_end":44560,"line_start":43,"line_end":43,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44565,"byte_end":44568,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 10];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44573,"byte_end":44599,"line_start":45,"line_end":45,"column_start":5,"column_end":31}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44604,"byte_end":44635,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44640,"byte_end":44643,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let original_remaining = buf.remaining_mut();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44648,"byte_end":44697,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44702,"byte_end":44729,"line_start":49,"line_end":49,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44734,"byte_end":44737,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(original_remaining - 5, buf.remaining_mut());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44742,"byte_end":44802,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44807,"byte_end":44814,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44819,"byte_end":44822,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44827,"byte_end":44850,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44855,"byte_end":44858,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining_mut` should ensure that the return value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44863,"byte_end":44937,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ does not change unless a call is made to `advance_mut` or any other","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":44942,"byte_end":45013,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ function that is documented to change the `BufMut`'s current position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45018,"byte_end":45092,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45097,"byte_end":45100,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45105,"byte_end":45115,"line_start":60,"line_end":60,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45120,"byte_end":45123,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ `remaining_mut` may return value smaller than actual available space.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45128,"byte_end":45201,"line_start":62,"line_end":62,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46491,"byte_end":46502,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"pub unsafe fn advance_mut(&mut Self, usize)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the BufMut","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45245,"byte_end":45290,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45295,"byte_end":45298,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The next call to `chunk_mut` will return a slice starting `cnt` bytes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45303,"byte_end":45376,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ further into the underlying buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45381,"byte_end":45420,"line_start":68,"line_end":68,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45425,"byte_end":45428,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because there is no guarantee that the bytes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45433,"byte_end":45505,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ being advanced past have been initialized.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45510,"byte_end":45556,"line_start":71,"line_end":71,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45561,"byte_end":45564,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45569,"byte_end":45583,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45588,"byte_end":45591,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45596,"byte_end":45603,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45608,"byte_end":45630,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45635,"byte_end":45638,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45643,"byte_end":45684,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45689,"byte_end":45692,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ // Write some data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45697,"byte_end":45719,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ buf.chunk_mut()[0..2].copy_from_slice(b\"he\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45724,"byte_end":45773,"line_start":81,"line_end":81,"column_start":5,"column_end":54}},{"value":"/ unsafe { buf.advance_mut(2) };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45778,"byte_end":45812,"line_start":82,"line_end":82,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45817,"byte_end":45820,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // write more bytes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45825,"byte_end":45848,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/ buf.chunk_mut()[0..3].copy_from_slice(b\"llo\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45853,"byte_end":45903,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45908,"byte_end":45911,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ unsafe { buf.advance_mut(3); }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45916,"byte_end":45950,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45955,"byte_end":45958,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45963,"byte_end":45992,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":45997,"byte_end":46027,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46032,"byte_end":46039,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46044,"byte_end":46047,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46052,"byte_end":46064,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46069,"byte_end":46072,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining_mut()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46077,"byte_end":46141,"line_start":95,"line_end":95,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46146,"byte_end":46149,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46154,"byte_end":46177,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46182,"byte_end":46185,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance_mut` to panic if","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46190,"byte_end":46260,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ `cnt > self.remaining_mut()`. If the implementation does not panic,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46265,"byte_end":46336,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ the call must behave as if `cnt == self.remaining_mut()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46341,"byte_end":46402,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46407,"byte_end":46410,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46415,"byte_end":46476,"line_start":103,"line_end":103,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46968,"byte_end":46985,"line_start":124,"line_end":124,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"pub fn has_remaining_mut(&Self) -> bool","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[{"value":"/ Returns true if there is space in `self` for more bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46532,"byte_end":46592,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46597,"byte_end":46600,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining_mut() != 0`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46605,"byte_end":46659,"line_start":108,"line_end":108,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46664,"byte_end":46667,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46672,"byte_end":46686,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46691,"byte_end":46694,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46699,"byte_end":46706,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46711,"byte_end":46733,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46738,"byte_end":46741,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46746,"byte_end":46771,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46776,"byte_end":46807,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46812,"byte_end":46815,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining_mut());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46820,"byte_end":46857,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46862,"byte_end":46865,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46870,"byte_end":46897,"line_start":120,"line_end":120,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46902,"byte_end":46905,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining_mut());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46910,"byte_end":46948,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":46953,"byte_end":46960,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48858,"byte_end":48867,"line_start":175,"line_end":175,"column_start":8,"column_end":17},"name":"chunk_mut","qualname":"::buf::buf_mut::BufMut::chunk_mut","value":"pub fn chunk_mut(&mut Self) -> &mut UninitSlice","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[{"value":"/ Returns a mutable slice starting at the current BufMut position and of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47047,"byte_end":47121,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47126,"byte_end":47218,"line_start":129,"line_end":129,"column_start":5,"column_end":97}},{"value":"/ whole remainder of the buffer (this allows non-continuous implementation).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47223,"byte_end":47301,"line_start":130,"line_end":130,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47306,"byte_end":47309,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47314,"byte_end":47385,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47390,"byte_end":47404,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47409,"byte_end":47412,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The returned byte slice may represent uninitialized memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47417,"byte_end":47480,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47485,"byte_end":47488,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47493,"byte_end":47507,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47512,"byte_end":47515,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47520,"byte_end":47527,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47532,"byte_end":47554,"line_start":140,"line_end":140,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47559,"byte_end":47562,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47567,"byte_end":47608,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47613,"byte_end":47616,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47621,"byte_end":47633,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/     // MaybeUninit::as_mut_ptr","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47638,"byte_end":47672,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/     buf.chunk_mut()[0..].as_mut_ptr().write(b'h');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47677,"byte_end":47731,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[1..].as_mut_ptr().write(b'e');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47736,"byte_end":47790,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47795,"byte_end":47798,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47803,"byte_end":47830,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47835,"byte_end":47838,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/     buf.chunk_mut()[0..].as_mut_ptr().write(b'l');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47843,"byte_end":47897,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[1..].as_mut_ptr().write(b'l');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47902,"byte_end":47956,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/     buf.chunk_mut()[2..].as_mut_ptr().write(b'o');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":47961,"byte_end":48015,"line_start":153,"line_end":153,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48020,"byte_end":48023,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48028,"byte_end":48055,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48060,"byte_end":48065,"line_start":156,"line_end":156,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48070,"byte_end":48073,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48078,"byte_end":48107,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48112,"byte_end":48142,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48147,"byte_end":48154,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48159,"byte_end":48162,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48167,"byte_end":48190,"line_start":162,"line_end":162,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48195,"byte_end":48198,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. `chunk_mut` should return an empty","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48203,"byte_end":48275,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ slice **if and only if** `remaining_mut()` returns 0. In other words,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48280,"byte_end":48353,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ `chunk_mut()` returning an empty slice implies that `remaining_mut()` will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48358,"byte_end":48436,"line_start":166,"line_end":166,"column_start":5,"column_end":83}},{"value":"/ return 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48441,"byte_end":48519,"line_start":167,"line_end":167,"column_start":5,"column_end":83}},{"value":"/ return an empty slice.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48524,"byte_end":48550,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48555,"byte_end":48558,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function may trigger an out-of-memory abort if it tries to allocate","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48563,"byte_end":48639,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ memory and fails to do so.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48644,"byte_end":48674,"line_start":171,"line_end":171,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49394,"byte_end":49397,"line_start":197,"line_end":197,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"pub fn put<T: super::Buf>(&mut Self, T) where Self: Sized","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48905,"byte_end":48976,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":48981,"byte_end":49009,"line_start":178,"line_end":178,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49014,"byte_end":49017,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49022,"byte_end":49036,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49041,"byte_end":49044,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49049,"byte_end":49056,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49061,"byte_end":49083,"line_start":183,"line_end":183,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49088,"byte_end":49091,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49096,"byte_end":49121,"line_start":185,"line_end":185,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49126,"byte_end":49129,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49134,"byte_end":49155,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/ buf.put(&b\"ello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49160,"byte_end":49186,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/ buf.put(&b\" world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49191,"byte_end":49219,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49224,"byte_end":49227,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49232,"byte_end":49268,"line_start":191,"line_end":191,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49273,"byte_end":49280,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49285,"byte_end":49288,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49293,"byte_end":49305,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49310,"byte_end":49313,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` does not have enough capacity to contain `src`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49318,"byte_end":49386,"line_start":196,"line_end":196,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50457,"byte_end":50466,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":49957,"byte_end":50028,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50033,"byte_end":50061,"line_start":222,"line_end":222,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50066,"byte_end":50069,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ `self` must have enough remaining capacity to contain all of `src`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50074,"byte_end":50145,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50150,"byte_end":50153,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50158,"byte_end":50165,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50170,"byte_end":50192,"line_start":227,"line_end":227,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50197,"byte_end":50200,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 6];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50205,"byte_end":50230,"line_start":229,"line_end":229,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50235,"byte_end":50238,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50243,"byte_end":50248,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/     let mut buf = &mut dst[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50253,"byte_end":50288,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/     buf.put_slice(b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50293,"byte_end":50325,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50330,"byte_end":50333,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, buf.remaining_mut());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50338,"byte_end":50381,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50386,"byte_end":50391,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50396,"byte_end":50399,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello\\0\", &dst);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50404,"byte_end":50437,"line_start":238,"line_end":238,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":50442,"byte_end":50449,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51765,"byte_end":51774,"line_start":293,"line_end":293,"column_start":8,"column_end":17},"name":"put_bytes","qualname":"::buf::buf_mut::BufMut::put_bytes","value":"pub fn put_bytes(&mut Self, u8, usize)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Put `cnt` bytes `val` into `self`.","sig":null,"attributes":[{"value":"/ Put `cnt` bytes `val` into `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51123,"byte_end":51161,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51166,"byte_end":51169,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Logically equivalent to calling `self.put_u8(val)` `cnt` times, but may work faster.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51174,"byte_end":51262,"line_start":270,"line_end":270,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51267,"byte_end":51270,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ `self` must have at least `cnt` remaining capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51275,"byte_end":51330,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51335,"byte_end":51338,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51343,"byte_end":51350,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51355,"byte_end":51377,"line_start":275,"line_end":275,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51382,"byte_end":51385,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 6];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51390,"byte_end":51415,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51420,"byte_end":51423,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51428,"byte_end":51433,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/     let mut buf = &mut dst[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51438,"byte_end":51473,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/     buf.put_bytes(b'a', 4);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51478,"byte_end":51509,"line_start":281,"line_end":281,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51514,"byte_end":51517,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, buf.remaining_mut());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51522,"byte_end":51565,"line_start":283,"line_end":283,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51570,"byte_end":51575,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51580,"byte_end":51583,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"aaaa\\0\\0\", &dst);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51588,"byte_end":51622,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51627,"byte_end":51634,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51639,"byte_end":51642,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51647,"byte_end":51659,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51664,"byte_end":51667,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51672,"byte_end":51741,"line_start":291,"line_end":291,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51746,"byte_end":51757,"line_start":292,"line_end":292,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52303,"byte_end":52309,"line_start":317,"line_end":317,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"pub fn put_u8(&mut Self, u8)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 8 bit integer to `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51886,"byte_end":51933,"line_start":299,"line_end":299,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51938,"byte_end":51941,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51946,"byte_end":51988,"line_start":301,"line_end":301,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":51993,"byte_end":51996,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52001,"byte_end":52015,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52020,"byte_end":52023,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52028,"byte_end":52035,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52040,"byte_end":52062,"line_start":306,"line_end":306,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52067,"byte_end":52070,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52075,"byte_end":52100,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/ buf.put_u8(0x01);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52105,"byte_end":52126,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52131,"byte_end":52160,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52165,"byte_end":52172,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52177,"byte_end":52180,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52185,"byte_end":52197,"line_start":313,"line_end":313,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52202,"byte_end":52205,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52210,"byte_end":52279,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52284,"byte_end":52295,"line_start":316,"line_end":316,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52808,"byte_end":52814,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"pub fn put_i8(&mut Self, i8)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes a signed 8 bit integer to `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52394,"byte_end":52438,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52443,"byte_end":52446,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52451,"byte_end":52493,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52498,"byte_end":52501,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52506,"byte_end":52520,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52525,"byte_end":52528,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52533,"byte_end":52540,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52545,"byte_end":52567,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52572,"byte_end":52575,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52580,"byte_end":52605,"line_start":331,"line_end":331,"column_start":5,"column_end":30}},{"value":"/ buf.put_i8(0x01);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52610,"byte_end":52631,"line_start":332,"line_end":332,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52636,"byte_end":52665,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52670,"byte_end":52677,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52682,"byte_end":52685,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52690,"byte_end":52702,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52707,"byte_end":52710,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52715,"byte_end":52784,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52789,"byte_end":52800,"line_start":339,"line_end":339,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53354,"byte_end":53361,"line_start":363,"line_end":363,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"pub fn put_u16(&mut Self, u16)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52904,"byte_end":52977,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52982,"byte_end":52985,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":52990,"byte_end":53032,"line_start":347,"line_end":347,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53037,"byte_end":53040,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53045,"byte_end":53059,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53064,"byte_end":53067,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53072,"byte_end":53079,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53084,"byte_end":53106,"line_start":352,"line_end":352,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53111,"byte_end":53114,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53119,"byte_end":53144,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16(0x0809);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53149,"byte_end":53173,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53178,"byte_end":53211,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53216,"byte_end":53223,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53228,"byte_end":53231,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53236,"byte_end":53248,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53253,"byte_end":53256,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53261,"byte_end":53330,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53335,"byte_end":53346,"line_start":362,"line_end":362,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53891,"byte_end":53901,"line_start":385,"line_end":385,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"pub fn put_u16_le(&mut Self, u16)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53435,"byte_end":53511,"line_start":367,"line_end":367,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53516,"byte_end":53519,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53524,"byte_end":53566,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53571,"byte_end":53574,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53579,"byte_end":53593,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53598,"byte_end":53601,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53606,"byte_end":53613,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53618,"byte_end":53640,"line_start":374,"line_end":374,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53645,"byte_end":53648,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53653,"byte_end":53678,"line_start":376,"line_end":376,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16_le(0x0809);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53683,"byte_end":53710,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53715,"byte_end":53748,"line_start":378,"line_end":378,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53753,"byte_end":53760,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53765,"byte_end":53768,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53773,"byte_end":53785,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53790,"byte_end":53793,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53798,"byte_end":53867,"line_start":383,"line_end":383,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53872,"byte_end":53883,"line_start":384,"line_end":384,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54545,"byte_end":54555,"line_start":411,"line_end":411,"column_start":8,"column_end":18},"name":"put_u16_ne","qualname":"::buf::buf_mut::BufMut::put_u16_ne","value":"pub fn put_u16_ne(&mut Self, u16)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":53975,"byte_end":54051,"line_start":389,"line_end":389,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54056,"byte_end":54059,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54064,"byte_end":54106,"line_start":391,"line_end":391,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54111,"byte_end":54114,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54119,"byte_end":54133,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54138,"byte_end":54141,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54146,"byte_end":54153,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54158,"byte_end":54180,"line_start":396,"line_end":396,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54185,"byte_end":54188,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54193,"byte_end":54218,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16_ne(0x0809);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54223,"byte_end":54250,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54255,"byte_end":54291,"line_start":400,"line_end":400,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54296,"byte_end":54333,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54338,"byte_end":54350,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54355,"byte_end":54392,"line_start":403,"line_end":403,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54397,"byte_end":54402,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54407,"byte_end":54414,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54419,"byte_end":54422,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54427,"byte_end":54439,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54444,"byte_end":54447,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54452,"byte_end":54521,"line_start":409,"line_end":409,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54526,"byte_end":54537,"line_start":410,"line_end":410,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55076,"byte_end":55083,"line_start":433,"line_end":433,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"pub fn put_i16(&mut Self, i16)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54629,"byte_end":54699,"line_start":415,"line_end":415,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54704,"byte_end":54707,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54712,"byte_end":54754,"line_start":417,"line_end":417,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54759,"byte_end":54762,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54767,"byte_end":54781,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54786,"byte_end":54789,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54794,"byte_end":54801,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54806,"byte_end":54828,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54833,"byte_end":54836,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54841,"byte_end":54866,"line_start":424,"line_end":424,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16(0x0809);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54871,"byte_end":54895,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54900,"byte_end":54933,"line_start":426,"line_end":426,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54938,"byte_end":54945,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54950,"byte_end":54953,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54958,"byte_end":54970,"line_start":429,"line_end":429,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54975,"byte_end":54978,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":54983,"byte_end":55052,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55057,"byte_end":55068,"line_start":432,"line_end":432,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55610,"byte_end":55620,"line_start":455,"line_end":455,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"pub fn put_i16_le(&mut Self, i16)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55157,"byte_end":55230,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55235,"byte_end":55238,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55243,"byte_end":55285,"line_start":439,"line_end":439,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55290,"byte_end":55293,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55298,"byte_end":55312,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55317,"byte_end":55320,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55325,"byte_end":55332,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55337,"byte_end":55359,"line_start":444,"line_end":444,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55364,"byte_end":55367,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55372,"byte_end":55397,"line_start":446,"line_end":446,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16_le(0x0809);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55402,"byte_end":55429,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55434,"byte_end":55467,"line_start":448,"line_end":448,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55472,"byte_end":55479,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55484,"byte_end":55487,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55492,"byte_end":55504,"line_start":451,"line_end":451,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55509,"byte_end":55512,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55517,"byte_end":55586,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55591,"byte_end":55602,"line_start":454,"line_end":454,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56261,"byte_end":56271,"line_start":481,"line_end":481,"column_start":8,"column_end":18},"name":"put_i16_ne","qualname":"::buf::buf_mut::BufMut::put_i16_ne","value":"pub fn put_i16_ne(&mut Self, i16)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55694,"byte_end":55767,"line_start":459,"line_end":459,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55772,"byte_end":55775,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55780,"byte_end":55822,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55827,"byte_end":55830,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55835,"byte_end":55849,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55854,"byte_end":55857,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55862,"byte_end":55869,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55874,"byte_end":55896,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55901,"byte_end":55904,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55909,"byte_end":55934,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16_ne(0x0809);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55939,"byte_end":55966,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":55971,"byte_end":56007,"line_start":470,"line_end":470,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56012,"byte_end":56049,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56054,"byte_end":56066,"line_start":472,"line_end":472,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56071,"byte_end":56108,"line_start":473,"line_end":473,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56113,"byte_end":56118,"line_start":474,"line_end":474,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56123,"byte_end":56130,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56135,"byte_end":56138,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56143,"byte_end":56155,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56160,"byte_end":56163,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56168,"byte_end":56237,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56242,"byte_end":56253,"line_start":480,"line_end":480,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56807,"byte_end":56814,"line_start":503,"line_end":503,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"pub fn put_u32(&mut Self, u32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56345,"byte_end":56418,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56423,"byte_end":56426,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56431,"byte_end":56473,"line_start":487,"line_end":487,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56478,"byte_end":56481,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56486,"byte_end":56500,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56505,"byte_end":56508,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56513,"byte_end":56520,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56525,"byte_end":56547,"line_start":492,"line_end":492,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56552,"byte_end":56555,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56560,"byte_end":56585,"line_start":494,"line_end":494,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32(0x0809A0A1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56590,"byte_end":56618,"line_start":495,"line_end":495,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56623,"byte_end":56664,"line_start":496,"line_end":496,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56669,"byte_end":56676,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56681,"byte_end":56684,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56689,"byte_end":56701,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56706,"byte_end":56709,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56714,"byte_end":56783,"line_start":501,"line_end":501,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56788,"byte_end":56799,"line_start":502,"line_end":502,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57356,"byte_end":57366,"line_start":525,"line_end":525,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"pub fn put_u32_le(&mut Self, u32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56888,"byte_end":56964,"line_start":507,"line_end":507,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56969,"byte_end":56972,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":56977,"byte_end":57019,"line_start":509,"line_end":509,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57024,"byte_end":57027,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57032,"byte_end":57046,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57051,"byte_end":57054,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57059,"byte_end":57066,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57071,"byte_end":57093,"line_start":514,"line_end":514,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57098,"byte_end":57101,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57106,"byte_end":57131,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32_le(0x0809A0A1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57136,"byte_end":57167,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57172,"byte_end":57213,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57218,"byte_end":57225,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57230,"byte_end":57233,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57238,"byte_end":57250,"line_start":521,"line_end":521,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57255,"byte_end":57258,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57263,"byte_end":57332,"line_start":523,"line_end":523,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57337,"byte_end":57348,"line_start":524,"line_end":524,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58030,"byte_end":58040,"line_start":551,"line_end":551,"column_start":8,"column_end":18},"name":"put_u32_ne","qualname":"::buf::buf_mut::BufMut::put_u32_ne","value":"pub fn put_u32_ne(&mut Self, u32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57440,"byte_end":57516,"line_start":529,"line_end":529,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57521,"byte_end":57524,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57529,"byte_end":57571,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57576,"byte_end":57579,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57584,"byte_end":57598,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57603,"byte_end":57606,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57611,"byte_end":57618,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57623,"byte_end":57645,"line_start":536,"line_end":536,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57650,"byte_end":57653,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57658,"byte_end":57683,"line_start":538,"line_end":538,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32_ne(0x0809A0A1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57688,"byte_end":57719,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57724,"byte_end":57760,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57765,"byte_end":57810,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57815,"byte_end":57827,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57832,"byte_end":57877,"line_start":543,"line_end":543,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57882,"byte_end":57887,"line_start":544,"line_end":544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57892,"byte_end":57899,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57904,"byte_end":57907,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57912,"byte_end":57924,"line_start":547,"line_end":547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57929,"byte_end":57932,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":57937,"byte_end":58006,"line_start":549,"line_end":549,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58011,"byte_end":58022,"line_start":550,"line_end":550,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58573,"byte_end":58580,"line_start":573,"line_end":573,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"pub fn put_i32(&mut Self, i32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58114,"byte_end":58184,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58189,"byte_end":58192,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58197,"byte_end":58239,"line_start":557,"line_end":557,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58244,"byte_end":58247,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58252,"byte_end":58266,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58271,"byte_end":58274,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58279,"byte_end":58286,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58291,"byte_end":58313,"line_start":562,"line_end":562,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58318,"byte_end":58321,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58326,"byte_end":58351,"line_start":564,"line_end":564,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32(0x0809A0A1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58356,"byte_end":58384,"line_start":565,"line_end":565,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58389,"byte_end":58430,"line_start":566,"line_end":566,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58435,"byte_end":58442,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58447,"byte_end":58450,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58455,"byte_end":58467,"line_start":569,"line_end":569,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58472,"byte_end":58475,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58480,"byte_end":58549,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58554,"byte_end":58565,"line_start":572,"line_end":572,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59119,"byte_end":59129,"line_start":595,"line_end":595,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"pub fn put_i32_le(&mut Self, i32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58654,"byte_end":58727,"line_start":577,"line_end":577,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58732,"byte_end":58735,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58740,"byte_end":58782,"line_start":579,"line_end":579,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58787,"byte_end":58790,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58795,"byte_end":58809,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58814,"byte_end":58817,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58822,"byte_end":58829,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58834,"byte_end":58856,"line_start":584,"line_end":584,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58861,"byte_end":58864,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58869,"byte_end":58894,"line_start":586,"line_end":586,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32_le(0x0809A0A1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58899,"byte_end":58930,"line_start":587,"line_end":587,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58935,"byte_end":58976,"line_start":588,"line_end":588,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58981,"byte_end":58988,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":58993,"byte_end":58996,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59001,"byte_end":59013,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59018,"byte_end":59021,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59026,"byte_end":59095,"line_start":593,"line_end":593,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59100,"byte_end":59111,"line_start":594,"line_end":594,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59790,"byte_end":59800,"line_start":621,"line_end":621,"column_start":8,"column_end":18},"name":"put_i32_ne","qualname":"::buf::buf_mut::BufMut::put_i32_ne","value":"pub fn put_i32_ne(&mut Self, i32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59203,"byte_end":59276,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59281,"byte_end":59284,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59289,"byte_end":59331,"line_start":601,"line_end":601,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59336,"byte_end":59339,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59344,"byte_end":59358,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59363,"byte_end":59366,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59371,"byte_end":59378,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59383,"byte_end":59405,"line_start":606,"line_end":606,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59410,"byte_end":59413,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59418,"byte_end":59443,"line_start":608,"line_end":608,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32_ne(0x0809A0A1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59448,"byte_end":59479,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59484,"byte_end":59520,"line_start":610,"line_end":610,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59525,"byte_end":59570,"line_start":611,"line_end":611,"column_start":5,"column_end":50}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59575,"byte_end":59587,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59592,"byte_end":59637,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59642,"byte_end":59647,"line_start":614,"line_end":614,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59652,"byte_end":59659,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59664,"byte_end":59667,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59672,"byte_end":59684,"line_start":617,"line_end":617,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59689,"byte_end":59692,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59697,"byte_end":59766,"line_start":619,"line_end":619,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59771,"byte_end":59782,"line_start":620,"line_end":620,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60364,"byte_end":60371,"line_start":643,"line_end":643,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"pub fn put_u64(&mut Self, u64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59874,"byte_end":59951,"line_start":625,"line_end":625,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59956,"byte_end":59959,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":59964,"byte_end":60006,"line_start":627,"line_end":627,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60011,"byte_end":60014,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60019,"byte_end":60033,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60038,"byte_end":60041,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60046,"byte_end":60053,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60058,"byte_end":60080,"line_start":632,"line_end":632,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60085,"byte_end":60088,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60093,"byte_end":60118,"line_start":634,"line_end":634,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64(0x0102030405060708);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60123,"byte_end":60159,"line_start":635,"line_end":635,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60164,"byte_end":60221,"line_start":636,"line_end":636,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60226,"byte_end":60233,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60238,"byte_end":60241,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60246,"byte_end":60258,"line_start":639,"line_end":639,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60263,"byte_end":60266,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60271,"byte_end":60340,"line_start":641,"line_end":641,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60345,"byte_end":60356,"line_start":642,"line_end":642,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60937,"byte_end":60947,"line_start":665,"line_end":665,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"pub fn put_u64_le(&mut Self, u64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60445,"byte_end":60521,"line_start":647,"line_end":647,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60526,"byte_end":60529,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60534,"byte_end":60576,"line_start":649,"line_end":649,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60581,"byte_end":60584,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60589,"byte_end":60603,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60608,"byte_end":60611,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60616,"byte_end":60623,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60628,"byte_end":60650,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60655,"byte_end":60658,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60663,"byte_end":60688,"line_start":656,"line_end":656,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64_le(0x0102030405060708);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60693,"byte_end":60732,"line_start":657,"line_end":657,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60737,"byte_end":60794,"line_start":658,"line_end":658,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60799,"byte_end":60806,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60811,"byte_end":60814,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60819,"byte_end":60831,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60836,"byte_end":60839,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60844,"byte_end":60913,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":60918,"byte_end":60929,"line_start":664,"line_end":664,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61651,"byte_end":61661,"line_start":691,"line_end":691,"column_start":8,"column_end":18},"name":"put_u64_ne","qualname":"::buf::buf_mut::BufMut::put_u64_ne","value":"pub fn put_u64_ne(&mut Self, u64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61021,"byte_end":61097,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61102,"byte_end":61105,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61110,"byte_end":61152,"line_start":671,"line_end":671,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61157,"byte_end":61160,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61165,"byte_end":61179,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61184,"byte_end":61187,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61192,"byte_end":61199,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61204,"byte_end":61226,"line_start":676,"line_end":676,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61231,"byte_end":61234,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61239,"byte_end":61264,"line_start":678,"line_end":678,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64_ne(0x0102030405060708);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61269,"byte_end":61308,"line_start":679,"line_end":679,"column_start":5,"column_end":44}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61313,"byte_end":61349,"line_start":680,"line_end":680,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61354,"byte_end":61415,"line_start":681,"line_end":681,"column_start":5,"column_end":66}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61420,"byte_end":61432,"line_start":682,"line_end":682,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61437,"byte_end":61498,"line_start":683,"line_end":683,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61503,"byte_end":61508,"line_start":684,"line_end":684,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61513,"byte_end":61520,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61525,"byte_end":61528,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61533,"byte_end":61545,"line_start":687,"line_end":687,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61550,"byte_end":61553,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61558,"byte_end":61627,"line_start":689,"line_end":689,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61632,"byte_end":61643,"line_start":690,"line_end":690,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62222,"byte_end":62229,"line_start":713,"line_end":713,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"pub fn put_i64(&mut Self, i64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61735,"byte_end":61809,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61814,"byte_end":61817,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61822,"byte_end":61864,"line_start":697,"line_end":697,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61869,"byte_end":61872,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61877,"byte_end":61891,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61896,"byte_end":61899,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61904,"byte_end":61911,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61916,"byte_end":61938,"line_start":702,"line_end":702,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61943,"byte_end":61946,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61951,"byte_end":61976,"line_start":704,"line_end":704,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64(0x0102030405060708);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":61981,"byte_end":62017,"line_start":705,"line_end":705,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62022,"byte_end":62079,"line_start":706,"line_end":706,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62084,"byte_end":62091,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62096,"byte_end":62099,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62104,"byte_end":62116,"line_start":709,"line_end":709,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62121,"byte_end":62124,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62129,"byte_end":62198,"line_start":711,"line_end":711,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62203,"byte_end":62214,"line_start":712,"line_end":712,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62792,"byte_end":62802,"line_start":735,"line_end":735,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"pub fn put_i64_le(&mut Self, i64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62303,"byte_end":62376,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62381,"byte_end":62384,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62389,"byte_end":62431,"line_start":719,"line_end":719,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62436,"byte_end":62439,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62444,"byte_end":62458,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62463,"byte_end":62466,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62471,"byte_end":62478,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62483,"byte_end":62505,"line_start":724,"line_end":724,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62510,"byte_end":62513,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62518,"byte_end":62543,"line_start":726,"line_end":726,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64_le(0x0102030405060708);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62548,"byte_end":62587,"line_start":727,"line_end":727,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62592,"byte_end":62649,"line_start":728,"line_end":728,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62654,"byte_end":62661,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62666,"byte_end":62669,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62674,"byte_end":62686,"line_start":731,"line_end":731,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62691,"byte_end":62694,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62699,"byte_end":62768,"line_start":733,"line_end":733,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62773,"byte_end":62784,"line_start":734,"line_end":734,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63503,"byte_end":63513,"line_start":761,"line_end":761,"column_start":8,"column_end":18},"name":"put_i64_ne","qualname":"::buf::buf_mut::BufMut::put_i64_ne","value":"pub fn put_i64_ne(&mut Self, i64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62876,"byte_end":62949,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62954,"byte_end":62957,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":62962,"byte_end":63004,"line_start":741,"line_end":741,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63009,"byte_end":63012,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63017,"byte_end":63031,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63036,"byte_end":63039,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63044,"byte_end":63051,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63056,"byte_end":63078,"line_start":746,"line_end":746,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63083,"byte_end":63086,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63091,"byte_end":63116,"line_start":748,"line_end":748,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64_ne(0x0102030405060708);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63121,"byte_end":63160,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63165,"byte_end":63201,"line_start":750,"line_end":750,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63206,"byte_end":63267,"line_start":751,"line_end":751,"column_start":5,"column_end":66}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63272,"byte_end":63284,"line_start":752,"line_end":752,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63289,"byte_end":63350,"line_start":753,"line_end":753,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63355,"byte_end":63360,"line_start":754,"line_end":754,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63365,"byte_end":63372,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63377,"byte_end":63380,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63385,"byte_end":63397,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63402,"byte_end":63405,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63410,"byte_end":63479,"line_start":759,"line_end":759,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63484,"byte_end":63495,"line_start":760,"line_end":760,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64128,"byte_end":64136,"line_start":783,"line_end":783,"column_start":8,"column_end":16},"name":"put_u128","qualname":"::buf::buf_mut::BufMut::put_u128","value":"pub fn put_u128(&mut Self, u128)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63587,"byte_end":63665,"line_start":765,"line_end":765,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63670,"byte_end":63673,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63678,"byte_end":63721,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63726,"byte_end":63729,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63734,"byte_end":63748,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63753,"byte_end":63756,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63761,"byte_end":63768,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63773,"byte_end":63795,"line_start":772,"line_end":772,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63800,"byte_end":63803,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63808,"byte_end":63833,"line_start":774,"line_end":774,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128(0x01020304050607080910111213141516);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63838,"byte_end":63891,"line_start":775,"line_end":775,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63896,"byte_end":63985,"line_start":776,"line_end":776,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":63990,"byte_end":63997,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64002,"byte_end":64005,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64010,"byte_end":64022,"line_start":779,"line_end":779,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64027,"byte_end":64030,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64035,"byte_end":64104,"line_start":781,"line_end":781,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64109,"byte_end":64120,"line_start":782,"line_end":782,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64754,"byte_end":64765,"line_start":805,"line_end":805,"column_start":8,"column_end":19},"name":"put_u128_le","qualname":"::buf::buf_mut::BufMut::put_u128_le","value":"pub fn put_u128_le(&mut Self, u128)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64211,"byte_end":64288,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64293,"byte_end":64296,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64301,"byte_end":64344,"line_start":789,"line_end":789,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64349,"byte_end":64352,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64357,"byte_end":64371,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64376,"byte_end":64379,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64384,"byte_end":64391,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64396,"byte_end":64418,"line_start":794,"line_end":794,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64423,"byte_end":64426,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64431,"byte_end":64456,"line_start":796,"line_end":796,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128_le(0x01020304050607080910111213141516);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64461,"byte_end":64517,"line_start":797,"line_end":797,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64522,"byte_end":64611,"line_start":798,"line_end":798,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64616,"byte_end":64623,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64628,"byte_end":64631,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64636,"byte_end":64648,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64653,"byte_end":64656,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64661,"byte_end":64730,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64735,"byte_end":64746,"line_start":804,"line_end":804,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65553,"byte_end":65564,"line_start":831,"line_end":831,"column_start":8,"column_end":19},"name":"put_u128_ne","qualname":"::buf::buf_mut::BufMut::put_u128_ne","value":"pub fn put_u128_ne(&mut Self, u128)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64840,"byte_end":64917,"line_start":809,"line_end":809,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64922,"byte_end":64925,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64930,"byte_end":64973,"line_start":811,"line_end":811,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64978,"byte_end":64981,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":64986,"byte_end":65000,"line_start":813,"line_end":813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65005,"byte_end":65008,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65013,"byte_end":65020,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65025,"byte_end":65047,"line_start":816,"line_end":816,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65052,"byte_end":65055,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65060,"byte_end":65085,"line_start":818,"line_end":818,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128_ne(0x01020304050607080910111213141516);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65090,"byte_end":65146,"line_start":819,"line_end":819,"column_start":5,"column_end":61}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65151,"byte_end":65187,"line_start":820,"line_end":820,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65192,"byte_end":65285,"line_start":821,"line_end":821,"column_start":5,"column_end":98}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65290,"byte_end":65302,"line_start":822,"line_end":822,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65307,"byte_end":65400,"line_start":823,"line_end":823,"column_start":5,"column_end":98}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65405,"byte_end":65410,"line_start":824,"line_end":824,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65415,"byte_end":65422,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65427,"byte_end":65430,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65435,"byte_end":65447,"line_start":827,"line_end":827,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65452,"byte_end":65455,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65460,"byte_end":65529,"line_start":829,"line_end":829,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65534,"byte_end":65545,"line_start":830,"line_end":830,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66177,"byte_end":66185,"line_start":853,"line_end":853,"column_start":8,"column_end":16},"name":"put_i128","qualname":"::buf::buf_mut::BufMut::put_i128","value":"pub fn put_i128(&mut Self, i128)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65639,"byte_end":65714,"line_start":835,"line_end":835,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65719,"byte_end":65722,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65727,"byte_end":65770,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65775,"byte_end":65778,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65783,"byte_end":65797,"line_start":839,"line_end":839,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65802,"byte_end":65805,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65810,"byte_end":65817,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65822,"byte_end":65844,"line_start":842,"line_end":842,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65849,"byte_end":65852,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65857,"byte_end":65882,"line_start":844,"line_end":844,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128(0x01020304050607080910111213141516);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65887,"byte_end":65940,"line_start":845,"line_end":845,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":65945,"byte_end":66034,"line_start":846,"line_end":846,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66039,"byte_end":66046,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66051,"byte_end":66054,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66059,"byte_end":66071,"line_start":849,"line_end":849,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66076,"byte_end":66079,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66084,"byte_end":66153,"line_start":851,"line_end":851,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66158,"byte_end":66169,"line_start":852,"line_end":852,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66800,"byte_end":66811,"line_start":875,"line_end":875,"column_start":8,"column_end":19},"name":"put_i128_le","qualname":"::buf::buf_mut::BufMut::put_i128_le","value":"pub fn put_i128_le(&mut Self, i128)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66260,"byte_end":66334,"line_start":857,"line_end":857,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66339,"byte_end":66342,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66347,"byte_end":66390,"line_start":859,"line_end":859,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66395,"byte_end":66398,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66403,"byte_end":66417,"line_start":861,"line_end":861,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66422,"byte_end":66425,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66430,"byte_end":66437,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66442,"byte_end":66464,"line_start":864,"line_end":864,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66469,"byte_end":66472,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66477,"byte_end":66502,"line_start":866,"line_end":866,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128_le(0x01020304050607080910111213141516);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66507,"byte_end":66563,"line_start":867,"line_end":867,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66568,"byte_end":66657,"line_start":868,"line_end":868,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66662,"byte_end":66669,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66674,"byte_end":66677,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66682,"byte_end":66694,"line_start":871,"line_end":871,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66699,"byte_end":66702,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66707,"byte_end":66776,"line_start":873,"line_end":873,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66781,"byte_end":66792,"line_start":874,"line_end":874,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67596,"byte_end":67607,"line_start":901,"line_end":901,"column_start":8,"column_end":19},"name":"put_i128_ne","qualname":"::buf::buf_mut::BufMut::put_i128_ne","value":"pub fn put_i128_ne(&mut Self, i128)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66886,"byte_end":66960,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66965,"byte_end":66968,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":66973,"byte_end":67016,"line_start":881,"line_end":881,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67021,"byte_end":67024,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67029,"byte_end":67043,"line_start":883,"line_end":883,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67048,"byte_end":67051,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67056,"byte_end":67063,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67068,"byte_end":67090,"line_start":886,"line_end":886,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67095,"byte_end":67098,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67103,"byte_end":67128,"line_start":888,"line_end":888,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128_ne(0x01020304050607080910111213141516);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67133,"byte_end":67189,"line_start":889,"line_end":889,"column_start":5,"column_end":61}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67194,"byte_end":67230,"line_start":890,"line_end":890,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67235,"byte_end":67328,"line_start":891,"line_end":891,"column_start":5,"column_end":98}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67333,"byte_end":67345,"line_start":892,"line_end":892,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67350,"byte_end":67443,"line_start":893,"line_end":893,"column_start":5,"column_end":98}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67448,"byte_end":67453,"line_start":894,"line_end":894,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67458,"byte_end":67465,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67470,"byte_end":67473,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67478,"byte_end":67490,"line_start":897,"line_end":897,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67495,"byte_end":67498,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67503,"byte_end":67572,"line_start":899,"line_end":899,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67577,"byte_end":67588,"line_start":900,"line_end":900,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68149,"byte_end":68157,"line_start":923,"line_end":923,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"pub fn put_uint(&mut Self, u64, usize)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67682,"byte_end":67755,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67760,"byte_end":67763,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67768,"byte_end":67817,"line_start":907,"line_end":907,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67822,"byte_end":67825,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67830,"byte_end":67844,"line_start":909,"line_end":909,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67849,"byte_end":67852,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67857,"byte_end":67864,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67869,"byte_end":67891,"line_start":912,"line_end":912,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67896,"byte_end":67899,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67904,"byte_end":67929,"line_start":914,"line_end":914,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint(0x010203, 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67934,"byte_end":67964,"line_start":915,"line_end":915,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":67969,"byte_end":68006,"line_start":916,"line_end":916,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68011,"byte_end":68018,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68023,"byte_end":68026,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68031,"byte_end":68043,"line_start":919,"line_end":919,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68048,"byte_end":68051,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68056,"byte_end":68125,"line_start":921,"line_end":921,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68130,"byte_end":68141,"line_start":922,"line_end":922,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68757,"byte_end":68768,"line_start":945,"line_end":945,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"pub fn put_uint_le(&mut Self, u64, usize)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in the little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68280,"byte_end":68360,"line_start":927,"line_end":927,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68365,"byte_end":68368,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68373,"byte_end":68422,"line_start":929,"line_end":929,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68427,"byte_end":68430,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68435,"byte_end":68449,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68454,"byte_end":68457,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68462,"byte_end":68469,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68474,"byte_end":68496,"line_start":934,"line_end":934,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68501,"byte_end":68504,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68509,"byte_end":68534,"line_start":936,"line_end":936,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint_le(0x010203, 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68539,"byte_end":68572,"line_start":937,"line_end":937,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68577,"byte_end":68614,"line_start":938,"line_end":938,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68619,"byte_end":68626,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68631,"byte_end":68634,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68639,"byte_end":68651,"line_start":941,"line_end":941,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68656,"byte_end":68659,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68664,"byte_end":68733,"line_start":943,"line_end":943,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68738,"byte_end":68749,"line_start":944,"line_end":944,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69464,"byte_end":69475,"line_start":971,"line_end":971,"column_start":8,"column_end":19},"name":"put_uint_ne","qualname":"::buf::buf_mut::BufMut::put_uint_ne","value":"pub fn put_uint_ne(&mut Self, u64, usize)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in the native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68869,"byte_end":68949,"line_start":949,"line_end":949,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68954,"byte_end":68957,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":68962,"byte_end":69011,"line_start":951,"line_end":951,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69016,"byte_end":69019,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69024,"byte_end":69038,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69043,"byte_end":69046,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69051,"byte_end":69058,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69063,"byte_end":69085,"line_start":956,"line_end":956,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69090,"byte_end":69093,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69098,"byte_end":69123,"line_start":958,"line_end":958,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint_ne(0x010203, 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69128,"byte_end":69161,"line_start":959,"line_end":959,"column_start":5,"column_end":38}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69166,"byte_end":69202,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69207,"byte_end":69248,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69253,"byte_end":69265,"line_start":962,"line_end":962,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69270,"byte_end":69311,"line_start":963,"line_end":963,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69316,"byte_end":69321,"line_start":964,"line_end":964,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69326,"byte_end":69333,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69338,"byte_end":69341,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69346,"byte_end":69358,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69363,"byte_end":69366,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69371,"byte_end":69440,"line_start":969,"line_end":969,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69445,"byte_end":69456,"line_start":970,"line_end":970,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70177,"byte_end":70184,"line_start":997,"line_end":997,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"pub fn put_int(&mut Self, i64, usize)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes low `nbytes` of a signed integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes low `nbytes` of a signed integer to `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69668,"byte_end":69747,"line_start":979,"line_end":979,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69752,"byte_end":69755,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69760,"byte_end":69809,"line_start":981,"line_end":981,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69814,"byte_end":69817,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69822,"byte_end":69836,"line_start":983,"line_end":983,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69841,"byte_end":69844,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69849,"byte_end":69856,"line_start":985,"line_end":985,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69861,"byte_end":69883,"line_start":986,"line_end":986,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69888,"byte_end":69891,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69896,"byte_end":69921,"line_start":988,"line_end":988,"column_start":5,"column_end":30}},{"value":"/ buf.put_int(0x0504010203, 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69926,"byte_end":69959,"line_start":989,"line_end":989,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":69964,"byte_end":70001,"line_start":990,"line_end":990,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70006,"byte_end":70013,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70018,"byte_end":70021,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70026,"byte_end":70038,"line_start":993,"line_end":993,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70043,"byte_end":70046,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70051,"byte_end":70120,"line_start":995,"line_end":995,"column_start":5,"column_end":74}},{"value":"/ `self` or if `nbytes` is greater than 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70125,"byte_end":70169,"line_start":996,"line_end":996,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70822,"byte_end":70832,"line_start":1019,"line_end":1019,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"pub fn put_int_le(&mut Self, i64, usize)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes low `nbytes` of a signed integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes low `nbytes` of a signed integer to `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70307,"byte_end":70389,"line_start":1001,"line_end":1001,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70394,"byte_end":70397,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70402,"byte_end":70451,"line_start":1003,"line_end":1003,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70456,"byte_end":70459,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70464,"byte_end":70478,"line_start":1005,"line_end":1005,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70483,"byte_end":70486,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70491,"byte_end":70498,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70503,"byte_end":70525,"line_start":1008,"line_end":1008,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70530,"byte_end":70533,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70538,"byte_end":70563,"line_start":1010,"line_end":1010,"column_start":5,"column_end":30}},{"value":"/ buf.put_int_le(0x0504010203, 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70568,"byte_end":70604,"line_start":1011,"line_end":1011,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70609,"byte_end":70646,"line_start":1012,"line_end":1012,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70651,"byte_end":70658,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70663,"byte_end":70666,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70671,"byte_end":70683,"line_start":1015,"line_end":1015,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70688,"byte_end":70691,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70696,"byte_end":70765,"line_start":1017,"line_end":1017,"column_start":5,"column_end":74}},{"value":"/ `self` or if `nbytes` is greater than 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70770,"byte_end":70814,"line_start":1018,"line_end":1018,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71562,"byte_end":71572,"line_start":1045,"line_end":1045,"column_start":8,"column_end":18},"name":"put_int_ne","qualname":"::buf::buf_mut::BufMut::put_int_ne","value":"pub fn put_int_ne(&mut Self, i64, usize)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes low `nbytes` of a signed integer to `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes low `nbytes` of a signed integer to `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":70933,"byte_end":71015,"line_start":1023,"line_end":1023,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71020,"byte_end":71023,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71028,"byte_end":71077,"line_start":1025,"line_end":1025,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71082,"byte_end":71085,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71090,"byte_end":71104,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71109,"byte_end":71112,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71117,"byte_end":71124,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71129,"byte_end":71151,"line_start":1030,"line_end":1030,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71156,"byte_end":71159,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71164,"byte_end":71189,"line_start":1032,"line_end":1032,"column_start":5,"column_end":30}},{"value":"/ buf.put_int_ne(0x010203, 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71194,"byte_end":71226,"line_start":1033,"line_end":1033,"column_start":5,"column_end":37}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71231,"byte_end":71267,"line_start":1034,"line_end":1034,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71272,"byte_end":71313,"line_start":1035,"line_end":1035,"column_start":5,"column_end":46}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71318,"byte_end":71330,"line_start":1036,"line_end":1036,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71335,"byte_end":71376,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71381,"byte_end":71386,"line_start":1038,"line_end":1038,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71391,"byte_end":71398,"line_start":1039,"line_end":1039,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71403,"byte_end":71406,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71411,"byte_end":71423,"line_start":1041,"line_end":1041,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71428,"byte_end":71431,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71436,"byte_end":71505,"line_start":1043,"line_end":1043,"column_start":5,"column_end":74}},{"value":"/ `self` or if `nbytes` is greater than 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71510,"byte_end":71554,"line_start":1044,"line_end":1044,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72263,"byte_end":72270,"line_start":1072,"line_end":1072,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"pub fn put_f32(&mut Self, f32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71763,"byte_end":71837,"line_start":1053,"line_end":1053,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71842,"byte_end":71878,"line_start":1054,"line_end":1054,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71883,"byte_end":71886,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71891,"byte_end":71933,"line_start":1056,"line_end":1056,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71938,"byte_end":71941,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71946,"byte_end":71960,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71965,"byte_end":71968,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71973,"byte_end":71980,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":71985,"byte_end":72007,"line_start":1061,"line_end":1061,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72012,"byte_end":72015,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72020,"byte_end":72045,"line_start":1063,"line_end":1063,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32(1.2f32);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72050,"byte_end":72074,"line_start":1064,"line_end":1064,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72079,"byte_end":72120,"line_start":1065,"line_end":1065,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72125,"byte_end":72132,"line_start":1066,"line_end":1066,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72137,"byte_end":72140,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72145,"byte_end":72157,"line_start":1068,"line_end":1068,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72162,"byte_end":72165,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72170,"byte_end":72239,"line_start":1070,"line_end":1070,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72244,"byte_end":72255,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72844,"byte_end":72854,"line_start":1095,"line_end":1095,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"pub fn put_f32_le(&mut Self, f32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72338,"byte_end":72412,"line_start":1076,"line_end":1076,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72417,"byte_end":72456,"line_start":1077,"line_end":1077,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72461,"byte_end":72464,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72469,"byte_end":72511,"line_start":1079,"line_end":1079,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72516,"byte_end":72519,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72524,"byte_end":72538,"line_start":1081,"line_end":1081,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72543,"byte_end":72546,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72551,"byte_end":72558,"line_start":1083,"line_end":1083,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72563,"byte_end":72585,"line_start":1084,"line_end":1084,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72590,"byte_end":72593,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72598,"byte_end":72623,"line_start":1086,"line_end":1086,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32_le(1.2f32);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72628,"byte_end":72655,"line_start":1087,"line_end":1087,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72660,"byte_end":72701,"line_start":1088,"line_end":1088,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72706,"byte_end":72713,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72718,"byte_end":72721,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72726,"byte_end":72738,"line_start":1091,"line_end":1091,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72743,"byte_end":72746,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72751,"byte_end":72820,"line_start":1093,"line_end":1093,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72825,"byte_end":72836,"line_start":1094,"line_end":1094,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73552,"byte_end":73562,"line_start":1122,"line_end":1122,"column_start":8,"column_end":18},"name":"put_f32_ne","qualname":"::buf::buf_mut::BufMut::put_f32_ne","value":"pub fn put_f32_ne(&mut Self, f32)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes an IEEE754 single-precision (4 bytes) floating point number to\n `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":72925,"byte_end":72998,"line_start":1099,"line_end":1099,"column_start":5,"column_end":78}},{"value":"/ `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73003,"byte_end":73042,"line_start":1100,"line_end":1100,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73047,"byte_end":73050,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73055,"byte_end":73097,"line_start":1102,"line_end":1102,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73102,"byte_end":73105,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73110,"byte_end":73124,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73129,"byte_end":73132,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73137,"byte_end":73144,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73149,"byte_end":73171,"line_start":1107,"line_end":1107,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73176,"byte_end":73179,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73184,"byte_end":73209,"line_start":1109,"line_end":1109,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32_ne(1.2f32);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73214,"byte_end":73241,"line_start":1110,"line_end":1110,"column_start":5,"column_end":32}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73246,"byte_end":73282,"line_start":1111,"line_end":1111,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73287,"byte_end":73332,"line_start":1112,"line_end":1112,"column_start":5,"column_end":50}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73337,"byte_end":73349,"line_start":1113,"line_end":1113,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73354,"byte_end":73399,"line_start":1114,"line_end":1114,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73404,"byte_end":73409,"line_start":1115,"line_end":1115,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73414,"byte_end":73421,"line_start":1116,"line_end":1116,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73426,"byte_end":73429,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73434,"byte_end":73446,"line_start":1118,"line_end":1118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73451,"byte_end":73454,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73459,"byte_end":73528,"line_start":1120,"line_end":1120,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73533,"byte_end":73544,"line_start":1121,"line_end":1121,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74149,"byte_end":74156,"line_start":1145,"line_end":1145,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"pub fn put_f64(&mut Self, f64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73633,"byte_end":73707,"line_start":1126,"line_end":1126,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73712,"byte_end":73748,"line_start":1127,"line_end":1127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73753,"byte_end":73756,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73761,"byte_end":73803,"line_start":1129,"line_end":1129,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73808,"byte_end":73811,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73816,"byte_end":73830,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73835,"byte_end":73838,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73843,"byte_end":73850,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73855,"byte_end":73877,"line_start":1134,"line_end":1134,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73882,"byte_end":73885,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73890,"byte_end":73915,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64(1.2f64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73920,"byte_end":73944,"line_start":1137,"line_end":1137,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":73949,"byte_end":74006,"line_start":1138,"line_end":1138,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74011,"byte_end":74018,"line_start":1139,"line_end":1139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74023,"byte_end":74026,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74031,"byte_end":74043,"line_start":1141,"line_end":1141,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74048,"byte_end":74051,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74056,"byte_end":74125,"line_start":1143,"line_end":1143,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74130,"byte_end":74141,"line_start":1144,"line_end":1144,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74746,"byte_end":74756,"line_start":1168,"line_end":1168,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"pub fn put_f64_le(&mut Self, f64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74224,"byte_end":74298,"line_start":1149,"line_end":1149,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74303,"byte_end":74342,"line_start":1150,"line_end":1150,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74347,"byte_end":74350,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74355,"byte_end":74397,"line_start":1152,"line_end":1152,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74402,"byte_end":74405,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74410,"byte_end":74424,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74429,"byte_end":74432,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74437,"byte_end":74444,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74449,"byte_end":74471,"line_start":1157,"line_end":1157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74476,"byte_end":74479,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74484,"byte_end":74509,"line_start":1159,"line_end":1159,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64_le(1.2f64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74514,"byte_end":74541,"line_start":1160,"line_end":1160,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74546,"byte_end":74603,"line_start":1161,"line_end":1161,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74608,"byte_end":74615,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74620,"byte_end":74623,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74628,"byte_end":74640,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74645,"byte_end":74648,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74653,"byte_end":74722,"line_start":1166,"line_end":1166,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74727,"byte_end":74738,"line_start":1167,"line_end":1167,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75487,"byte_end":75497,"line_start":1195,"line_end":1195,"column_start":8,"column_end":18},"name":"put_f64_ne","qualname":"::buf::buf_mut::BufMut::put_f64_ne","value":"pub fn put_f64_ne(&mut Self, f64)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in native-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74827,"byte_end":74901,"line_start":1172,"line_end":1172,"column_start":5,"column_end":79}},{"value":"/ `self` in native-endian byte order.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74906,"byte_end":74945,"line_start":1173,"line_end":1173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74950,"byte_end":74953,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":74958,"byte_end":75000,"line_start":1175,"line_end":1175,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75005,"byte_end":75008,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75013,"byte_end":75027,"line_start":1177,"line_end":1177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75032,"byte_end":75035,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75040,"byte_end":75047,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75052,"byte_end":75074,"line_start":1180,"line_end":1180,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75079,"byte_end":75082,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75087,"byte_end":75112,"line_start":1182,"line_end":1182,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64_ne(1.2f64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75117,"byte_end":75144,"line_start":1183,"line_end":1183,"column_start":5,"column_end":32}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75149,"byte_end":75185,"line_start":1184,"line_end":1184,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75190,"byte_end":75251,"line_start":1185,"line_end":1185,"column_start":5,"column_end":66}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75256,"byte_end":75268,"line_start":1186,"line_end":1186,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75273,"byte_end":75334,"line_start":1187,"line_end":1187,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75339,"byte_end":75344,"line_start":1188,"line_end":1188,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75349,"byte_end":75356,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75361,"byte_end":75364,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75369,"byte_end":75381,"line_start":1191,"line_end":1191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75386,"byte_end":75389,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75394,"byte_end":75463,"line_start":1193,"line_end":1193,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75468,"byte_end":75479,"line_start":1194,"line_end":1194,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75912,"byte_end":75917,"line_start":1212,"line_end":1212,"column_start":8,"column_end":13},"name":"limit","qualname":"::buf::buf_mut::BufMut::limit","value":"pub fn limit(Self, usize) -> Limit<Self> where Self: Sized","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Creates an adaptor which can write at most `limit` bytes to `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which can write at most `limit` bytes to `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75568,"byte_end":75639,"line_start":1199,"line_end":1199,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75644,"byte_end":75647,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75652,"byte_end":75666,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75671,"byte_end":75674,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75679,"byte_end":75686,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75691,"byte_end":75713,"line_start":1204,"line_end":1204,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75718,"byte_end":75721,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ let arr = &mut [0u8; 128][..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75726,"byte_end":75760,"line_start":1206,"line_end":1206,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(arr.remaining_mut(), 128);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75765,"byte_end":75806,"line_start":1207,"line_end":1207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75811,"byte_end":75814,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ let dst = arr.limit(10);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75819,"byte_end":75847,"line_start":1209,"line_end":1209,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(dst.remaining_mut(), 10);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75852,"byte_end":75892,"line_start":1210,"line_end":1210,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":75897,"byte_end":75904,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76766,"byte_end":76772,"line_start":1242,"line_end":1242,"column_start":8,"column_end":14},"name":"writer","qualname":"::buf::buf_mut::BufMut::writer","value":"pub fn writer(Self) -> Writer<Self> where Self: Sized","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Write` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Write` trait for `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76033,"byte_end":76102,"line_start":1219,"line_end":1219,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76107,"byte_end":76110,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Write` by adapting","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76115,"byte_end":76189,"line_start":1221,"line_end":1221,"column_start":5,"column_end":79}},{"value":"/ the `Write` trait functions to the `BufMut` trait functions. Given that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76194,"byte_end":76269,"line_start":1222,"line_end":1222,"column_start":5,"column_end":80}},{"value":"/ `BufMut` operations are infallible, none of the `Write` functions will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76274,"byte_end":76348,"line_start":1223,"line_end":1223,"column_start":5,"column_end":79}},{"value":"/ return with `Err`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76353,"byte_end":76375,"line_start":1224,"line_end":1224,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76380,"byte_end":76383,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76388,"byte_end":76402,"line_start":1226,"line_end":1226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76407,"byte_end":76410,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76415,"byte_end":76422,"line_start":1228,"line_end":1228,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76427,"byte_end":76449,"line_start":1229,"line_end":1229,"column_start":5,"column_end":27}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76454,"byte_end":76477,"line_start":1230,"line_end":1230,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76482,"byte_end":76485,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76490,"byte_end":76524,"line_start":1232,"line_end":1232,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76529,"byte_end":76532,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ let num = buf.write(&b\"hello world\"[..]).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76537,"byte_end":76591,"line_start":1234,"line_end":1234,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76596,"byte_end":76620,"line_start":1235,"line_end":1235,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76625,"byte_end":76628,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76633,"byte_end":76664,"line_start":1237,"line_end":1237,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76669,"byte_end":76672,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76677,"byte_end":76718,"line_start":1239,"line_end":1239,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76723,"byte_end":76730,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76735,"byte_end":76758,"line_start":1241,"line_end":1241,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77433,"byte_end":77442,"line_start":1269,"line_end":1269,"column_start":8,"column_end":17},"name":"chain_mut","qualname":"::buf::buf_mut::BufMut::chain_mut","value":"pub fn chain_mut<U: BufMut>(Self, U) -> Chain<Self, U> where Self: Sized","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Creates an adapter which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adapter which will chain this buffer with another.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76869,"byte_end":76934,"line_start":1249,"line_end":1249,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76939,"byte_end":76942,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ The returned `BufMut` instance will first write to all bytes from","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":76947,"byte_end":77016,"line_start":1251,"line_end":1251,"column_start":5,"column_end":74}},{"value":"/ `self`. Afterwards, it will write to `next`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77021,"byte_end":77069,"line_start":1252,"line_end":1252,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77074,"byte_end":77077,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77082,"byte_end":77096,"line_start":1254,"line_end":1254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77101,"byte_end":77104,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77109,"byte_end":77116,"line_start":1256,"line_end":1256,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77121,"byte_end":77143,"line_start":1257,"line_end":1257,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77148,"byte_end":77151,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ let mut a = [0u8; 5];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77156,"byte_end":77181,"line_start":1259,"line_end":1259,"column_start":5,"column_end":30}},{"value":"/ let mut b = [0u8; 6];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77186,"byte_end":77211,"line_start":1260,"line_end":1260,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77216,"byte_end":77219,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ let mut chain = (&mut a[..]).chain_mut(&mut b[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77224,"byte_end":77279,"line_start":1262,"line_end":1262,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77284,"byte_end":77287,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ chain.put_slice(b\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77292,"byte_end":77328,"line_start":1264,"line_end":1264,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77333,"byte_end":77336,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77341,"byte_end":77374,"line_start":1266,"line_end":1266,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77379,"byte_end":77413,"line_start":1267,"line_end":1267,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":77418,"byte_end":77425,"line_start":1268,"line_end":1268,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83622,"byte_end":83627,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[{"value":"/ A `Chain` sequences two buffers.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":82851,"byte_end":82887,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":82888,"byte_end":82891,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Chain` is an adapter that links two underlying buffers and provides a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":82892,"byte_end":82966,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ continuous view across both buffers. It is able to sequence either immutable","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":82967,"byte_end":83047,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ buffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83048,"byte_end":83116,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83117,"byte_end":83120,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`Buf::chain`]. Please see that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83121,"byte_end":83200,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ function's documentation for more detail.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83201,"byte_end":83246,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83247,"byte_end":83250,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83251,"byte_end":83265,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83266,"byte_end":83269,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83270,"byte_end":83277,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, Buf};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83278,"byte_end":83306,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83307,"byte_end":83310,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83311,"byte_end":83345,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83346,"byte_end":83376,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83377,"byte_end":83380,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let full: Bytes = buf.copy_to_bytes(11);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83381,"byte_end":83425,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(full[..], b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83426,"byte_end":83471,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83472,"byte_end":83479,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83480,"byte_end":83483,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Buf::chain`]: trait.Buf.html#method.chain","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83484,"byte_end":83531,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83532,"byte_end":83559,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83560,"byte_end":83593,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84117,"byte_end":84126,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"pub fn first_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the first underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83831,"byte_end":83882,"line_start":43,"line_end":43,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83887,"byte_end":83890,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83895,"byte_end":83909,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83914,"byte_end":83917,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83922,"byte_end":83929,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83934,"byte_end":83953,"line_start":48,"line_end":48,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83958,"byte_end":83961,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83966,"byte_end":83995,"line_start":50,"line_end":50,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84000,"byte_end":84030,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84035,"byte_end":84038,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.first_ref()[..], b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84043,"byte_end":84093,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84098,"byte_end":84105,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84541,"byte_end":84550,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"pub fn first_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the first underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84169,"byte_end":84228,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84233,"byte_end":84236,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84241,"byte_end":84255,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84260,"byte_end":84263,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84268,"byte_end":84275,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84280,"byte_end":84299,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84304,"byte_end":84307,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello\"[..])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84312,"byte_end":84345,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84350,"byte_end":84380,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84385,"byte_end":84388,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ buf.first_mut().advance(1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84393,"byte_end":84424,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84429,"byte_end":84432,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let full = buf.copy_to_bytes(9);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84437,"byte_end":84473,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(full, b\"elloworld\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84478,"byte_end":84517,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84522,"byte_end":84529,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84889,"byte_end":84897,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"pub fn last_ref(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the last underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84605,"byte_end":84655,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84660,"byte_end":84663,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84668,"byte_end":84682,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84687,"byte_end":84690,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84695,"byte_end":84702,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84707,"byte_end":84726,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84731,"byte_end":84734,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84739,"byte_end":84768,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84773,"byte_end":84803,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84808,"byte_end":84811,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.last_ref()[..], b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84816,"byte_end":84865,"line_start":88,"line_end":88,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84870,"byte_end":84877,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85313,"byte_end":85321,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"pub fn last_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the last underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":84940,"byte_end":84998,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85003,"byte_end":85006,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85011,"byte_end":85025,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85030,"byte_end":85033,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85038,"byte_end":85045,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85050,"byte_end":85069,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85074,"byte_end":85077,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85082,"byte_end":85116,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85121,"byte_end":85151,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85156,"byte_end":85159,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ buf.last_mut().advance(1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85164,"byte_end":85194,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85199,"byte_end":85202,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let full = buf.copy_to_bytes(10);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85207,"byte_end":85244,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(full, b\"hello orld\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85249,"byte_end":85289,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85294,"byte_end":85301,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85754,"byte_end":85764,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[{"value":"/ Consumes this `Chain`, returning the underlying values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85376,"byte_end":85435,"line_start":113,"line_end":113,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85440,"byte_end":85443,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85448,"byte_end":85462,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85467,"byte_end":85470,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85475,"byte_end":85482,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85487,"byte_end":85506,"line_start":118,"line_end":118,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85511,"byte_end":85514,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let chain = (&b\"hello\"[..])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85519,"byte_end":85550,"line_start":120,"line_end":120,"column_start":5,"column_end":36}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85555,"byte_end":85585,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85590,"byte_end":85593,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let (first, last) = chain.into_inner();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85598,"byte_end":85641,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(first[..], b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85646,"byte_end":85686,"line_start":124,"line_end":124,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(last[..], b\"world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85691,"byte_end":85730,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85735,"byte_end":85742,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88881,"byte_end":88889,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::buf::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1363}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Iterator over the bytes contained by the buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88337,"byte_end":88389,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88390,"byte_end":88393,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Buf`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88394,"byte_end":88455,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88456,"byte_end":88459,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88460,"byte_end":88474,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88475,"byte_end":88478,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88479,"byte_end":88495,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88496,"byte_end":88499,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88500,"byte_end":88507,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88508,"byte_end":88529,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88530,"byte_end":88533,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88534,"byte_end":88573,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88574,"byte_end":88609,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88610,"byte_end":88613,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88614,"byte_end":88654,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88655,"byte_end":88695,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88696,"byte_end":88736,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88737,"byte_end":88771,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88772,"byte_end":88779,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88780,"byte_end":88783,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: trait.Buf.html#method.iter","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88784,"byte_end":88824,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88825,"byte_end":88852,"line_start":24,"line_end":24,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89849,"byte_end":89859,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoIter<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `IntoIter`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `IntoIter`, returning the underlying value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89450,"byte_end":89511,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89516,"byte_end":89519,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89524,"byte_end":89538,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89543,"byte_end":89546,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89551,"byte_end":89562,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89567,"byte_end":89595,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89600,"byte_end":89603,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89608,"byte_end":89647,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89652,"byte_end":89687,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89692,"byte_end":89695,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89700,"byte_end":89740,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89745,"byte_end":89748,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let buf = iter.into_inner();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89753,"byte_end":89785,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(2, buf.remaining());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89790,"byte_end":89825,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89830,"byte_end":89837,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90338,"byte_end":90345,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoIter<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89903,"byte_end":89948,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89953,"byte_end":89956,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":89961,"byte_end":90026,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90031,"byte_end":90034,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90039,"byte_end":90053,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90058,"byte_end":90061,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90066,"byte_end":90077,"line_start":75,"line_end":75,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90082,"byte_end":90110,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90115,"byte_end":90118,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90123,"byte_end":90162,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90167,"byte_end":90202,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90207,"byte_end":90210,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90215,"byte_end":90255,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90260,"byte_end":90263,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, iter.get_ref().remaining());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90268,"byte_end":90314,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90319,"byte_end":90326,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90878,"byte_end":90885,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoIter<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90392,"byte_end":90445,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90450,"byte_end":90453,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90458,"byte_end":90523,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90528,"byte_end":90531,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90536,"byte_end":90550,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90555,"byte_end":90558,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90563,"byte_end":90574,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BytesMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90579,"byte_end":90610,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90615,"byte_end":90618,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let buf = BytesMut::from(&b\"abc\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90623,"byte_end":90665,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90670,"byte_end":90705,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90710,"byte_end":90713,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90718,"byte_end":90758,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90763,"byte_end":90766,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ iter.get_mut().advance(1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90771,"byte_end":90801,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90806,"byte_end":90809,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90814,"byte_end":90854,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90859,"byte_end":90866,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91590,"byte_end":91595,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Limit","qualname":"::buf::limit::Limit","value":"Limit {  }","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370}],"decl_id":null,"docs":" A `BufMut` adapter which limits the amount of bytes that can be written\n to an underlying buffer.\n","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which limits the amount of bytes that can be written","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91457,"byte_end":91532,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ to an underlying buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91533,"byte_end":91561,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91818,"byte_end":91828,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Limit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Limit`, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this `Limit`, returning the underlying value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91748,"byte_end":91806,"line_start":19,"line_end":19,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92012,"byte_end":92019,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Limit<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91872,"byte_end":91920,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91925,"byte_end":91928,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91933,"byte_end":92000,"line_start":26,"line_end":26,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92214,"byte_end":92221,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Limit<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92066,"byte_end":92122,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92127,"byte_end":92130,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92135,"byte_end":92202,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92517,"byte_end":92522,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limit<T>>::limit","value":"pub fn limit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be written","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be written","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92280,"byte_end":92339,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92344,"byte_end":92347,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92352,"byte_end":92362,"line_start":40,"line_end":40,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92367,"byte_end":92370,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than indicated by this method then","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92375,"byte_end":92451,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92456,"byte_end":92505,"line_start":43,"line_end":43,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92787,"byte_end":92796,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Limit<T>>::set_limit","value":"pub fn set_limit(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be written.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be written.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92571,"byte_end":92628,"line_start":48,"line_end":48,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92633,"byte_end":92636,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92641,"byte_end":92651,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92656,"byte_end":92659,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than `lim` then that is the actual","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92664,"byte_end":92740,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ number of available bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92745,"byte_end":92775,"line_start":53,"line_end":53,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93642,"byte_end":93648,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Reader","qualname":"::buf::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":1376}],"decl_id":null,"docs":" A `Buf` adapter which implements `io::Read` for the inner value.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which implements `io::Read` for the inner value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93382,"byte_end":93450,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93451,"byte_end":93454,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `reader()` on `Buf`. See","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93455,"byte_end":93527,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ documentation of [`reader()`](trait.Buf.html#method.reader) for more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93528,"byte_end":93600,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93601,"byte_end":93613,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94089,"byte_end":94096,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<B>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93757,"byte_end":93802,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93807,"byte_end":93810,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93815,"byte_end":93880,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93885,"byte_end":93888,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93893,"byte_end":93907,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93912,"byte_end":93915,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93920,"byte_end":93931,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93936,"byte_end":93955,"line_start":27,"line_end":27,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93960,"byte_end":93963,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let buf = b\"hello world\".reader();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93968,"byte_end":94006,"line_start":29,"line_end":29,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94011,"byte_end":94014,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello world\", buf.get_ref());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94019,"byte_end":94065,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94070,"byte_end":94077,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94284,"byte_end":94291,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94141,"byte_end":94194,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94199,"byte_end":94202,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94207,"byte_end":94272,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94751,"byte_end":94761,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Reader`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Reader`, returning the underlying value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94348,"byte_end":94407,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94412,"byte_end":94415,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94420,"byte_end":94434,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94439,"byte_end":94442,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94447,"byte_end":94458,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94463,"byte_end":94482,"line_start":49,"line_end":49,"column_start":5,"column_end":24}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94487,"byte_end":94503,"line_start":50,"line_end":50,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94508,"byte_end":94511,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".reader();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94516,"byte_end":94558,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/ let mut dst = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94563,"byte_end":94588,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94593,"byte_end":94596,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut buf, &mut dst).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94601,"byte_end":94643,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94648,"byte_end":94651,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94656,"byte_end":94687,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(0, buf.remaining());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94692,"byte_end":94727,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94732,"byte_end":94739,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95568,"byte_end":95572,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which limits the bytes read from an underlying buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95312,"byte_end":95386,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95387,"byte_end":95390,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `take()` on `Buf`. See","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95391,"byte_end":95461,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ documentation of [`take()`](trait.Buf.html#method.take) for more details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95462,"byte_end":95539,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96185,"byte_end":96195,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Take`, returning the underlying value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95715,"byte_end":95772,"line_start":20,"line_end":20,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95777,"byte_end":95780,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95785,"byte_end":95799,"line_start":22,"line_end":22,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95804,"byte_end":95807,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95812,"byte_end":95823,"line_start":24,"line_end":24,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95828,"byte_end":95857,"line_start":25,"line_end":25,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95862,"byte_end":95865,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95870,"byte_end":95911,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95916,"byte_end":95941,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95946,"byte_end":95949,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95954,"byte_end":95976,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95981,"byte_end":96013,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96018,"byte_end":96021,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96026,"byte_end":96061,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96066,"byte_end":96069,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96074,"byte_end":96090,"line_start":35,"line_end":35,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96095,"byte_end":96117,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96122,"byte_end":96161,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96166,"byte_end":96173,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96570,"byte_end":96577,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96239,"byte_end":96284,"line_start":43,"line_end":43,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96289,"byte_end":96292,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96297,"byte_end":96362,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96367,"byte_end":96370,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96375,"byte_end":96389,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96394,"byte_end":96397,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96402,"byte_end":96413,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96418,"byte_end":96437,"line_start":50,"line_end":50,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96442,"byte_end":96445,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let buf = b\"hello world\".take(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96450,"byte_end":96487,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96492,"byte_end":96495,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, buf.get_ref().remaining());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96500,"byte_end":96546,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96551,"byte_end":96558,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97062,"byte_end":97069,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96624,"byte_end":96677,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96682,"byte_end":96685,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96690,"byte_end":96755,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96760,"byte_end":96763,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96768,"byte_end":96782,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96787,"byte_end":96790,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96795,"byte_end":96806,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96811,"byte_end":96840,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96845,"byte_end":96848,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96853,"byte_end":96894,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96899,"byte_end":96924,"line_start":70,"line_end":70,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96929,"byte_end":96932,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().advance(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96937,"byte_end":96966,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96971,"byte_end":96974,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":96979,"byte_end":97001,"line_start":74,"line_end":74,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"ll\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97006,"byte_end":97038,"line_start":75,"line_end":75,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97043,"byte_end":97050,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97621,"byte_end":97626,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be read.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97128,"byte_end":97185,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97190,"byte_end":97193,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97198,"byte_end":97208,"line_start":83,"line_end":83,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97213,"byte_end":97216,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than indicated by this method then","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97221,"byte_end":97294,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97299,"byte_end":97348,"line_start":86,"line_end":86,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97353,"byte_end":97356,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97361,"byte_end":97375,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97380,"byte_end":97383,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97388,"byte_end":97399,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97404,"byte_end":97423,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97428,"byte_end":97431,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97436,"byte_end":97477,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97482,"byte_end":97485,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, buf.limit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97490,"byte_end":97521,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97526,"byte_end":97561,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(1, buf.limit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97566,"byte_end":97597,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97602,"byte_end":97609,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98266,"byte_end":98275,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be read.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97675,"byte_end":97729,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97734,"byte_end":97737,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97742,"byte_end":97752,"line_start":105,"line_end":105,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97757,"byte_end":97760,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than `lim` then that is the actual","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97765,"byte_end":97838,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ number of available bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97843,"byte_end":97873,"line_start":108,"line_end":108,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97878,"byte_end":97881,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97886,"byte_end":97900,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97905,"byte_end":97908,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97913,"byte_end":97924,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97929,"byte_end":97958,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97963,"byte_end":97966,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":97971,"byte_end":98012,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98017,"byte_end":98042,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98047,"byte_end":98050,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98055,"byte_end":98077,"line_start":118,"line_end":118,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98082,"byte_end":98114,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98119,"byte_end":98122,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98127,"byte_end":98143,"line_start":121,"line_end":121,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98148,"byte_end":98151,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buf.set_limit(3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98156,"byte_end":98177,"line_start":123,"line_end":123,"column_start":5,"column_end":26}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98182,"byte_end":98204,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98209,"byte_end":98242,"line_start":125,"line_end":125,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98247,"byte_end":98254,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99754,"byte_end":99765,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"UninitSlice","qualname":"::buf::uninit_slice::UninitSlice","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uninitialized byte slice.","sig":null,"attributes":[{"value":"/ Uninitialized byte slice.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99114,"byte_end":99143,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99144,"byte_end":99147,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Returned by `BufMut::chunk_mut()`, the referenced byte slice may be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99148,"byte_end":99219,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ uninitialized. The wrapper provides safe access without introducing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99220,"byte_end":99291,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ undefined behavior.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99292,"byte_end":99315,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99316,"byte_end":99319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The safety invariants of this wrapper are:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99320,"byte_end":99366,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99367,"byte_end":99370,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/  1. Reading from an `UninitSlice` is undefined behavior.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99371,"byte_end":99431,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/  2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99432,"byte_end":99510,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99511,"byte_end":99514,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99515,"byte_end":99592,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ that it is possible in safe code to write uninitialized bytes to an","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99593,"byte_end":99664,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ `&mut [MaybeUninit<u8>]`, which this type prohibits.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99665,"byte_end":99721,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99722,"byte_end":99742,"line_start":21,"line_end":21,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100565,"byte_end":100583,"line_start":48,"line_end":48,"column_start":19,"column_end":37},"name":"from_raw_parts_mut","qualname":"<UninitSlice>::from_raw_parts_mut","value":"pub unsafe fn from_raw_parts_mut<'a>(*mut u8, usize) -> &'a mut UninitSlice","parent":null,"children":[],"decl_id":null,"docs":" Create a `&mut UninitSlice` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Create a `&mut UninitSlice` from a pointer and a length.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99978,"byte_end":100038,"line_start":29,"line_end":29,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100043,"byte_end":100046,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100051,"byte_end":100063,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100068,"byte_end":100071,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `ptr` references a valid memory region owned","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100076,"byte_end":100152,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ by the caller representing a byte slice for the duration of `'a`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100157,"byte_end":100226,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100231,"byte_end":100234,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100239,"byte_end":100253,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100258,"byte_end":100261,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100266,"byte_end":100273,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100278,"byte_end":100310,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100315,"byte_end":100318,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\".to_vec();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100323,"byte_end":100363,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"/ let ptr = bytes.as_ptr() as *mut _;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100368,"byte_end":100407,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let len = bytes.len();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100412,"byte_end":100438,"line_start":43,"line_end":43,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100443,"byte_end":100446,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100451,"byte_end":100520,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100525,"byte_end":100532,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100537,"byte_end":100546,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101288,"byte_end":101298,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"write_byte","qualname":"<UninitSlice>::write_byte","value":"pub fn write_byte(&mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Write a single byte at the specified offset.","sig":null,"attributes":[{"value":"/ Write a single byte at the specified offset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100801,"byte_end":100849,"line_start":54,"line_end":54,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100854,"byte_end":100857,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100862,"byte_end":100874,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100879,"byte_end":100882,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The function panics if `index` is out of bounds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100887,"byte_end":100939,"line_start":58,"line_end":58,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100944,"byte_end":100947,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100952,"byte_end":100966,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100971,"byte_end":100974,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100979,"byte_end":100986,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":100991,"byte_end":101023,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101028,"byte_end":101031,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut data = [b'f', b'o', b'o'];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101036,"byte_end":101074,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101079,"byte_end":101160,"line_start":66,"line_end":66,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101165,"byte_end":101168,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ slice.write_byte(0, b'b');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101173,"byte_end":101203,"line_start":68,"line_end":68,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101208,"byte_end":101211,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"boo\", &data[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101216,"byte_end":101250,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101255,"byte_end":101262,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101267,"byte_end":101276,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102007,"byte_end":102022,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<UninitSlice>::copy_from_slice","value":"pub fn copy_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Copies bytes  from `src` into `self`.","sig":null,"attributes":[{"value":"/ Copies bytes  from `src` into `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101443,"byte_end":101484,"line_start":79,"line_end":79,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101489,"byte_end":101492,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The length of `src` must be the same as `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101497,"byte_end":101548,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101553,"byte_end":101556,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101561,"byte_end":101573,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101578,"byte_end":101581,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function panics if `src` has a different length than `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101586,"byte_end":101654,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101659,"byte_end":101662,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101667,"byte_end":101681,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101686,"byte_end":101689,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101694,"byte_end":101701,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101706,"byte_end":101738,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101743,"byte_end":101746,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let mut data = [b'f', b'o', b'o'];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101751,"byte_end":101789,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101794,"byte_end":101875,"line_start":93,"line_end":93,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101880,"byte_end":101883,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ slice.copy_from_slice(b\"bar\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101888,"byte_end":101922,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101927,"byte_end":101930,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"bar\", &data[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101935,"byte_end":101969,"line_start":97,"line_end":97,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101974,"byte_end":101981,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":101986,"byte_end":101995,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102712,"byte_end":102722,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<UninitSlice>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Return a raw pointer to the slice's buffer.","sig":null,"attributes":[{"value":"/ Return a raw pointer to the slice's buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102237,"byte_end":102284,"line_start":110,"line_end":110,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102289,"byte_end":102292,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102297,"byte_end":102309,"line_start":112,"line_end":112,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102314,"byte_end":102317,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The caller **must not** read from the referenced memory and **must not**","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102322,"byte_end":102398,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ write **uninitialized** bytes to the slice either.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102403,"byte_end":102457,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102462,"byte_end":102465,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102470,"byte_end":102484,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102489,"byte_end":102492,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102497,"byte_end":102504,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102509,"byte_end":102531,"line_start":120,"line_end":120,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102536,"byte_end":102539,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102544,"byte_end":102573,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102578,"byte_end":102612,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ let ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102617,"byte_end":102674,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102679,"byte_end":102686,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102691,"byte_end":102700,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103587,"byte_end":103606,"line_start":153,"line_end":153,"column_start":19,"column_end":38},"name":"as_uninit_slice_mut","qualname":"<UninitSlice>::as_uninit_slice_mut","value":"pub unsafe fn as_uninit_slice_mut<'a>(&'a mut Self)\n-> &'a mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Return a `&mut [MaybeUninit<u8>]` to this slice's buffer.","sig":null,"attributes":[{"value":"/ Return a `&mut [MaybeUninit<u8>]` to this slice's buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102796,"byte_end":102857,"line_start":131,"line_end":131,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102862,"byte_end":102865,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102870,"byte_end":102882,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102887,"byte_end":102890,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The caller **must not** read from the referenced memory and **must not** write","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102895,"byte_end":102977,"line_start":135,"line_end":135,"column_start":5,"column_end":87}},{"value":"/ **uninitialized** bytes to the slice either. This is because `BufMut` implementation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":102982,"byte_end":103070,"line_start":136,"line_end":136,"column_start":5,"column_end":93}},{"value":"/ that created the `UninitSlice` knows which parts are initialized. Writing uninitalized","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103075,"byte_end":103165,"line_start":137,"line_end":137,"column_start":5,"column_end":95}},{"value":"/ bytes to the slice may cause the `BufMut` to read those bytes and trigger undefined","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103170,"byte_end":103257,"line_start":138,"line_end":138,"column_start":5,"column_end":92}},{"value":"/ behavior.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103262,"byte_end":103275,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103280,"byte_end":103283,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103288,"byte_end":103302,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103307,"byte_end":103310,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103315,"byte_end":103322,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103327,"byte_end":103349,"line_start":144,"line_end":144,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103354,"byte_end":103357,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103362,"byte_end":103391,"line_start":146,"line_end":146,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103396,"byte_end":103430,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103435,"byte_end":103447,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/     let uninit_slice = BufMut::chunk_mut(&mut slice).as_uninit_slice_mut();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103452,"byte_end":103531,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ };","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103536,"byte_end":103542,"line_start":150,"line_end":150,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103547,"byte_end":103554,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103559,"byte_end":103568,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":104053,"byte_end":104056,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<UninitSlice>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in the slice.","sig":null,"attributes":[{"value":"/ Returns the number of bytes in the slice.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103724,"byte_end":103769,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103774,"byte_end":103777,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103782,"byte_end":103796,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103801,"byte_end":103804,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103809,"byte_end":103816,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103821,"byte_end":103843,"line_start":162,"line_end":162,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103848,"byte_end":103851,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103856,"byte_end":103885,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103890,"byte_end":103924,"line_start":165,"line_end":165,"column_start":5,"column_end":39}},{"value":"/ let len = BufMut::chunk_mut(&mut slice).len();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103929,"byte_end":103979,"line_start":166,"line_end":166,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103984,"byte_end":103987,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(len, 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":103992,"byte_end":104015,"line_start":168,"line_end":168,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":104020,"byte_end":104027,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":104032,"byte_end":104041,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":105927,"byte_end":105933,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Writer","qualname":"::buf::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1419}],"decl_id":null,"docs":" A `BufMut` adapter which implements `io::Write` for the inner value.","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which implements `io::Write` for the inner value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":105657,"byte_end":105729,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":105730,"byte_end":105733,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `writer()` on `BufMut`. See","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":105734,"byte_end":105809,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ documentation of [`writer()`](trait.BufMut.html#method.writer) for more","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":105810,"byte_end":105885,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ details.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":105886,"byte_end":105898,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106396,"byte_end":106403,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<B>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106045,"byte_end":106093,"line_start":20,"line_end":20,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106098,"byte_end":106101,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106106,"byte_end":106173,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106178,"byte_end":106181,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106186,"byte_end":106200,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106205,"byte_end":106208,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106213,"byte_end":106224,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106229,"byte_end":106251,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106256,"byte_end":106259,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let buf = Vec::with_capacity(1024).writer();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106264,"byte_end":106312,"line_start":29,"line_end":29,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106317,"byte_end":106320,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106325,"byte_end":106372,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106377,"byte_end":106384,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106838,"byte_end":106845,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Writer<B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106448,"byte_end":106504,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106509,"byte_end":106512,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106517,"byte_end":106584,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106589,"byte_end":106592,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106597,"byte_end":106611,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106616,"byte_end":106619,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106624,"byte_end":106635,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106640,"byte_end":106662,"line_start":44,"line_end":44,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106667,"byte_end":106670,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106675,"byte_end":106709,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106714,"byte_end":106717,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().reserve(1024);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106722,"byte_end":106754,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106759,"byte_end":106762,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106767,"byte_end":106814,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106819,"byte_end":106826,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107319,"byte_end":107329,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106902,"byte_end":106961,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106966,"byte_end":106969,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106974,"byte_end":106988,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106993,"byte_end":106996,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107001,"byte_end":107012,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107017,"byte_end":107039,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107044,"byte_end":107060,"line_start":62,"line_end":62,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107065,"byte_end":107068,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107073,"byte_end":107107,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ let mut src = &b\"hello world\"[..];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107112,"byte_end":107150,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107155,"byte_end":107158,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut src, &mut buf).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107163,"byte_end":107205,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107210,"byte_end":107213,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107218,"byte_end":107249,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107254,"byte_end":107295,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107300,"byte_end":107307,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111707,"byte_end":111712,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"decl_id":null,"docs":" A cheaply cloneable and sliceable chunk of contiguous memory.","sig":null,"attributes":[{"value":"/ A cheaply cloneable and sliceable chunk of contiguous memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108071,"byte_end":108136,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108137,"byte_end":108140,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108141,"byte_end":108218,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108219,"byte_end":108297,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108298,"byte_end":108344,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108345,"byte_end":108348,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108349,"byte_end":108429,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108430,"byte_end":108489,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108490,"byte_end":108493,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Bytes` does not have a single implementation. It is an interface, whose","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108494,"byte_end":108570,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ exact behavior is implemented through dynamic dispatch in several underlying","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108571,"byte_end":108651,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ implementations of `Bytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108652,"byte_end":108683,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108684,"byte_end":108687,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ All `Bytes` implementations must fulfill the following requirements:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108688,"byte_end":108760,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ - They are cheaply cloneable and thereby shareable between an unlimited amount","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108761,"byte_end":108843,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/   of components, for example by modifying a reference count.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108844,"byte_end":108908,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/ - Instances can be sliced to refer to a subset of the the original buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108909,"byte_end":108987,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108988,"byte_end":108991,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":108992,"byte_end":108999,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109000,"byte_end":109021,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109022,"byte_end":109025,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut mem = Bytes::from(\"Hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109026,"byte_end":109071,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ let a = mem.slice(0..5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109072,"byte_end":109100,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109101,"byte_end":109104,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, \"Hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109105,"byte_end":109132,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109133,"byte_end":109136,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let b = mem.split_to(6);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109137,"byte_end":109165,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109166,"byte_end":109169,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mem, \"world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109170,"byte_end":109199,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(b, \"Hello \");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109200,"byte_end":109228,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109229,"byte_end":109236,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109237,"byte_end":109240,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Memory layout","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109241,"byte_end":109260,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109261,"byte_end":109264,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The `Bytes` struct itself is fairly small, limited to 4 `usize` fields used","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109265,"byte_end":109344,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ to track information about which segment of the underlying memory the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109345,"byte_end":109418,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ `Bytes` handle has access to.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109419,"byte_end":109452,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109453,"byte_end":109456,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ `Bytes` keeps both a pointer to the shared state containing the full memory","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109457,"byte_end":109536,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ slice and a pointer to the start of the region visible by the handle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109537,"byte_end":109610,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ `Bytes` also tracks the length of its view into the memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109611,"byte_end":109674,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109675,"byte_end":109678,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Sharing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109679,"byte_end":109692,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109693,"byte_end":109696,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ `Bytes` contains a vtable, which allows implementations of `Bytes` to define","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109697,"byte_end":109777,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ how sharing/cloning is implemented in detail.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109778,"byte_end":109827,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/ When `Bytes::clone()` is called, `Bytes` will call the vtable function for","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109828,"byte_end":109906,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ cloning the backing storage in order to share it behind between multiple","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109907,"byte_end":109983,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ `Bytes` instances.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":109984,"byte_end":110006,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110007,"byte_end":110010,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ For `Bytes` implementations which refer to constant memory (e.g. created","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110011,"byte_end":110087,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ via `Bytes::from_static()`) the cloning implementation will be a no-op.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110088,"byte_end":110163,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110164,"byte_end":110167,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For `Bytes` implementations which point to a reference counted shared storage","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110168,"byte_end":110249,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ (e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110250,"byte_end":110322,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ the reference count.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110323,"byte_end":110347,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110348,"byte_end":110351,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Due to this mechanism, multiple `Bytes` instances may point to the same","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110352,"byte_end":110427,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ shared memory region.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110428,"byte_end":110453,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/ Each `Bytes` instance can point to different sections within that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110454,"byte_end":110523,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ memory region, and `Bytes` instances may or may not have overlapping views","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110524,"byte_end":110602,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ into the memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110603,"byte_end":110623,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110624,"byte_end":110627,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The following diagram visualizes a scenario where 2 `Bytes` instances make","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110628,"byte_end":110706,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ use of an `Arc`-based backing storage, and provide access to different views:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110707,"byte_end":110788,"line_start":83,"line_end":83,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110789,"byte_end":110792,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110793,"byte_end":110804,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110805,"byte_end":110808,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/    Arc ptrs                   ┌─────────┐","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110809,"byte_end":110876,"line_start":87,"line_end":87,"column_start":1,"column_end":46}},{"value":"/    ________________________ / │ Bytes 2 │","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110877,"byte_end":110926,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/   /                           └─────────┘","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110927,"byte_end":110994,"line_start":89,"line_end":89,"column_start":1,"column_end":46}},{"value":"/  /          ┌───────────┐     |         |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":110995,"byte_end":111066,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/ |_________/ │  Bytes 1  │     |         |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111067,"byte_end":111116,"line_start":91,"line_end":91,"column_start":1,"column_end":46}},{"value":"/ |           └───────────┘     |         |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111117,"byte_end":111188,"line_start":92,"line_end":92,"column_start":1,"column_end":46}},{"value":"/ |           |           | ___/ data     | tail","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111189,"byte_end":111239,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/ |      data |      tail |/              |","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111240,"byte_end":111285,"line_start":94,"line_end":94,"column_start":1,"column_end":46}},{"value":"/ v           v           v               v","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111286,"byte_end":111331,"line_start":95,"line_end":95,"column_start":1,"column_end":46}},{"value":"/ ┌─────┬─────┬───────────┬───────────────┬─────┐","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111332,"byte_end":111477,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/ │ Arc │     │           │               │     │","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111478,"byte_end":111541,"line_start":97,"line_end":97,"column_start":1,"column_end":52}},{"value":"/ └─────┴─────┴───────────┴───────────────┴─────┘","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111542,"byte_end":111687,"line_start":98,"line_end":98,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":111688,"byte_end":111695,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112548,"byte_end":112551,"line_start":134,"line_end":134,"column_start":18,"column_end":21},"name":"new","qualname":"<Bytes>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"/ Creates a new empty `Bytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112209,"byte_end":112241,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112246,"byte_end":112249,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This will not allocate and the returned `Bytes` handle will be empty.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112254,"byte_end":112327,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112332,"byte_end":112335,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112340,"byte_end":112354,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112359,"byte_end":112362,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112367,"byte_end":112374,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112379,"byte_end":112400,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112405,"byte_end":112408,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112413,"byte_end":112438,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(&b[..], b\"\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112443,"byte_end":112471,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112476,"byte_end":112483,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112488,"byte_end":112497,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112502,"byte_end":112530,"line_start":133,"line_end":133,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113286,"byte_end":113297,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Bytes>::from_static","value":"pub const fn from_static(&'static [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"/ Creates a new `Bytes` from a static slice.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112877,"byte_end":112923,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112928,"byte_end":112931,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The returned `Bytes` will point directly to the static slice. There is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112936,"byte_end":113010,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ no allocating or copying.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113015,"byte_end":113044,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113049,"byte_end":113052,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113057,"byte_end":113071,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113076,"byte_end":113079,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113084,"byte_end":113091,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113096,"byte_end":113117,"line_start":155,"line_end":155,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113122,"byte_end":113125,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from_static(b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113130,"byte_end":113171,"line_start":157,"line_end":157,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113176,"byte_end":113209,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113214,"byte_end":113221,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113226,"byte_end":113235,"line_start":160,"line_end":160,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113240,"byte_end":113268,"line_start":161,"line_end":161,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114042,"byte_end":114045,"line_start":192,"line_end":192,"column_start":18,"column_end":21},"name":"len","qualname":"<Bytes>::len","value":"pub const fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `Bytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113783,"byte_end":113841,"line_start":181,"line_end":181,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113846,"byte_end":113849,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113854,"byte_end":113868,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113873,"byte_end":113876,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113881,"byte_end":113888,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113893,"byte_end":113914,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113919,"byte_end":113922,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from(&b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113927,"byte_end":113966,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":113971,"byte_end":113998,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114003,"byte_end":114010,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114015,"byte_end":114024,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114328,"byte_end":114336,"line_start":207,"line_end":207,"column_start":18,"column_end":26},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"pub const fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `Bytes` has a length of 0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114092,"byte_end":114142,"line_start":196,"line_end":196,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114147,"byte_end":114150,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114155,"byte_end":114169,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114174,"byte_end":114177,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114182,"byte_end":114189,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114194,"byte_end":114215,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114220,"byte_end":114223,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114228,"byte_end":114253,"line_start":203,"line_end":203,"column_start":5,"column_end":30}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114258,"byte_end":114284,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114289,"byte_end":114296,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114301,"byte_end":114310,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114454,"byte_end":114469,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Bytes>::copy_from_slice","value":"pub fn copy_from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Bytes` instance from slice, by copying it.\n","sig":null,"attributes":[{"value":"/ Creates `Bytes` instance from slice, by copying it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114387,"byte_end":114442,"line_start":211,"line_end":211,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":115129,"byte_end":115134,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"pub fn slice<impl RangeBounds<usize>: RangeBounds<usize>>(&Self,\n                                                          impl RangeBounds<usize>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the provided range.","sig":null,"attributes":[{"value":"/ Returns a slice of self for the provided range.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114533,"byte_end":114584,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114589,"byte_end":114592,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This will increment the reference count for the underlying memory and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114597,"byte_end":114670,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ return a new `Bytes` handle set to the slice.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114675,"byte_end":114724,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114729,"byte_end":114732,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114737,"byte_end":114766,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114771,"byte_end":114774,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114779,"byte_end":114793,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114798,"byte_end":114801,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114806,"byte_end":114813,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114818,"byte_end":114839,"line_start":226,"line_end":226,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114844,"byte_end":114847,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114852,"byte_end":114897,"line_start":228,"line_end":228,"column_start":5,"column_end":50}},{"value":"/ let b = a.slice(2..5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114902,"byte_end":114928,"line_start":229,"line_end":229,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114933,"byte_end":114936,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"llo\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114941,"byte_end":114972,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114977,"byte_end":114984,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114989,"byte_end":114992,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":114997,"byte_end":115009,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":115014,"byte_end":115017,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Requires that `begin <= end` and `end <= self.len()`, otherwise slicing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":115022,"byte_end":115097,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ will panic.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":115102,"byte_end":115117,"line_start":237,"line_end":237,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":117061,"byte_end":117070,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"pub fn slice_ref(&Self, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[{"value":"/ Returns a slice of self that is equivalent to the given `subset`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116139,"byte_end":116208,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116213,"byte_end":116216,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ When processing a `Bytes` buffer with other tools, one often gets a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116221,"byte_end":116292,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ `&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116297,"byte_end":116370,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ This function turns that `&[u8]` into another `Bytes`, as if one had","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116375,"byte_end":116447,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ called `self.slice()` with the offsets that correspond to `subset`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116452,"byte_end":116523,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116528,"byte_end":116531,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116536,"byte_end":116565,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116570,"byte_end":116573,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116578,"byte_end":116592,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116597,"byte_end":116600,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116605,"byte_end":116612,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116617,"byte_end":116638,"line_start":292,"line_end":292,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116643,"byte_end":116646,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let bytes = Bytes::from(&b\"012345678\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116651,"byte_end":116698,"line_start":294,"line_end":294,"column_start":5,"column_end":52}},{"value":"/ let as_slice = bytes.as_ref();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116703,"byte_end":116737,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ let subset = &as_slice[2..6];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116742,"byte_end":116775,"line_start":296,"line_end":296,"column_start":5,"column_end":38}},{"value":"/ let subslice = bytes.slice_ref(&subset);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116780,"byte_end":116824,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(&subslice[..], b\"2345\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116829,"byte_end":116868,"line_start":298,"line_end":298,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116873,"byte_end":116880,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116885,"byte_end":116888,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116893,"byte_end":116905,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116910,"byte_end":116913,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Requires that the given `sub` slice is in fact contained within the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116918,"byte_end":116989,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/ `Bytes` buffer; otherwise this function will panic.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":116994,"byte_end":117049,"line_start":304,"line_end":304,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118752,"byte_end":118761,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118043,"byte_end":118092,"line_start":338,"line_end":338,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118097,"byte_end":118100,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned `Bytes`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118105,"byte_end":118180,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ contains elements `[at, len)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118185,"byte_end":118219,"line_start":341,"line_end":341,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118224,"byte_end":118227,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118232,"byte_end":118307,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118312,"byte_end":118335,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118340,"byte_end":118343,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118348,"byte_end":118362,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118367,"byte_end":118370,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118375,"byte_end":118382,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118387,"byte_end":118408,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118413,"byte_end":118416,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118421,"byte_end":118470,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_off(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118475,"byte_end":118502,"line_start":352,"line_end":352,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118507,"byte_end":118510,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118515,"byte_end":118548,"line_start":354,"line_end":354,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118553,"byte_end":118587,"line_start":355,"line_end":355,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118592,"byte_end":118599,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118604,"byte_end":118607,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118612,"byte_end":118624,"line_start":358,"line_end":358,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118629,"byte_end":118632,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118637,"byte_end":118662,"line_start":360,"line_end":360,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::truncate if you don't need the other half\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":118667,"byte_end":118740,"line_start":361,"line_end":361,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119935,"byte_end":119943,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"pub fn split_to(&mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119228,"byte_end":119277,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119282,"byte_end":119285,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119290,"byte_end":119359,"line_start":389,"line_end":389,"column_start":5,"column_end":74}},{"value":"/ `Bytes` contains elements `[0, at)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119364,"byte_end":119404,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119409,"byte_end":119412,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119417,"byte_end":119492,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119497,"byte_end":119520,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119525,"byte_end":119528,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119533,"byte_end":119547,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119552,"byte_end":119555,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119560,"byte_end":119567,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119572,"byte_end":119593,"line_start":398,"line_end":398,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119598,"byte_end":119601,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119606,"byte_end":119655,"line_start":400,"line_end":400,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_to(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119660,"byte_end":119686,"line_start":401,"line_end":401,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119691,"byte_end":119694,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\" world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119699,"byte_end":119733,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119738,"byte_end":119771,"line_start":404,"line_end":404,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119776,"byte_end":119783,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119788,"byte_end":119791,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119796,"byte_end":119808,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119813,"byte_end":119816,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119821,"byte_end":119846,"line_start":409,"line_end":409,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::advance if you don't need the other half\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":119851,"byte_end":119923,"line_start":410,"line_end":410,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121020,"byte_end":121028,"line_start":456,"line_end":456,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120408,"byte_end":120479,"line_start":435,"line_end":435,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120484,"byte_end":120493,"line_start":436,"line_end":436,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120498,"byte_end":120501,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120506,"byte_end":120575,"line_start":438,"line_end":438,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120580,"byte_end":120591,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120596,"byte_end":120599,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120604,"byte_end":120676,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120681,"byte_end":120732,"line_start":442,"line_end":442,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120737,"byte_end":120740,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120745,"byte_end":120759,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120764,"byte_end":120767,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120772,"byte_end":120779,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120784,"byte_end":120805,"line_start":447,"line_end":447,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120810,"byte_end":120813,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120818,"byte_end":120869,"line_start":449,"line_end":449,"column_start":5,"column_end":56}},{"value":"/ buf.truncate(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120874,"byte_end":120894,"line_start":450,"line_end":450,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120899,"byte_end":120933,"line_start":451,"line_end":451,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120938,"byte_end":120945,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120950,"byte_end":120953,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120958,"byte_end":120994,"line_start":454,"line_end":454,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":120999,"byte_end":121008,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121858,"byte_end":121863,"line_start":483,"line_end":483,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121588,"byte_end":121629,"line_start":471,"line_end":471,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121634,"byte_end":121637,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121642,"byte_end":121656,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121661,"byte_end":121664,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121669,"byte_end":121676,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121681,"byte_end":121702,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121707,"byte_end":121710,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121715,"byte_end":121766,"line_start":478,"line_end":478,"column_start":5,"column_end":56}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121771,"byte_end":121787,"line_start":479,"line_end":479,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121792,"byte_end":121820,"line_start":480,"line_end":480,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121825,"byte_end":121832,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":121837,"byte_end":121846,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144557,"byte_end":144565,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes_mut::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[{"value":"/ A unique reference to a contiguous slice of memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143327,"byte_end":143382,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143383,"byte_end":143386,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` represents a unique view into a potentially shared memory region.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143387,"byte_end":143467,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ Given the uniqueness guarantee, owners of `BytesMut` handles are able to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143468,"byte_end":143544,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ mutate the memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143545,"byte_end":143567,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143568,"byte_end":143571,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143572,"byte_end":143651,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ into `buf`, a slice length, and a guarantee that no other `BytesMut` for the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143652,"byte_end":143732,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ same `buf` overlaps with its slice. That guarantee means that a write lock","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143733,"byte_end":143811,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ is not required.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143812,"byte_end":143832,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143833,"byte_end":143836,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Growth","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143837,"byte_end":143849,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143850,"byte_end":143853,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ `BytesMut`'s `BufMut` implementation will implicitly grow its buffer as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143854,"byte_end":143929,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ necessary. However, explicitly reserving the required space up-front before","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":143930,"byte_end":144009,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ a series of inserts will be more efficient.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144010,"byte_end":144057,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144058,"byte_end":144061,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144062,"byte_end":144076,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144077,"byte_end":144080,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144081,"byte_end":144088,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144089,"byte_end":144123,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144124,"byte_end":144127,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144128,"byte_end":144174,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144175,"byte_end":144178,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144179,"byte_end":144200,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/ buf.put_u8(b'e');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144201,"byte_end":144222,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/ buf.put(&b\"llo\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144223,"byte_end":144248,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144249,"byte_end":144252,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&buf[..], b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144253,"byte_end":144288,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144289,"byte_end":144292,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Freeze the buffer so that it can be shared","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144293,"byte_end":144342,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/ let a = buf.freeze();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144343,"byte_end":144368,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144369,"byte_end":144372,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // This does not allocate, instead `b` points to the same memory.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144373,"byte_end":144442,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/ let b = a.clone();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144443,"byte_end":144465,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144466,"byte_end":144469,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144470,"byte_end":144503,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144504,"byte_end":144537,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":144538,"byte_end":144545,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147289,"byte_end":147302,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"pub fn with_capacity(usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with the specified capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146569,"byte_end":146626,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146631,"byte_end":146634,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The returned `BytesMut` will be able to hold at least `capacity` bytes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146639,"byte_end":146713,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ without reallocating.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146718,"byte_end":146743,"line_start":122,"line_end":122,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146748,"byte_end":146751,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is important to note that this function does not specify the length","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146756,"byte_end":146830,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ of the returned `BytesMut`, but only the capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146835,"byte_end":146889,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146894,"byte_end":146897,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146902,"byte_end":146916,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146921,"byte_end":146924,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146929,"byte_end":146936,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146941,"byte_end":146975,"line_start":130,"line_end":130,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146980,"byte_end":146983,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::with_capacity(64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146988,"byte_end":147036,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147041,"byte_end":147044,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // `bytes` contains no data, even though there is capacity","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147049,"byte_end":147111,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(bytes.len(), 0);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147116,"byte_end":147147,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147152,"byte_end":147155,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ bytes.put(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147160,"byte_end":147195,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147200,"byte_end":147203,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&bytes[..], b\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147208,"byte_end":147251,"line_start":139,"line_end":139,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147256,"byte_end":147263,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147268,"byte_end":147277,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147901,"byte_end":147904,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"pub fn new() -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with default capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147402,"byte_end":147453,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147458,"byte_end":147461,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Resulting object has length 0 and unspecified capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147466,"byte_end":147525,"line_start":148,"line_end":148,"column_start":5,"column_end":64}},{"value":"/ This function does not allocate.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147530,"byte_end":147566,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147571,"byte_end":147574,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147579,"byte_end":147593,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147598,"byte_end":147601,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147606,"byte_end":147613,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147618,"byte_end":147652,"line_start":154,"line_end":154,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147657,"byte_end":147660,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147665,"byte_end":147701,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147706,"byte_end":147709,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, bytes.len());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147714,"byte_end":147745,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147750,"byte_end":147753,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ bytes.reserve(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147758,"byte_end":147779,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/ bytes.put_slice(b\"xy\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147784,"byte_end":147811,"line_start":161,"line_end":161,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147816,"byte_end":147819,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b\"xy\"[..], &bytes[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147824,"byte_end":147863,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147868,"byte_end":147875,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147880,"byte_end":147889,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148229,"byte_end":148232,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `BytesMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":147967,"byte_end":148028,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148033,"byte_end":148036,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148041,"byte_end":148055,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148060,"byte_end":148063,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148068,"byte_end":148075,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148080,"byte_end":148104,"line_start":175,"line_end":175,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148109,"byte_end":148112,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148117,"byte_end":148159,"line_start":177,"line_end":177,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148164,"byte_end":148191,"line_start":178,"line_end":178,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148196,"byte_end":148203,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148208,"byte_end":148217,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148530,"byte_end":148538,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `BytesMut` has a length of 0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148279,"byte_end":148332,"line_start":185,"line_end":185,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148337,"byte_end":148340,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148345,"byte_end":148359,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148364,"byte_end":148367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148372,"byte_end":148379,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148384,"byte_end":148408,"line_start":190,"line_end":190,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148413,"byte_end":148416,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148421,"byte_end":148461,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148466,"byte_end":148492,"line_start":193,"line_end":193,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148497,"byte_end":148504,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148509,"byte_end":148518,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148871,"byte_end":148879,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bytes the `BytesMut` can hold without reallocating.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148589,"byte_end":148666,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148671,"byte_end":148674,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148679,"byte_end":148693,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148698,"byte_end":148701,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148706,"byte_end":148713,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148718,"byte_end":148742,"line_start":205,"line_end":205,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148747,"byte_end":148750,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148755,"byte_end":148795,"line_start":207,"line_end":207,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(b.capacity(), 64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148800,"byte_end":148833,"line_start":208,"line_end":208,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148838,"byte_end":148845,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148850,"byte_end":148859,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149695,"byte_end":149701,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"pub fn freeze(Self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"/ Converts `self` into an immutable `Bytes`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148926,"byte_end":148972,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148977,"byte_end":148980,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The conversion is zero cost and is used to indicate that the slice","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":148985,"byte_end":149055,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/ referenced by the handle will no longer be mutated. Once the conversion","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149060,"byte_end":149135,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ is done, the handle can be cloned and shared across threads.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149140,"byte_end":149204,"line_start":219,"line_end":219,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149209,"byte_end":149212,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149217,"byte_end":149231,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149236,"byte_end":149239,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149244,"byte_end":149251,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149256,"byte_end":149290,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149295,"byte_end":149315,"line_start":225,"line_end":225,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149320,"byte_end":149323,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::with_capacity(64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149328,"byte_end":149372,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"/ b.put(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149377,"byte_end":149408,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ let b1 = b.freeze();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149413,"byte_end":149437,"line_start":229,"line_end":229,"column_start":5,"column_end":29}},{"value":"/ let b2 = b1.clone();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149442,"byte_end":149466,"line_start":230,"line_end":230,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149471,"byte_end":149474,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let th = thread::spawn(move || {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149479,"byte_end":149515,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(&b1[..], b\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149520,"byte_end":149564,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149569,"byte_end":149576,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149581,"byte_end":149584,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b2[..], b\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149589,"byte_end":149629,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ th.join().unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149634,"byte_end":149657,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149662,"byte_end":149669,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":149674,"byte_end":149683,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150757,"byte_end":150763,"line_start":274,"line_end":274,"column_start":12,"column_end":18},"name":"zeroed","qualname":"<BytesMut>::zeroed","value":"pub fn zeroed(usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut`, which is initialized with zero.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut`, which is initialized with zero.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150443,"byte_end":150504,"line_start":262,"line_end":262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150509,"byte_end":150512,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150517,"byte_end":150531,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150536,"byte_end":150539,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150544,"byte_end":150551,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150556,"byte_end":150580,"line_start":267,"line_end":267,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150585,"byte_end":150588,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let zeros = BytesMut::zeroed(42);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150593,"byte_end":150630,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150635,"byte_end":150638,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(zeros.len(), 42);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150643,"byte_end":150675,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ zeros.into_iter().for_each(|x| assert_eq!(x, 0));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150680,"byte_end":150733,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150738,"byte_end":150745,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151627,"byte_end":151636,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"pub fn split_off(&mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150842,"byte_end":150891,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150896,"byte_end":150899,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150904,"byte_end":150971,"line_start":280,"line_end":280,"column_start":5,"column_end":72}},{"value":"/ `BytesMut` contains elements `[at, capacity)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":150976,"byte_end":151026,"line_start":281,"line_end":281,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151031,"byte_end":151034,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151039,"byte_end":151110,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ and sets a few indices.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151115,"byte_end":151142,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151147,"byte_end":151150,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151155,"byte_end":151169,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151174,"byte_end":151177,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151182,"byte_end":151189,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151194,"byte_end":151218,"line_start":289,"line_end":289,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151223,"byte_end":151226,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151231,"byte_end":151283,"line_start":291,"line_end":291,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_off(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151288,"byte_end":151319,"line_start":292,"line_end":292,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151324,"byte_end":151327,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'j';","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151332,"byte_end":151348,"line_start":294,"line_end":294,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'!';","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151353,"byte_end":151369,"line_start":295,"line_end":295,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151374,"byte_end":151377,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"jello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151382,"byte_end":151415,"line_start":297,"line_end":297,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\"!world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151420,"byte_end":151454,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151459,"byte_end":151466,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151471,"byte_end":151474,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151479,"byte_end":151491,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151496,"byte_end":151499,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > capacity`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151504,"byte_end":151534,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"must_use = \"consider BytesMut::truncate if you don't need the other half\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":151539,"byte_end":151615,"line_start":304,"line_end":304,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152879,"byte_end":152884,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"name":"split","qualname":"<BytesMut>::split","value":"pub fn split(&mut Self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[{"value":"/ Removes the bytes from the current view, returning them in a new","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152003,"byte_end":152071,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ `BytesMut` handle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152076,"byte_end":152098,"line_start":321,"line_end":321,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152103,"byte_end":152106,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will be empty, but will retain any additional","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152111,"byte_end":152179,"line_start":323,"line_end":323,"column_start":5,"column_end":73}},{"value":"/ capacity that it had before the operation. This is identical to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152184,"byte_end":152251,"line_start":324,"line_end":324,"column_start":5,"column_end":72}},{"value":"/ `self.split_to(self.len())`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152256,"byte_end":152288,"line_start":325,"line_end":325,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152293,"byte_end":152296,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152301,"byte_end":152376,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152381,"byte_end":152404,"line_start":328,"line_end":328,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152409,"byte_end":152412,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152417,"byte_end":152431,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152436,"byte_end":152439,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152444,"byte_end":152451,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152456,"byte_end":152490,"line_start":333,"line_end":333,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152495,"byte_end":152498,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152503,"byte_end":152551,"line_start":335,"line_end":335,"column_start":5,"column_end":53}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152556,"byte_end":152589,"line_start":336,"line_end":336,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152594,"byte_end":152597,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let other = buf.split();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152602,"byte_end":152630,"line_start":338,"line_end":338,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152635,"byte_end":152638,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152643,"byte_end":152671,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(1013, buf.capacity());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152676,"byte_end":152713,"line_start":341,"line_end":341,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152718,"byte_end":152721,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(other, b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152726,"byte_end":152768,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152773,"byte_end":152780,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"must_use =\n  \"consider BytesMut::advance(len()) if you don't need the other half\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152785,"byte_end":152867,"line_start":345,"line_end":345,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153752,"byte_end":153760,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"pub fn split_to(&mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the buffer into two at the given index.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":152978,"byte_end":153028,"line_start":351,"line_end":351,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153033,"byte_end":153036,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned `BytesMut`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153041,"byte_end":153121,"line_start":353,"line_end":353,"column_start":5,"column_end":85}},{"value":"/ contains elements `[0, at)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153126,"byte_end":153158,"line_start":354,"line_end":354,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153163,"byte_end":153166,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153171,"byte_end":153246,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153251,"byte_end":153274,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153279,"byte_end":153282,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153287,"byte_end":153301,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153306,"byte_end":153309,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153314,"byte_end":153321,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153326,"byte_end":153350,"line_start":362,"line_end":362,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153355,"byte_end":153358,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153363,"byte_end":153415,"line_start":364,"line_end":364,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_to(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153420,"byte_end":153450,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153455,"byte_end":153458,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'!';","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153463,"byte_end":153479,"line_start":367,"line_end":367,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'j';","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153484,"byte_end":153500,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153505,"byte_end":153508,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"!world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153513,"byte_end":153547,"line_start":370,"line_end":370,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"jello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153552,"byte_end":153585,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153590,"byte_end":153597,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153602,"byte_end":153605,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153610,"byte_end":153622,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153627,"byte_end":153630,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153635,"byte_end":153660,"line_start":376,"line_end":376,"column_start":5,"column_end":30}},{"value":"must_use = \"consider BytesMut::advance if you don't need the other half\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":153665,"byte_end":153740,"line_start":377,"line_end":377,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154780,"byte_end":154788,"line_start":416,"line_end":416,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154117,"byte_end":154188,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154193,"byte_end":154202,"line_start":395,"line_end":395,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154207,"byte_end":154210,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154215,"byte_end":154284,"line_start":397,"line_end":397,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154289,"byte_end":154300,"line_start":398,"line_end":398,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154305,"byte_end":154308,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Existing underlying capacity is preserved.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154313,"byte_end":154359,"line_start":400,"line_end":400,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154364,"byte_end":154367,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154372,"byte_end":154444,"line_start":402,"line_end":402,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154449,"byte_end":154500,"line_start":403,"line_end":403,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154505,"byte_end":154508,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154513,"byte_end":154527,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154532,"byte_end":154535,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154540,"byte_end":154547,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154552,"byte_end":154576,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154581,"byte_end":154584,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154589,"byte_end":154643,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/ buf.truncate(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154648,"byte_end":154668,"line_start":411,"line_end":411,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154673,"byte_end":154707,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154712,"byte_end":154719,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154724,"byte_end":154727,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154732,"byte_end":154768,"line_start":415,"line_end":415,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155230,"byte_end":155235,"line_start":435,"line_end":435,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data. Existing capacity is preserved.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data. Existing capacity is preserved.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":154936,"byte_end":155009,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155014,"byte_end":155017,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155022,"byte_end":155036,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155041,"byte_end":155044,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155049,"byte_end":155056,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155061,"byte_end":155085,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155090,"byte_end":155093,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155098,"byte_end":155152,"line_start":431,"line_end":431,"column_start":5,"column_end":59}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155157,"byte_end":155173,"line_start":432,"line_end":432,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155178,"byte_end":155206,"line_start":433,"line_end":433,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155211,"byte_end":155218,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155960,"byte_end":155966,"line_start":461,"line_end":461,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"pub fn resize(&mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the buffer so that `len` is equal to `new_len`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155286,"byte_end":155345,"line_start":439,"line_end":439,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155350,"byte_end":155353,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the buffer is extended by the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155358,"byte_end":155427,"line_start":441,"line_end":441,"column_start":5,"column_end":74}},{"value":"/ difference with each additional byte set to `value`. If `new_len` is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155432,"byte_end":155504,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/ less than `len`, the buffer is simply truncated.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155509,"byte_end":155561,"line_start":443,"line_end":443,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155566,"byte_end":155569,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155574,"byte_end":155588,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155593,"byte_end":155596,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155601,"byte_end":155608,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155613,"byte_end":155637,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155642,"byte_end":155645,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155650,"byte_end":155684,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155689,"byte_end":155692,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ buf.resize(3, 0x1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155697,"byte_end":155720,"line_start":452,"line_end":452,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x1]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155725,"byte_end":155768,"line_start":453,"line_end":453,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155773,"byte_end":155776,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ buf.resize(2, 0x2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155781,"byte_end":155804,"line_start":455,"line_end":455,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155809,"byte_end":155847,"line_start":456,"line_end":456,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155852,"byte_end":155855,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ buf.resize(4, 0x3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155860,"byte_end":155883,"line_start":458,"line_end":458,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155888,"byte_end":155936,"line_start":459,"line_end":459,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":155941,"byte_end":155948,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157039,"byte_end":157046,"line_start":502,"line_end":502,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[{"value":"/ Sets the length of the buffer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156409,"byte_end":156443,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156448,"byte_end":156451,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the buffer without actually","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156456,"byte_end":156524,"line_start":478,"line_end":478,"column_start":5,"column_end":73}},{"value":"/ modifying the data, so it is up to the caller to ensure that the data","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156529,"byte_end":156602,"line_start":479,"line_end":479,"column_start":5,"column_end":78}},{"value":"/ has been initialized.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156607,"byte_end":156632,"line_start":480,"line_end":480,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156637,"byte_end":156640,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156645,"byte_end":156659,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156664,"byte_end":156667,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156672,"byte_end":156679,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156684,"byte_end":156708,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156713,"byte_end":156716,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156721,"byte_end":156773,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156778,"byte_end":156781,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156786,"byte_end":156798,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/     b.set_len(5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156803,"byte_end":156824,"line_start":490,"line_end":490,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156829,"byte_end":156834,"line_start":491,"line_end":491,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156839,"byte_end":156842,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156847,"byte_end":156880,"line_start":493,"line_end":493,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156885,"byte_end":156888,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156893,"byte_end":156905,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/     b.set_len(11);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156910,"byte_end":156932,"line_start":496,"line_end":496,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156937,"byte_end":156942,"line_start":497,"line_end":497,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156947,"byte_end":156950,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello world\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156955,"byte_end":156994,"line_start":499,"line_end":499,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":156999,"byte_end":157006,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157011,"byte_end":157020,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159449,"byte_end":159456,"line_start":566,"line_end":566,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157172,"byte_end":157245,"line_start":507,"line_end":507,"column_start":5,"column_end":78}},{"value":"/ into the given `BytesMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157250,"byte_end":157280,"line_start":508,"line_end":508,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157285,"byte_end":157288,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157293,"byte_end":157368,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157373,"byte_end":157440,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157445,"byte_end":157448,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Before allocating new buffer space, the function will attempt to reclaim","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157453,"byte_end":157529,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/ space in the existing buffer. If the current handle references a view","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157534,"byte_end":157607,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ into a larger original buffer, and all other handles referencing part","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157612,"byte_end":157685,"line_start":515,"line_end":515,"column_start":5,"column_end":78}},{"value":"/ of the same original buffer have been dropped, then the current view","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157690,"byte_end":157762,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ can be copied/shifted to the front of the buffer and the handle can take","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157767,"byte_end":157843,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ ownership of the full buffer, provided that the full buffer is large","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157848,"byte_end":157920,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ enough to fit the requested additional capacity.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157925,"byte_end":157977,"line_start":519,"line_end":519,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157982,"byte_end":157985,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This optimization will only happen if shifting the data from the current","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":157990,"byte_end":158066,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ view to the front of the buffer is not too expensive in terms of the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158071,"byte_end":158143,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ (amortized) time required. The precise condition is subject to change;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158148,"byte_end":158222,"line_start":523,"line_end":523,"column_start":5,"column_end":79}},{"value":"/ as of now, the length of the data being shifted needs to be at least as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158227,"byte_end":158302,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ large as the distance that it's shifted by. If the current view is empty","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158307,"byte_end":158383,"line_start":525,"line_end":525,"column_start":5,"column_end":81}},{"value":"/ and the original buffer is large enough to fit the requested additional","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158388,"byte_end":158463,"line_start":526,"line_end":526,"column_start":5,"column_end":80}},{"value":"/ capacity, then reallocations will never happen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158468,"byte_end":158519,"line_start":527,"line_end":527,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158524,"byte_end":158527,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158532,"byte_end":158546,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158551,"byte_end":158554,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ In the following example, a new buffer is allocated.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158559,"byte_end":158615,"line_start":531,"line_end":531,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158620,"byte_end":158623,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158628,"byte_end":158635,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158640,"byte_end":158664,"line_start":534,"line_end":534,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158669,"byte_end":158672,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158677,"byte_end":158725,"line_start":536,"line_end":536,"column_start":5,"column_end":53}},{"value":"/ buf.reserve(64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158730,"byte_end":158750,"line_start":537,"line_end":537,"column_start":5,"column_end":25}},{"value":"/ assert!(buf.capacity() >= 69);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158755,"byte_end":158789,"line_start":538,"line_end":538,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158794,"byte_end":158801,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158806,"byte_end":158809,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ In the following example, the existing buffer is reclaimed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158814,"byte_end":158877,"line_start":541,"line_end":541,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158882,"byte_end":158885,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158890,"byte_end":158897,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158902,"byte_end":158936,"line_start":544,"line_end":544,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158941,"byte_end":158944,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(128);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":158949,"byte_end":158996,"line_start":546,"line_end":546,"column_start":5,"column_end":52}},{"value":"/ buf.put(&[0; 64][..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159001,"byte_end":159027,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159032,"byte_end":159035,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ let ptr = buf.as_ptr();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159040,"byte_end":159067,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/ let other = buf.split();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159072,"byte_end":159100,"line_start":550,"line_end":550,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159105,"byte_end":159108,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159113,"byte_end":159141,"line_start":552,"line_end":552,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf.capacity(), 64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159146,"byte_end":159181,"line_start":553,"line_end":553,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159186,"byte_end":159189,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ drop(other);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159194,"byte_end":159210,"line_start":555,"line_end":555,"column_start":5,"column_end":21}},{"value":"/ buf.reserve(128);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159215,"byte_end":159236,"line_start":556,"line_end":556,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159241,"byte_end":159244,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.capacity(), 128);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159249,"byte_end":159285,"line_start":558,"line_end":558,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf.as_ptr(), ptr);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159290,"byte_end":159324,"line_start":559,"line_end":559,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159329,"byte_end":159336,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159341,"byte_end":159344,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159349,"byte_end":159361,"line_start":562,"line_end":562,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159366,"byte_end":159369,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159374,"byte_end":159423,"line_start":564,"line_end":564,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":159428,"byte_end":159437,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167841,"byte_end":167858,"line_start":764,"line_end":764,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this `BytesMut`.","sig":null,"attributes":[{"value":"/ Appends given bytes to this `BytesMut`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167399,"byte_end":167442,"line_start":748,"line_end":748,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167447,"byte_end":167450,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ If this `BytesMut` object does not have enough capacity, it is resized","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167455,"byte_end":167529,"line_start":750,"line_end":750,"column_start":5,"column_end":79}},{"value":"/ first.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167534,"byte_end":167544,"line_start":751,"line_end":751,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167549,"byte_end":167552,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167557,"byte_end":167571,"line_start":753,"line_end":753,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167576,"byte_end":167579,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167584,"byte_end":167591,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167596,"byte_end":167620,"line_start":756,"line_end":756,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167625,"byte_end":167628,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(0);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167633,"byte_end":167678,"line_start":758,"line_end":758,"column_start":5,"column_end":50}},{"value":"/ buf.extend_from_slice(b\"aaabbb\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167683,"byte_end":167720,"line_start":759,"line_end":759,"column_start":5,"column_end":42}},{"value":"/ buf.extend_from_slice(b\"cccddd\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167725,"byte_end":167762,"line_start":760,"line_end":760,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167767,"byte_end":167770,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167775,"byte_end":167817,"line_start":762,"line_end":762,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":167822,"byte_end":167829,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":169143,"byte_end":169150,"line_start":805,"line_end":805,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"pub fn unsplit(&mut Self, BytesMut)","parent":null,"children":[],"decl_id":null,"docs":" Absorbs a `BytesMut` that was previously split off.","sig":null,"attributes":[{"value":"/ Absorbs a `BytesMut` that was previously split off.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168258,"byte_end":168313,"line_start":781,"line_end":781,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168318,"byte_end":168321,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ If the two `BytesMut` objects were previously contiguous and not mutated","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168326,"byte_end":168402,"line_start":783,"line_end":783,"column_start":5,"column_end":81}},{"value":"/ in a way that causes re-allocation i.e., if `other` was created by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168407,"byte_end":168477,"line_start":784,"line_end":784,"column_start":5,"column_end":75}},{"value":"/ calling `split_off` on this `BytesMut`, then this is an `O(1)` operation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168482,"byte_end":168558,"line_start":785,"line_end":785,"column_start":5,"column_end":81}},{"value":"/ that just decreases a reference count and sets a few indices.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168563,"byte_end":168628,"line_start":786,"line_end":786,"column_start":5,"column_end":70}},{"value":"/ Otherwise this method degenerates to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168633,"byte_end":168673,"line_start":787,"line_end":787,"column_start":5,"column_end":45}},{"value":"/ `self.extend_from_slice(other.as_ref())`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168678,"byte_end":168723,"line_start":788,"line_end":788,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168728,"byte_end":168731,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168736,"byte_end":168750,"line_start":790,"line_end":790,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168755,"byte_end":168758,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168763,"byte_end":168770,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168775,"byte_end":168799,"line_start":793,"line_end":793,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168804,"byte_end":168807,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168812,"byte_end":168858,"line_start":795,"line_end":795,"column_start":5,"column_end":51}},{"value":"/ buf.extend_from_slice(b\"aaabbbcccddd\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168863,"byte_end":168906,"line_start":796,"line_end":796,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168911,"byte_end":168914,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ let split = buf.split_off(6);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168919,"byte_end":168952,"line_start":798,"line_end":798,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(b\"aaabbb\", &buf[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168957,"byte_end":168993,"line_start":799,"line_end":799,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(b\"cccddd\", &split[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":168998,"byte_end":169036,"line_start":800,"line_end":800,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":169041,"byte_end":169044,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ buf.unsplit(split);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":169049,"byte_end":169072,"line_start":802,"line_end":802,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":169077,"byte_end":169119,"line_start":803,"line_end":803,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":169124,"byte_end":169131,"line_start":804,"line_end":804,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176256,"byte_end":176274,"line_start":1025,"line_end":1025,"column_start":12,"column_end":30},"name":"spare_capacity_mut","qualname":"<BytesMut>::spare_capacity_mut","value":"pub fn spare_capacity_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining spare capacity of the buffer as a slice of `MaybeUninit<u8>`.","sig":null,"attributes":[{"value":"/ Returns the remaining spare capacity of the buffer as a slice of `MaybeUninit<u8>`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175343,"byte_end":175430,"line_start":995,"line_end":995,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175435,"byte_end":175438,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ The returned slice can be used to fill the buffer with data (e.g. by","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175443,"byte_end":175515,"line_start":997,"line_end":997,"column_start":5,"column_end":77}},{"value":"/ reading from a file) before marking the data as initialized using the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175520,"byte_end":175593,"line_start":998,"line_end":998,"column_start":5,"column_end":78}},{"value":"/ [`set_len`] method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175598,"byte_end":175621,"line_start":999,"line_end":999,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175626,"byte_end":175629,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ [`set_len`]: BytesMut::set_len","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175634,"byte_end":175668,"line_start":1001,"line_end":1001,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175673,"byte_end":175676,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175681,"byte_end":175695,"line_start":1003,"line_end":1003,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175700,"byte_end":175703,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175708,"byte_end":175715,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175720,"byte_end":175744,"line_start":1006,"line_end":1006,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175749,"byte_end":175752,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ // Allocate buffer big enough for 10 bytes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175757,"byte_end":175804,"line_start":1008,"line_end":1008,"column_start":5,"column_end":52}},{"value":"/ let mut buf = BytesMut::with_capacity(10);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175809,"byte_end":175855,"line_start":1009,"line_end":1009,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175860,"byte_end":175863,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ // Fill in the first 3 elements.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175868,"byte_end":175904,"line_start":1011,"line_end":1011,"column_start":5,"column_end":41}},{"value":"/ let uninit = buf.spare_capacity_mut();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175909,"byte_end":175951,"line_start":1012,"line_end":1012,"column_start":5,"column_end":47}},{"value":"/ uninit[0].write(0);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175956,"byte_end":175979,"line_start":1013,"line_end":1013,"column_start":5,"column_end":28}},{"value":"/ uninit[1].write(1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":175984,"byte_end":176007,"line_start":1014,"line_end":1014,"column_start":5,"column_end":28}},{"value":"/ uninit[2].write(2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176012,"byte_end":176035,"line_start":1015,"line_end":1015,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176040,"byte_end":176043,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ // Mark the first 3 bytes of the buffer as being initialized.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176048,"byte_end":176113,"line_start":1017,"line_end":1017,"column_start":5,"column_end":70}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176118,"byte_end":176130,"line_start":1018,"line_end":1018,"column_start":5,"column_end":17}},{"value":"/     buf.set_len(3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176135,"byte_end":176158,"line_start":1019,"line_end":1019,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176163,"byte_end":176168,"line_start":1020,"line_end":1020,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176173,"byte_end":176176,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176181,"byte_end":176218,"line_start":1022,"line_end":1022,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176223,"byte_end":176230,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176235,"byte_end":176244,"line_start":1024,"line_end":1024,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":42033,"byte_end":42036,"line_start":1335,"line_end":1335,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":42387,"byte_end":42393,"line_start":1357,"line_end":1357,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":79860,"byte_end":79863,"line_start":1381,"line_end":1381,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":80867,"byte_end":80870,"line_start":1421,"line_end":1421,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83670,"byte_end":83675,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85836,"byte_end":85841,"line_start":132,"line_end":132,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":87332,"byte_end":87337,"line_start":193,"line_end":193,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":88132,"byte_end":88137,"line_start":231,"line_end":231,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88920,"byte_end":88928,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90968,"byte_end":90976,"line_start":112,"line_end":112,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":91376,"byte_end":91384,"line_start":132,"line_end":132,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91733,"byte_end":91738,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92890,"byte_end":92895,"line_start":59,"line_end":59,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93741,"byte_end":93747,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94835,"byte_end":94841,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":95094,"byte_end":95100,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95701,"byte_end":95705,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98356,"byte_end":98360,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99792,"byte_end":99803,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":104125,"byte_end":104136,"line_start":176,"line_end":176,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\vec_deque.rs","byte_start":105301,"byte_end":105309,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106029,"byte_end":106035,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107407,"byte_end":107413,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112197,"byte_end":112202,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122654,"byte_end":122659,"line_start":519,"line_end":519,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122684,"byte_end":122689,"line_start":520,"line_end":520,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122708,"byte_end":122713,"line_start":522,"line_end":522,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122853,"byte_end":122858,"line_start":529,"line_end":529,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122999,"byte_end":123004,"line_start":536,"line_end":536,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":123730,"byte_end":123735,"line_start":572,"line_end":572,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":123862,"byte_end":123867,"line_start":581,"line_end":581,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":123969,"byte_end":123974,"line_start":588,"line_end":588,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124123,"byte_end":124128,"line_start":597,"line_end":597,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124218,"byte_end":124223,"line_start":603,"line_end":603,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124583,"byte_end":124588,"line_start":621,"line_end":621,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124741,"byte_end":124746,"line_start":629,"line_end":629,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124864,"byte_end":124869,"line_start":635,"line_end":635,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125016,"byte_end":125021,"line_start":641,"line_end":641,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125143,"byte_end":125148,"line_start":647,"line_end":647,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125178,"byte_end":125183,"line_start":649,"line_end":649,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125295,"byte_end":125300,"line_start":655,"line_end":655,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125726,"byte_end":125731,"line_start":673,"line_end":673,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125852,"byte_end":125857,"line_start":679,"line_end":679,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126306,"byte_end":126311,"line_start":697,"line_end":697,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126423,"byte_end":126428,"line_start":703,"line_end":703,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126584,"byte_end":126587,"line_start":709,"line_end":709,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126696,"byte_end":126699,"line_start":715,"line_end":715,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126871,"byte_end":126876,"line_start":721,"line_end":721,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126986,"byte_end":126991,"line_start":727,"line_end":727,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":127152,"byte_end":127158,"line_start":733,"line_end":733,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":127263,"byte_end":127269,"line_start":739,"line_end":739,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128035,"byte_end":128040,"line_start":769,"line_end":769,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128192,"byte_end":128197,"line_start":778,"line_end":778,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128375,"byte_end":128380,"line_start":789,"line_end":789,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128484,"byte_end":128489,"line_start":796,"line_end":796,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128608,"byte_end":128613,"line_start":802,"line_end":802,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128737,"byte_end":128742,"line_start":808,"line_end":808,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128881,"byte_end":128886,"line_start":815,"line_end":815,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":129759,"byte_end":129764,"line_start":846,"line_end":846,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":129867,"byte_end":129870,"line_start":852,"line_end":852,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":130100,"byte_end":130106,"line_start":861,"line_end":861,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":134377,"byte_end":134383,"line_start":1011,"line_end":1011,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146554,"byte_end":146562,"line_start":118,"line_end":118,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176518,"byte_end":176526,"line_start":1035,"line_end":1035,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176955,"byte_end":176963,"line_start":1052,"line_end":1052,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":177541,"byte_end":177549,"line_start":1081,"line_end":1081,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":178952,"byte_end":178960,"line_start":1140,"line_end":1140,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179057,"byte_end":179065,"line_start":1147,"line_end":1147,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179190,"byte_end":179198,"line_start":1156,"line_end":1156,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179310,"byte_end":179318,"line_start":1163,"line_end":1163,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179437,"byte_end":179445,"line_start":1170,"line_end":1170,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179566,"byte_end":179574,"line_start":1176,"line_end":1176,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179689,"byte_end":179694,"line_start":1182,"line_end":1182,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179784,"byte_end":179792,"line_start":1188,"line_end":1188,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179913,"byte_end":179921,"line_start":1194,"line_end":1194,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180071,"byte_end":180079,"line_start":1200,"line_end":1200,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180204,"byte_end":180212,"line_start":1206,"line_end":1206,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180234,"byte_end":180242,"line_start":1208,"line_end":1208,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180343,"byte_end":180351,"line_start":1215,"line_end":1215,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180524,"byte_end":180532,"line_start":1225,"line_end":1225,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180623,"byte_end":180631,"line_start":1231,"line_end":1231,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180729,"byte_end":180737,"line_start":1237,"line_end":1237,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":181116,"byte_end":181124,"line_start":1254,"line_end":1254,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":181226,"byte_end":181234,"line_start":1260,"line_end":1260,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":181592,"byte_end":181600,"line_start":1278,"line_end":1278,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":182056,"byte_end":182064,"line_start":1298,"line_end":1298,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":182239,"byte_end":182247,"line_start":1307,"line_end":1307,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":182458,"byte_end":182466,"line_start":1318,"line_end":1318,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":182635,"byte_end":182643,"line_start":1324,"line_end":1324,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":184390,"byte_end":184396,"line_start":1376,"line_end":1376,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187270,"byte_end":187278,"line_start":1460,"line_end":1460,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187303,"byte_end":187311,"line_start":1461,"line_end":1461,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187393,"byte_end":187401,"line_start":1469,"line_end":1469,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187505,"byte_end":187513,"line_start":1475,"line_end":1475,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187944,"byte_end":187952,"line_start":1493,"line_end":1493,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188065,"byte_end":188073,"line_start":1499,"line_end":1499,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188527,"byte_end":188535,"line_start":1517,"line_end":1517,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188647,"byte_end":188655,"line_start":1523,"line_end":1523,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188807,"byte_end":188810,"line_start":1529,"line_end":1529,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188925,"byte_end":188928,"line_start":1535,"line_end":1535,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189074,"byte_end":189082,"line_start":1541,"line_end":1541,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189192,"byte_end":189200,"line_start":1547,"line_end":1547,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189357,"byte_end":189363,"line_start":1553,"line_end":1553,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189474,"byte_end":189480,"line_start":1559,"line_end":1559,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189676,"byte_end":189684,"line_start":1565,"line_end":1565,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189839,"byte_end":189847,"line_start":1574,"line_end":1574,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":190581,"byte_end":190586,"line_start":1607,"line_end":1607,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":190699,"byte_end":190707,"line_start":1613,"line_end":1613,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":190815,"byte_end":190818,"line_start":1619,"line_end":1619,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\debug.rs","byte_start":196240,"byte_end":196248,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\debug.rs","byte_start":197086,"byte_end":197091,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\debug.rs","byte_start":197219,"byte_end":197227,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\hex.rs","byte_start":197467,"byte_end":197475,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\hex.rs","byte_start":197651,"byte_end":197659,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\loom.rs","byte_start":198523,"byte_end":198532,"line_start":12,"line_end":12,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\lib.rs","byte_start":2919,"byte_end":2922,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":42033,"byte_end":42036,"line_start":1335,"line_end":1335,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":313},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_impl.rs","byte_start":42387,"byte_end":42393,"line_start":1357,"line_end":1357,"column_start":39,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":9773},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":79860,"byte_end":79863,"line_start":1381,"line_end":1381,"column_start":44,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":4,"index":313},"to":{"krate":0,"index":152}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\buf_mut.rs","byte_start":80867,"byte_end":80870,"line_start":1421,"line_end":1421,"column_start":24,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":4,"index":7063},"to":{"krate":0,"index":152}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":83670,"byte_end":83675,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":85836,"byte_end":85841,"line_start":132,"line_end":132,"column_start":20,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1352},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":87332,"byte_end":87337,"line_start":193,"line_end":193,"column_start":30,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1352},"to":{"krate":0,"index":152}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\chain.rs","byte_start":88132,"byte_end":88137,"line_start":231,"line_end":231,"column_start":29,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1352},"to":{"krate":1,"index":7473}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":88920,"byte_end":88928,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":90968,"byte_end":90976,"line_start":112,"line_end":112,"column_start":27,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":7653}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\iter.rs","byte_start":91376,"byte_end":91384,"line_start":132,"line_end":132,"column_start":36,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":7542}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":91733,"byte_end":91738,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\limit.rs","byte_start":92890,"byte_end":92895,"line_start":59,"line_end":59,"column_start":35,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1367},"to":{"krate":0,"index":152}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":93741,"byte_end":93747,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":94835,"byte_end":94841,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1374},"to":{"krate":5,"index":4343}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\reader.rs","byte_start":95094,"byte_end":95100,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1374},"to":{"krate":5,"index":4428}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":95701,"byte_end":95705,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\take.rs","byte_start":98356,"byte_end":98360,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1380},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":99792,"byte_end":99803,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\uninit_slice.rs","byte_start":104125,"byte_end":104136,"line_start":176,"line_end":176,"column_start":21,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":398},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\vec_deque.rs","byte_start":105301,"byte_end":105309,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":4,"index":4159},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":106029,"byte_end":106035,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\buf\\writer.rs","byte_start":107407,"byte_end":107413,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1417},"to":{"krate":5,"index":4403}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":112197,"byte_end":112202,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122654,"byte_end":122659,"line_start":519,"line_end":519,"column_start":22,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":3016}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122684,"byte_end":122689,"line_start":520,"line_end":520,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":3028}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122708,"byte_end":122713,"line_start":522,"line_end":522,"column_start":15,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122853,"byte_end":122858,"line_start":529,"line_end":529,"column_start":16,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2637}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":122999,"byte_end":123004,"line_start":536,"line_end":536,"column_start":14,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":557},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":123730,"byte_end":123735,"line_start":572,"line_end":572,"column_start":16,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":3227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":123862,"byte_end":123867,"line_start":581,"line_end":581,"column_start":22,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2913}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":123969,"byte_end":123974,"line_start":588,"line_end":588,"column_start":21,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":9607}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124123,"byte_end":124128,"line_start":597,"line_end":597,"column_start":23,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2615}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124218,"byte_end":124223,"line_start":603,"line_end":603,"column_start":23,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":7473}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124583,"byte_end":124588,"line_start":621,"line_end":621,"column_start":27,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":7469}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124741,"byte_end":124746,"line_start":629,"line_end":629,"column_start":20,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":124864,"byte_end":124869,"line_start":635,"line_end":635,"column_start":21,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125016,"byte_end":125021,"line_start":641,"line_end":641,"column_start":14,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2703}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125143,"byte_end":125148,"line_start":647,"line_end":647,"column_start":13,"column_end":18},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2672}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125178,"byte_end":125183,"line_start":649,"line_end":649,"column_start":26,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125295,"byte_end":125300,"line_start":655,"line_end":655,"column_start":27,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125726,"byte_end":125731,"line_start":673,"line_end":673,"column_start":25,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":125852,"byte_end":125857,"line_start":679,"line_end":679,"column_start":26,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126306,"byte_end":126311,"line_start":697,"line_end":697,"column_start":29,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126423,"byte_end":126428,"line_start":703,"line_end":703,"column_start":30,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126584,"byte_end":126587,"line_start":709,"line_end":709,"column_start":27,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":4,"index":7063},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126696,"byte_end":126699,"line_start":715,"line_end":715,"column_start":28,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":4,"index":7063},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126871,"byte_end":126876,"line_start":721,"line_end":721,"column_start":28,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":126986,"byte_end":126991,"line_start":727,"line_end":727,"column_start":29,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":127152,"byte_end":127158,"line_start":733,"line_end":733,"column_start":27,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":4,"index":7606},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":127263,"byte_end":127269,"line_start":739,"line_end":739,"column_start":28,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":4,"index":7606},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128035,"byte_end":128040,"line_start":769,"line_end":769,"column_start":42,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128192,"byte_end":128197,"line_start":778,"line_end":778,"column_start":43,"column_end":48},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128375,"byte_end":128380,"line_start":789,"line_end":789,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128484,"byte_end":128489,"line_start":796,"line_end":796,"column_start":30,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128608,"byte_end":128613,"line_start":802,"line_end":802,"column_start":29,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128737,"byte_end":128742,"line_start":808,"line_end":808,"column_start":24,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":128881,"byte_end":128886,"line_start":815,"line_end":815,"column_start":26,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":129759,"byte_end":129764,"line_start":846,"line_end":846,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":129867,"byte_end":129870,"line_start":852,"line_end":852,"column_start":22,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":4,"index":7063},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":130100,"byte_end":130106,"line_start":861,"line_end":861,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":562},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes.rs","byte_start":134377,"byte_end":134383,"line_start":1011,"line_end":1011,"column_start":15,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":712},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":146554,"byte_end":146562,"line_start":118,"line_end":118,"column_start":6,"column_end":14},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176518,"byte_end":176526,"line_start":1035,"line_end":1035,"column_start":15,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":176955,"byte_end":176963,"line_start":1052,"line_end":1052,"column_start":14,"column_end":22},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":840},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":177541,"byte_end":177549,"line_start":1081,"line_end":1081,"column_start":24,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":840},"to":{"krate":0,"index":152}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":178952,"byte_end":178960,"line_start":1140,"line_end":1140,"column_start":22,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2913}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179057,"byte_end":179065,"line_start":1147,"line_end":1147,"column_start":16,"column_end":24},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":3227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179190,"byte_end":179198,"line_start":1156,"line_end":1156,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2916}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179310,"byte_end":179318,"line_start":1163,"line_end":1163,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":3240}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179437,"byte_end":179445,"line_start":1170,"line_end":1170,"column_start":29,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179566,"byte_end":179574,"line_start":1176,"line_end":1176,"column_start":28,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179689,"byte_end":179694,"line_start":1182,"line_end":1182,"column_start":25,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179784,"byte_end":179792,"line_start":1188,"line_end":1188,"column_start":20,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":179913,"byte_end":179921,"line_start":1194,"line_end":1194,"column_start":21,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180071,"byte_end":180079,"line_start":1200,"line_end":1200,"column_start":14,"column_end":22},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2703}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180204,"byte_end":180212,"line_start":1206,"line_end":1206,"column_start":13,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2672}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180234,"byte_end":180242,"line_start":1208,"line_end":1208,"column_start":18,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180343,"byte_end":180351,"line_start":1215,"line_end":1215,"column_start":21,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":9607}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180524,"byte_end":180532,"line_start":1225,"line_end":1225,"column_start":23,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2615}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180623,"byte_end":180631,"line_start":1231,"line_end":1231,"column_start":26,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2618}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":180729,"byte_end":180737,"line_start":1237,"line_end":1237,"column_start":21,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":9352}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":181116,"byte_end":181124,"line_start":1254,"line_end":1254,"column_start":16,"column_end":24},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2637}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":181226,"byte_end":181234,"line_start":1260,"line_end":1260,"column_start":23,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":7473}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":181592,"byte_end":181600,"line_start":1278,"line_end":1278,"column_start":21,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":7482}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":182056,"byte_end":182064,"line_start":1298,"line_end":1298,"column_start":29,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":7482}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":182239,"byte_end":182247,"line_start":1307,"line_end":1307,"column_start":24,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":7482}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":182458,"byte_end":182466,"line_start":1318,"line_end":1318,"column_start":27,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":7469}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":182635,"byte_end":182643,"line_start":1324,"line_end":1324,"column_start":35,"column_end":43},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":7469}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":184390,"byte_end":184396,"line_start":1376,"line_end":1376,"column_start":6,"column_end":12},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187270,"byte_end":187278,"line_start":1460,"line_end":1460,"column_start":22,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":3016}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187303,"byte_end":187311,"line_start":1461,"line_end":1461,"column_start":22,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":3028}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187393,"byte_end":187401,"line_start":1469,"line_end":1469,"column_start":26,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187505,"byte_end":187513,"line_start":1475,"line_end":1475,"column_start":27,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":187944,"byte_end":187952,"line_start":1493,"line_end":1493,"column_start":25,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188065,"byte_end":188073,"line_start":1499,"line_end":1499,"column_start":26,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188527,"byte_end":188535,"line_start":1517,"line_end":1517,"column_start":29,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188647,"byte_end":188655,"line_start":1523,"line_end":1523,"column_start":30,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188807,"byte_end":188810,"line_start":1529,"line_end":1529,"column_start":30,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":4,"index":7063},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":188925,"byte_end":188928,"line_start":1535,"line_end":1535,"column_start":31,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":4,"index":7063},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189074,"byte_end":189082,"line_start":1541,"line_end":1541,"column_start":28,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189192,"byte_end":189200,"line_start":1547,"line_end":1547,"column_start":29,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189357,"byte_end":189363,"line_start":1553,"line_end":1553,"column_start":30,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":4,"index":7606},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189474,"byte_end":189480,"line_start":1559,"line_end":1559,"column_start":31,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":4,"index":7606},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189676,"byte_end":189684,"line_start":1565,"line_end":1565,"column_start":42,"column_end":50},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":189839,"byte_end":189847,"line_start":1574,"line_end":1574,"column_start":43,"column_end":51},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":190581,"byte_end":190586,"line_start":1607,"line_end":1607,"column_start":30,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":190699,"byte_end":190707,"line_start":1613,"line_end":1613,"column_start":27,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\bytes_mut.rs","byte_start":190815,"byte_end":190818,"line_start":1619,"line_end":1619,"column_start":25,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":4,"index":7063},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\debug.rs","byte_start":196240,"byte_end":196248,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\debug.rs","byte_start":197086,"byte_end":197091,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":557},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\debug.rs","byte_start":197219,"byte_end":197227,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\hex.rs","byte_start":197467,"byte_end":197475,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":9414}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\fmt\\hex.rs","byte_start":197651,"byte_end":197659,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":9416}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytes-1.3.0\\src\\loom.rs","byte_start":198523,"byte_end":198532,"line_start":12,"line_end":12,"column_start":34,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":8938},"to":{"krate":0,"index":1119}}]}
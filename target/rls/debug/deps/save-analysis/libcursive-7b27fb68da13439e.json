{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2","program":"C:\\Users\\user\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","cursive","--edition=2018","C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"crossterm\"","--cfg","feature=\"crossterm-backend\"","-C","metadata=7b27fb68da13439e","-C","extra-filename=-7b27fb68da13439e","--out-dir","c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libcfg_if-5c8cb30a58fdf106.rmeta","--extern","chrono=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libchrono-ce5d9d9f1a47205d.rmeta","--extern","crossbeam_channel=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libcrossbeam_channel-83677bab8303ca7e.rmeta","--extern","crossterm=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libcrossterm-e6fe89d8264b96e1.rmeta","--extern","enum_map=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libenum_map-b68e60efc5069634.rmeta","--extern","enumset=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libenumset-b920a54331fdc8cf.rmeta","--extern","hashbrown=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libhashbrown-2583eb94321f0b5e.rmeta","--extern","lazy_static=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\liblazy_static-bd64fd2ac3c1fe4c.rmeta","--extern","libc=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\liblibc-1f1908d569257542.rmeta","--extern","log=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\liblog-a3484c9045a11a4d.rmeta","--extern","num=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libnum-8f2341d448dd7788.rmeta","--extern","owning_ref=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libowning_ref-6e91121548f642b6.rmeta","--extern","toml=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libtoml-6e078a971c28f677.rmeta","--extern","unicode_segmentation=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libunicode_segmentation-a36ca73c6c0544b8.rmeta","--extern","unicode_width=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libunicode_width-2c1eea95c2396426.rmeta","--extern","xi_unicode=c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libxi_unicode-3afc9b8c5d25d3ed.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\user\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\user\\Desktop\\PatnicRoom Env\\Workspace\\CLI\\target\\rls\\debug\\deps\\libcursive-7b27fb68da13439e.rmeta"},"prelude":{"crate_id":{"name":"cursive","disambiguator":[3764033504834424531,0]},"crate_root":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src","external_crates":[{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5748888646060736057,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15195352194256834944,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8936219983177082535,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9514052684633617057,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11173665669995955307,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11489992985031151541,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16828784558795307081,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10060143980449217236,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14817981415011782061,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16087529398371340149,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","num":14,"id":{"name":"unicode_segmentation","disambiguator":[8977276178912886699,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","num":15,"id":{"name":"unicode_width","disambiguator":[738940202093888423,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\chunk_iterator.rs","num":16,"id":{"name":"xi_unicode","disambiguator":[11944284750035908766,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","num":17,"id":{"name":"lazy_static","disambiguator":[4519470818501528546,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","num":18,"id":{"name":"enumset","disambiguator":[10228168973941194236,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","num":19,"id":{"name":"enumset_derive","disambiguator":[9422255419070219091,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","num":20,"id":{"name":"num_traits","disambiguator":[1829765308124558404,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":21,"id":{"name":"enum_map","disambiguator":[7868109882466248379,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":22,"id":{"name":"enum_map_derive","disambiguator":[10335928899646516978,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":23,"id":{"name":"enum_map_internals","disambiguator":[7818928407085362412,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":24,"id":{"name":"array_macro","disambiguator":[13489591555891070966,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":25,"id":{"name":"log","disambiguator":[3098867876892199682,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":26,"id":{"name":"cfg_if","disambiguator":[13690946024276880309,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":27,"id":{"name":"toml","disambiguator":[6773714124146957753,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":28,"id":{"name":"serde","disambiguator":[16845498524890617700,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","num":29,"id":{"name":"hashbrown","disambiguator":[6037891546158607561,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","num":30,"id":{"name":"num","disambiguator":[18073154973075978708,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","num":31,"id":{"name":"num_complex","disambiguator":[18409827269969733411,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","num":32,"id":{"name":"num_integer","disambiguator":[14680507387937838786,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","num":33,"id":{"name":"num_iter","disambiguator":[2992713088696314716,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","num":34,"id":{"name":"num_rational","disambiguator":[12476959444017726068,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","num":35,"id":{"name":"owning_ref","disambiguator":[4243763282432585449,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","num":36,"id":{"name":"stable_deref_trait","disambiguator":[3273005042210663761,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","num":37,"id":{"name":"crossbeam_channel","disambiguator":[6990118935141244057,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","num":38,"id":{"name":"crossbeam_utils","disambiguator":[11057116523303776766,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","num":39,"id":{"name":"cfg_if","disambiguator":[5140685736974968705,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":40,"id":{"name":"crossterm","disambiguator":[13796037849871325575,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":41,"id":{"name":"crossterm_utils","disambiguator":[16435021147404342736,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":42,"id":{"name":"crossterm_winapi","disambiguator":[14814457986165131586,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":43,"id":{"name":"winapi","disambiguator":[3866011552936223613,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":44,"id":{"name":"crossterm_cursor","disambiguator":[6537708936506828111,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":45,"id":{"name":"crossterm_input","disambiguator":[15013368513152415209,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":46,"id":{"name":"crossterm_screen","disambiguator":[315085027865829004,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":47,"id":{"name":"crossterm_style","disambiguator":[11714144868851660066,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","num":48,"id":{"name":"crossterm_terminal","disambiguator":[7084157539464553145,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","num":49,"id":{"name":"chrono","disambiguator":[7929441437591360348,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","num":50,"id":{"name":"time","disambiguator":[6850902235511864050,0]}},{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","num":51,"id":{"name":"libc","disambiguator":[9822568849227505264,0]}}],"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":0,"byte_end":2791,"line_start":1,"line_end":111,"column_start":1,"column_end":22}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":3015,"byte_end":3022,"line_start":12,"line_end":12,"column_start":23,"column_end":30},"alias_span":null,"name":"Boxable","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":3024,"byte_end":3030,"line_start":12,"line_end":12,"column_start":32,"column_end":38},"alias_span":null,"name":"Finder","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":3032,"byte_end":3044,"line_start":12,"line_end":12,"column_start":40,"column_end":52},"alias_span":null,"name":"Identifiable","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":3046,"byte_end":3056,"line_start":12,"line_end":12,"column_start":54,"column_end":64},"alias_span":null,"name":"Scrollable","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":3058,"byte_end":3062,"line_start":12,"line_end":12,"column_start":66,"column_end":70},"alias_span":null,"name":"View","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":3099,"byte_end":3103,"line_start":15,"line_end":15,"column_start":16,"column_end":20},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18455,"byte_end":18462,"line_start":66,"line_end":66,"column_start":20,"column_end":27},"alias_span":null,"name":"AnyView","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18487,"byte_end":18494,"line_start":67,"line_end":67,"column_start":24,"column_end":31},"alias_span":null,"name":"Boxable","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18519,"byte_end":18525,"line_start":68,"line_end":68,"column_start":24,"column_end":30},"alias_span":null,"name":"Finder","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18527,"byte_end":18535,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"alias_span":null,"name":"Selector","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18566,"byte_end":18578,"line_start":69,"line_end":69,"column_start":29,"column_end":41},"alias_span":null,"name":"Identifiable","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18611,"byte_end":18624,"line_start":70,"line_end":70,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoBoxedView","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18649,"byte_end":18656,"line_start":71,"line_end":71,"column_start":24,"column_end":31},"alias_span":null,"name":"Margins","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":5418},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18683,"byte_end":18689,"line_start":72,"line_end":72,"column_start":26,"column_end":32},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18691,"byte_end":18699,"line_start":72,"line_end":72,"column_start":34,"column_end":42},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":5480},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18724,"byte_end":18738,"line_start":73,"line_end":73,"column_start":23,"column_end":37},"alias_span":null,"name":"ScrollStrategy","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":5489},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18767,"byte_end":18777,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"alias_span":null,"name":"ScrollBase","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18805,"byte_end":18815,"line_start":75,"line_end":75,"column_start":27,"column_end":37},"alias_span":null,"name":"Scrollable","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18843,"byte_end":18852,"line_start":76,"line_end":76,"column_start":27,"column_end":36},"alias_span":null,"name":"SizeCache","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":5447},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18885,"byte_end":18899,"line_start":77,"line_end":77,"column_start":32,"column_end":46},"alias_span":null,"name":"SizeConstraint","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18926,"byte_end":18934,"line_start":78,"line_end":78,"column_start":26,"column_end":34},"alias_span":null,"name":"ViewPath","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18962,"byte_end":18966,"line_start":79,"line_end":79,"column_start":27,"column_end":31},"alias_span":null,"name":"View","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":18996,"byte_end":19007,"line_start":80,"line_end":80,"column_start":29,"column_end":40},"alias_span":null,"name":"ViewWrapper","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102076,"byte_end":102089,"line_start":10,"line_end":10,"column_start":31,"column_end":44},"alias_span":null,"name":"LinesIterator","value":"","parent":{"krate":0,"index":847}},{"kind":"Use","ref_id":{"krate":0,"index":5507},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102110,"byte_end":102113,"line_start":11,"line_end":11,"column_start":20,"column_end":23},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":847}},{"kind":"Use","ref_id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108716,"byte_end":108729,"line_start":18,"line_end":18,"column_start":31,"column_end":44},"alias_span":null,"name":"LinesIterator","value":"","parent":{"krate":0,"index":921}},{"kind":"Use","ref_id":{"krate":0,"index":5549},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108750,"byte_end":108753,"line_start":19,"line_end":19,"column_start":20,"column_end":23},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":921}},{"kind":"Use","ref_id":{"krate":0,"index":5563},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108778,"byte_end":108785,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"Segment","value":"","parent":{"krate":0,"index":921}},{"kind":"Use","ref_id":{"krate":0,"index":5500},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","byte_start":96878,"byte_end":96885,"line_start":11,"line_end":11,"column_start":24,"column_end":31},"alias_span":null,"name":"Counter","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":0,"index":5501},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","byte_start":96878,"byte_end":96885,"line_start":11,"line_end":11,"column_start":24,"column_end":31},"alias_span":null,"name":"Counter","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":0,"index":5580},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","byte_start":96909,"byte_end":96923,"line_start":12,"line_end":12,"column_start":23,"column_end":37},"alias_span":null,"name":"ProgressReader","value":"","parent":{"krate":0,"index":825}},{"kind":"Use","ref_id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169602,"byte_end":169613,"line_start":167,"line_end":167,"column_start":29,"column_end":40},"alias_span":null,"name":"BorderStyle","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169637,"byte_end":169646,"line_start":168,"line_end":168,"column_start":23,"column_end":32},"alias_span":null,"name":"BaseColor","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169648,"byte_end":169653,"line_start":168,"line_end":168,"column_start":34,"column_end":39},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":5904},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169682,"byte_end":169691,"line_start":169,"line_end":169,"column_start":27,"column_end":36},"alias_span":null,"name":"ColorPair","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":5922},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169721,"byte_end":169731,"line_start":170,"line_end":170,"column_start":29,"column_end":39},"alias_span":null,"name":"ColorStyle","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169733,"byte_end":169742,"line_start":170,"line_end":170,"column_start":41,"column_end":50},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":5962},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169767,"byte_end":169773,"line_start":171,"line_end":171,"column_start":23,"column_end":29},"alias_span":null,"name":"Effect","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":6014},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169799,"byte_end":169806,"line_start":172,"line_end":172,"column_start":25,"column_end":32},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":6047},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169808,"byte_end":169820,"line_start":172,"line_end":172,"column_start":34,"column_end":46},"alias_span":null,"name":"PaletteColor","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":6093},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169844,"byte_end":169849,"line_start":173,"line_end":173,"column_start":22,"column_end":27},"alias_span":null,"name":"Style","value":"","parent":{"krate":0,"index":1385}},{"kind":"Use","ref_id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":208942,"byte_end":208949,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"alias_span":null,"name":"BoxView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":208973,"byte_end":208979,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"alias_span":null,"name":"Button","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209003,"byte_end":209009,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"alias_span":null,"name":"Canvas","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209035,"byte_end":209043,"line_start":74,"line_end":74,"column_start":25,"column_end":33},"alias_span":null,"name":"Checkbox","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209075,"byte_end":209088,"line_start":75,"line_end":75,"column_start":31,"column_end":44},"alias_span":null,"name":"CircularFocus","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209116,"byte_end":209125,"line_start":76,"line_end":76,"column_start":27,"column_end":36},"alias_span":null,"name":"DebugView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209150,"byte_end":209156,"line_start":77,"line_end":77,"column_start":24,"column_end":30},"alias_span":null,"name":"Dialog","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":6152},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209158,"byte_end":209169,"line_start":77,"line_end":77,"column_start":32,"column_end":43},"alias_span":null,"name":"DialogFocus","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209193,"byte_end":209202,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"alias_span":null,"name":"DummyView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2309},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209193,"byte_end":209202,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"alias_span":null,"name":"DummyView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209229,"byte_end":209237,"line_start":79,"line_end":79,"column_start":26,"column_end":34},"alias_span":null,"name":"EditView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209270,"byte_end":209284,"line_start":80,"line_end":80,"column_start":32,"column_end":46},"alias_span":null,"name":"EnableableView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209315,"byte_end":209327,"line_start":81,"line_end":81,"column_start":30,"column_end":42},"alias_span":null,"name":"HideableView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209353,"byte_end":209359,"line_start":82,"line_end":82,"column_start":25,"column_end":31},"alias_span":null,"name":"IdView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209361,"byte_end":209368,"line_start":82,"line_end":82,"column_start":33,"column_end":40},"alias_span":null,"name":"ViewRef","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":6190},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209392,"byte_end":209397,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209428,"byte_end":209440,"line_start":84,"line_end":84,"column_start":30,"column_end":42},"alias_span":null,"name":"LinearLayout","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209468,"byte_end":209477,"line_start":85,"line_end":85,"column_start":27,"column_end":36},"alias_span":null,"name":"ListChild","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209479,"byte_end":209487,"line_start":85,"line_end":85,"column_start":38,"column_end":46},"alias_span":null,"name":"ListView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209516,"byte_end":209525,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"alias_span":null,"name":"MenuPopup","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209550,"byte_end":209557,"line_start":87,"line_end":87,"column_start":24,"column_end":31},"alias_span":null,"name":"Menubar","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209588,"byte_end":209599,"line_start":88,"line_end":88,"column_start":30,"column_end":41},"alias_span":null,"name":"OnEventView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209628,"byte_end":209638,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"PaddedView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":6250},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209661,"byte_end":209666,"line_start":90,"line_end":90,"column_start":22,"column_end":27},"alias_span":null,"name":"Panel","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209696,"byte_end":209707,"line_start":91,"line_end":91,"column_start":29,"column_end":40},"alias_span":null,"name":"ProgressBar","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209731,"byte_end":209742,"line_start":92,"line_end":92,"column_start":23,"column_end":34},"alias_span":null,"name":"RadioButton","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":6271},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209744,"byte_end":209754,"line_start":92,"line_end":92,"column_start":36,"column_end":46},"alias_span":null,"name":"RadioGroup","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209784,"byte_end":209794,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"ScrollView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209823,"byte_end":209833,"line_start":94,"line_end":94,"column_start":28,"column_end":38},"alias_span":null,"name":"SelectView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209862,"byte_end":209872,"line_start":95,"line_end":95,"column_start":28,"column_end":38},"alias_span":null,"name":"ShadowView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3822},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209900,"byte_end":209909,"line_start":96,"line_end":96,"column_start":27,"column_end":36},"alias_span":null,"name":"SizedView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3881},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209938,"byte_end":209948,"line_start":97,"line_end":97,"column_start":28,"column_end":38},"alias_span":null,"name":"SliderView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":6304},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209977,"byte_end":209990,"line_start":98,"line_end":98,"column_start":28,"column_end":41},"alias_span":null,"name":"LayerPosition","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":209992,"byte_end":210001,"line_start":98,"line_end":98,"column_start":43,"column_end":52},"alias_span":null,"name":"StackView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":4176},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":210029,"byte_end":210037,"line_start":99,"line_end":99,"column_start":26,"column_end":34},"alias_span":null,"name":"TextArea","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":6327},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":210065,"byte_end":210076,"line_start":100,"line_end":100,"column_start":27,"column_end":38},"alias_span":null,"name":"TextContent","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":210078,"byte_end":210092,"line_start":100,"line_end":100,"column_start":40,"column_end":54},"alias_span":null,"name":"TextContentRef","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":4325},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":210094,"byte_end":210102,"line_start":100,"line_end":100,"column_start":56,"column_end":64},"alias_span":null,"name":"TextView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":210133,"byte_end":210144,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"TrackedView","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":210170,"byte_end":210177,"line_start":102,"line_end":102,"column_start":25,"column_end":32},"alias_span":null,"name":"ViewBox","value":"","parent":{"krate":0,"index":1750}},{"kind":"Use","ref_id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2625,"byte_end":2631,"line_start":106,"line_end":106,"column_start":25,"column_end":31},"alias_span":null,"name":"CbFunc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2633,"byte_end":2639,"line_start":106,"line_end":106,"column_start":33,"column_end":39},"alias_span":null,"name":"CbSink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2641,"byte_end":2648,"line_start":106,"line_end":106,"column_start":41,"column_end":48},"alias_span":null,"name":"Cursive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4650},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2650,"byte_end":2658,"line_start":106,"line_end":106,"column_start":50,"column_end":58},"alias_span":null,"name":"ScreenId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6343},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2684,"byte_end":2691,"line_start":107,"line_end":107,"column_start":24,"column_end":31},"alias_span":null,"name":"Printer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6358},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2713,"byte_end":2717,"line_start":108,"line_end":108,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2738,"byte_end":2742,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"alias_span":null,"name":"Vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2764,"byte_end":2768,"line_start":110,"line_end":110,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6373},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2788,"byte_end":2790,"line_start":111,"line_end":111,"column_start":19,"column_end":21},"alias_span":null,"name":"XY","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":0,"byte_end":2791,"line_start":1,"line_end":111,"column_start":1,"column_end":22},"name":"","qualname":"::","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":24},{"krate":0,"index":124},{"krate":0,"index":825},{"krate":0,"index":1263},{"krate":0,"index":1275},{"krate":0,"index":1309},{"krate":0,"index":1331},{"krate":0,"index":1385},{"krate":0,"index":1625},{"krate":0,"index":1750},{"krate":0,"index":4560},{"krate":0,"index":4736},{"krate":0,"index":4858},{"krate":0,"index":4898},{"krate":0,"index":4909},{"krate":0,"index":5000},{"krate":0,"index":5006},{"krate":0,"index":5014},{"krate":0,"index":5190},{"krate":0,"index":5191},{"krate":0,"index":5194},{"krate":0,"index":5197},{"krate":0,"index":5200},{"krate":0,"index":5203},{"krate":0,"index":5206},{"krate":0,"index":5209},{"krate":0,"index":5212},{"krate":0,"index":5215}],"decl_id":null,"docs":" # Cursive","sig":null,"attributes":[{"value":"/ # Cursive","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":0,"byte_end":13,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":14,"byte_end":17,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Cursive] is a [TUI] library - it lets you easily build rich interfaces","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":18,"byte_end":93,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ for use in a terminal.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":94,"byte_end":120,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":121,"byte_end":124,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [Cursive]: https://github.com/gyscos/Cursive","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":125,"byte_end":173,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/ [TUI]: https://en.wikipedia.org/wiki/Text-based_user_interface","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":174,"byte_end":240,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":241,"byte_end":244,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Getting started","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":245,"byte_end":267,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":268,"byte_end":271,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Every application should start with a [`Cursive`](struct.Cursive.html)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":272,"byte_end":348,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/   object. It is the main entry-point to the library.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":349,"byte_end":405,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ * A declarative phase then describes the structure of the UI by adding","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":406,"byte_end":480,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/   views and configuring their behaviours.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":481,"byte_end":526,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ * Finally, the event loop is started by calling","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":527,"byte_end":578,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/   [`Cursive::run(&mut self)`](struct.Cursive.html#method.run).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":579,"byte_end":645,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":646,"byte_end":649,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Views","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":650,"byte_end":662,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":663,"byte_end":666,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Views are the main components of a cursive interface.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":667,"byte_end":724,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ The [`views`](./views/index.html) module contains many views to use in your","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":725,"byte_end":804,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ application; if you don't find what you need, you may also implement the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":805,"byte_end":881,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`View`](view/trait.View.html) trait and build your own.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":882,"byte_end":942,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":943,"byte_end":946,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Callbacks","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":947,"byte_end":963,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":964,"byte_end":967,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Cursive is callback-driven: it reacts to events generated by user input.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":968,"byte_end":1044,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1045,"byte_end":1048,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ During the declarative phase, callbacks are set to trigger on specific","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1049,"byte_end":1123,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ events. These functions usually take a `&mut Cursive` argument, allowing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1124,"byte_end":1200,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ them to modify the view tree at will.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1201,"byte_end":1242,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1243,"byte_end":1246,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1247,"byte_end":1262,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1263,"byte_end":1266,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1267,"byte_end":1278,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1279,"byte_end":1304,"line_start":36,"line_end":36,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1305,"byte_end":1308,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1309,"byte_end":1334,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/ use cursive::views::TextView;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1335,"byte_end":1368,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1369,"byte_end":1372,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1373,"byte_end":1388,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/     let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1389,"byte_end":1428,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1429,"byte_end":1432,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     siv.add_layer(TextView::new(\"Hello World!\\nPress q to quit.\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1433,"byte_end":1504,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1505,"byte_end":1508,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     siv.add_global_callback('q', |s| s.quit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1509,"byte_end":1560,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1561,"byte_end":1564,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     siv.run();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1565,"byte_end":1583,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1584,"byte_end":1589,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1590,"byte_end":1597,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1598,"byte_end":1601,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Debugging","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1602,"byte_end":1618,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1619,"byte_end":1622,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The `Cursive` root initializes the terminal on creation, and do cleanups","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1623,"byte_end":1699,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ on drop. While it is alive, printing to the terminal will not work","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1700,"byte_end":1770,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/ as expected, making debugging a bit harder.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1771,"byte_end":1818,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1819,"byte_end":1822,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ One solution is to redirect stderr to a file when running the application,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1823,"byte_end":1901,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ and log to it instead of stdout.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1902,"byte_end":1938,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1939,"byte_end":1942,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Or you can use gdb as usual.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1943,"byte_end":1975,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":1976,"byte_end":1998,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21}],"decl_id":null,"docs":" Commonly used traits bundled for easy import.","sig":null,"attributes":[{"value":"/ Commonly used traits bundled for easy import.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2793,"byte_end":2842,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2843,"byte_end":2846,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides an easy way to import some traits.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2847,"byte_end":2906,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2907,"byte_end":2910,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2911,"byte_end":2925,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2926,"byte_end":2929,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2930,"byte_end":2937,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use cursive::traits::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2938,"byte_end":2965,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\traits.rs","byte_start":2966,"byte_end":2973,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":5218},{"krate":0,"index":5221},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":98},{"krate":0,"index":5223},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5288},{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":5294},{"krate":0,"index":108},{"krate":0,"index":5296},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5315},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5321},{"krate":0,"index":5323},{"krate":0,"index":5337},{"krate":0,"index":5338},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5344},{"krate":0,"index":5346},{"krate":0,"index":5347},{"krate":0,"index":5350},{"krate":0,"index":110},{"krate":0,"index":5352},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5403},{"krate":0,"index":5405},{"krate":0,"index":5408},{"krate":0,"index":113},{"krate":0,"index":120},{"krate":0,"index":122}],"decl_id":null,"docs":" User-input events and their effects.","sig":null,"attributes":[{"value":"/ User-input events and their effects.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3106,"byte_end":3146,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3147,"byte_end":3150,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * Every user input the application receives is converted to an","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3151,"byte_end":3217,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/   [`Event`](./enum.Event.html).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3218,"byte_end":3253,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/ * Each event is then given to the root, and descends the view tree down to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3254,"byte_end":3332,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/   the view currently in focus, through the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3333,"byte_end":3379,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/   [`on_event`](../view/trait.View.html#method.on_event) method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3380,"byte_end":3447,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/     * If the view consumes the event, it may return a callback to be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3448,"byte_end":3520,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/       executed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3521,"byte_end":3540,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/     * Otherwise, it ignores the event, and the view parent can in turn","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3541,"byte_end":3615,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/       choose to consume it or not.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3616,"byte_end":3654,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ * If no view consumes the event, the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3655,"byte_end":3695,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/   [global callback](../struct.Cursive.html#method.add_global_callback)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3696,"byte_end":3770,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/   table is checked.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3771,"byte_end":3794,"line_start":14,"line_end":14,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5218},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4059,"byte_end":4067,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"Callback","qualname":"::event::Callback","value":"","parent":null,"children":[],"decl_id":null,"docs":" Callback is a function that can be triggered by an event.\n It has a mutable access to the cursive root.\n","sig":null,"attributes":[{"value":"/ Callback is a function that can be triggered by an event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3920,"byte_end":3981,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/ It has a mutable access to the cursive root.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":3982,"byte_end":4030,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4226,"byte_end":4231,"line_start":30,"line_end":30,"column_start":10,"column_end":15},"name":"AnyCb","qualname":"::event::AnyCb","value":"Box<FnMut(&mut dyn Any) -> () + 'a>","parent":null,"children":[],"decl_id":null,"docs":" A boxed callback that can be run on `&mut Any`.\n","sig":null,"attributes":[{"value":"/ A boxed callback that can be run on `&mut Any`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4165,"byte_end":4216,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4335,"byte_end":4347,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"EventTrigger","qualname":"::event::EventTrigger","value":"","parent":null,"children":[],"decl_id":null,"docs":" A trigger that only selects some types of events.\n","sig":null,"attributes":[{"value":"/ A trigger that only selects some types of events.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4270,"byte_end":4323,"line_start":32,"line_end":32,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4482,"byte_end":4489,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<EventTrigger>::from_fn","value":"pub fn from_fn<F>(F) -> Self where F: 'static + Fn(&Event) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Create a new `EventTrigger` using the given function as filter.\n","sig":null,"attributes":[{"value":"/ Create a new `EventTrigger` using the given function as filter.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4403,"byte_end":4470,"line_start":36,"line_end":36,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4677,"byte_end":4682,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"apply","qualname":"<EventTrigger>::apply","value":"pub fn apply(&Self, &Event) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this trigger applies to the given `Event`.\n","sig":null,"attributes":[{"value":"/ Checks if this trigger applies to the given `Event`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4609,"byte_end":4665,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4913,"byte_end":4919,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"arrows","qualname":"<EventTrigger>::arrows","value":"pub fn arrows() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EventTrigger` that only accepts arrow keys.","sig":null,"attributes":[{"value":"/ Returns an `EventTrigger` that only accepts arrow keys.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4750,"byte_end":4809,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4814,"byte_end":4817,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Only bare arrow keys without modifiers (Shift, Ctrl, Alt) will be accepted.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4822,"byte_end":4901,"line_start":51,"line_end":51,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5237,"byte_end":5242,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"mouse","qualname":"<EventTrigger>::mouse","value":"pub fn mouse() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EventTrigger` that only accepts mouse events.\n","sig":null,"attributes":[{"value":"/ Returns an `EventTrigger` that only accepts mouse events.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5164,"byte_end":5225,"line_start":62,"line_end":62,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5443,"byte_end":5446,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"any","qualname":"<EventTrigger>::any","value":"pub fn any() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EventTrigger` that accepts any event.\n","sig":null,"attributes":[{"value":"/ Returns an `EventTrigger` that accepts any event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5378,"byte_end":5431,"line_start":70,"line_end":70,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5574,"byte_end":5578,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"none","qualname":"<EventTrigger>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EventTrigger` that doesn't accept any event.\n","sig":null,"attributes":[{"value":"/ Returns an `EventTrigger` that doesn't accept any event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5502,"byte_end":5562,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5726,"byte_end":5728,"line_start":81,"line_end":81,"column_start":12,"column_end":14},"name":"or","qualname":"<EventTrigger>::or","value":"pub fn or<O>(Self, O) -> Self where O: Into<EventTrigger>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EventTrigger` that applies if either `self` or `other` applies.\n","sig":null,"attributes":[{"value":"/ Returns an `EventTrigger` that applies if either `self` or `other` applies.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5635,"byte_end":5714,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6479,"byte_end":6486,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<Callback>::from_fn","value":"pub fn from_fn<F>(F) -> Self where F: 'static + Fn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given function into a `Callback` object.\n","sig":null,"attributes":[{"value":"/ Wraps the given function into a `Callback` object.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6413,"byte_end":6467,"line_start":118,"line_end":118,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6789,"byte_end":6800,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"from_fn_mut","qualname":"<Callback>::from_fn_mut","value":"pub fn from_fn_mut<F>(F) -> Self where F: 'static + FnMut(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Wrap a `FnMut` into a `Callback` object.","sig":null,"attributes":[{"value":"/ Wrap a `FnMut` into a `Callback` object.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6650,"byte_end":6694,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6699,"byte_end":6702,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If this methods tries to call itself, nested calls will be no-ops.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6707,"byte_end":6777,"line_start":130,"line_end":130,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7132,"byte_end":7137,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"dummy","qualname":"<Callback>::dummy","value":"pub fn dummy() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a dummy callback that doesn't run anything.\n","sig":null,"attributes":[{"value":"/ Returns a dummy callback that doesn't run anything.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7065,"byte_end":7120,"line_start":144,"line_end":144,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7960,"byte_end":7967,"line_start":179,"line_end":179,"column_start":5,"column_end":12},"name":"Ignored","qualname":"::event::EventResult::Ignored","value":"EventResult::Ignored","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The event was ignored. The parent can keep handling it.\n","sig":null,"attributes":[{"value":"/ The event was ignored. The parent can keep handling it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7896,"byte_end":7955,"line_start":178,"line_end":178,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8047,"byte_end":8055,"line_start":181,"line_end":181,"column_start":5,"column_end":13},"name":"Consumed","qualname":"::event::EventResult::Consumed","value":"EventResult::Consumed(Option<Callback>)","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The event was consumed. An optionnal callback to run is attached.\n","sig":null,"attributes":[{"value":"/ The event was consumed. An optionnal callback to run is attached.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7973,"byte_end":8042,"line_start":180,"line_end":180,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7878,"byte_end":7889,"line_start":177,"line_end":177,"column_start":10,"column_end":21},"name":"EventResult","qualname":"::event::EventResult","value":"pub enum EventResult { Ignored, Consumed(Option<Callback>), }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":95}],"decl_id":null,"docs":" Answer to an event notification.\n The event can be consumed or ignored.\n","sig":null,"attributes":[{"value":"/ Answer to an event notification.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7790,"byte_end":7826,"line_start":175,"line_end":175,"column_start":1,"column_end":37}},{"value":"/ The event can be consumed or ignored.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7827,"byte_end":7868,"line_start":176,"line_end":176,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8193,"byte_end":8200,"line_start":186,"line_end":186,"column_start":12,"column_end":19},"name":"with_cb","qualname":"<EventResult>::with_cb","value":"pub fn with_cb<F>(F) -> Self where F: 'static + Fn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to create `Consumed(Some(f))`\n","sig":null,"attributes":[{"value":"/ Convenient method to create `Consumed(Some(f))`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8130,"byte_end":8181,"line_start":185,"line_end":185,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8410,"byte_end":8421,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_consumed","qualname":"<EventResult>::is_consumed","value":"pub fn is_consumed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `EventResult::Consumed`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is `EventResult::Consumed`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8342,"byte_end":8398,"line_start":193,"line_end":193,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8613,"byte_end":8625,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"has_callback","qualname":"<EventResult>::has_callback","value":"pub fn has_callback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains a callback.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains a callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8552,"byte_end":8601,"line_start":201,"line_end":201,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8858,"byte_end":8865,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"process","qualname":"<EventResult>::process","value":"pub fn process(Self, &mut Cursive)","parent":null,"children":[],"decl_id":null,"docs":" Process this result if it is a callback.","sig":null,"attributes":[{"value":"/ Process this result if it is a callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8762,"byte_end":8806,"line_start":209,"line_end":209,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8811,"byte_end":8814,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Does nothing otherwise.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8819,"byte_end":8846,"line_start":211,"line_end":211,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":9079,"byte_end":9086,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"or_else","qualname":"<EventResult>::or_else","value":"pub fn or_else<F>(Self, F) -> Self where F: FnOnce() -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` if it is not `EventResult::Ignored`, otherwise returns `f()`.\n","sig":null,"attributes":[{"value":"/ Returns `self` if it is not `EventResult::Ignored`, otherwise returns `f()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8987,"byte_end":9067,"line_start":218,"line_end":218,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":9346,"byte_end":9349,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"and","qualname":"<EventResult>::and","value":"pub fn and(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an event result that combines `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns an event result that combines `self` and `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":9273,"byte_end":9334,"line_start":229,"line_end":229,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10123,"byte_end":10128,"line_start":253,"line_end":253,"column_start":5,"column_end":10},"name":"Enter","qualname":"::event::Key::Enter","value":"Key::Enter","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Both Enter (or Return) and numpad Enter\n","sig":null,"attributes":[{"value":"/ Both Enter (or Return) and numpad Enter","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10075,"byte_end":10118,"line_start":252,"line_end":252,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10157,"byte_end":10160,"line_start":255,"line_end":255,"column_start":5,"column_end":8},"name":"Tab","qualname":"::event::Key::Tab","value":"Key::Tab","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Tabulation key\n","sig":null,"attributes":[{"value":"/ Tabulation key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10134,"byte_end":10152,"line_start":254,"line_end":254,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10188,"byte_end":10197,"line_start":257,"line_end":257,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::event::Key::Backspace","value":"Key::Backspace","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Backspace key\n","sig":null,"attributes":[{"value":"/ Backspace key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10166,"byte_end":10183,"line_start":256,"line_end":256,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10222,"byte_end":10225,"line_start":259,"line_end":259,"column_start":5,"column_end":8},"name":"Esc","qualname":"::event::Key::Esc","value":"Key::Esc","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Escape key\n","sig":null,"attributes":[{"value":"/ Escape key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10203,"byte_end":10217,"line_start":258,"line_end":258,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5232},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10251,"byte_end":10255,"line_start":262,"line_end":262,"column_start":5,"column_end":9},"name":"Left","qualname":"::event::Key::Left","value":"Key::Left","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Left arrow\n","sig":null,"attributes":[{"value":"/ Left arrow","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10232,"byte_end":10246,"line_start":261,"line_end":261,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5234},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10281,"byte_end":10286,"line_start":264,"line_end":264,"column_start":5,"column_end":10},"name":"Right","qualname":"::event::Key::Right","value":"Key::Right","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Right arrow\n","sig":null,"attributes":[{"value":"/ Right arrow","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10261,"byte_end":10276,"line_start":263,"line_end":263,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10309,"byte_end":10311,"line_start":266,"line_end":266,"column_start":5,"column_end":7},"name":"Up","qualname":"::event::Key::Up","value":"Key::Up","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Up arrow\n","sig":null,"attributes":[{"value":"/ Up arrow","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10292,"byte_end":10304,"line_start":265,"line_end":265,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10336,"byte_end":10340,"line_start":268,"line_end":268,"column_start":5,"column_end":9},"name":"Down","qualname":"::event::Key::Down","value":"Key::Down","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Down arrow\n","sig":null,"attributes":[{"value":"/ Down arrow","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10317,"byte_end":10331,"line_start":267,"line_end":267,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5240},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10366,"byte_end":10369,"line_start":271,"line_end":271,"column_start":5,"column_end":8},"name":"Ins","qualname":"::event::Key::Ins","value":"Key::Ins","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Insert key\n","sig":null,"attributes":[{"value":"/ Insert key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10347,"byte_end":10361,"line_start":270,"line_end":270,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5242},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10394,"byte_end":10397,"line_start":273,"line_end":273,"column_start":5,"column_end":8},"name":"Del","qualname":"::event::Key::Del","value":"Key::Del","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Delete key\n","sig":null,"attributes":[{"value":"/ Delete key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10375,"byte_end":10389,"line_start":272,"line_end":272,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5244},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10420,"byte_end":10424,"line_start":275,"line_end":275,"column_start":5,"column_end":9},"name":"Home","qualname":"::event::Key::Home","value":"Key::Home","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Home key\n","sig":null,"attributes":[{"value":"/ Home key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10403,"byte_end":10415,"line_start":274,"line_end":274,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5246},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10446,"byte_end":10449,"line_start":277,"line_end":277,"column_start":5,"column_end":8},"name":"End","qualname":"::event::Key::End","value":"Key::End","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" End key\n","sig":null,"attributes":[{"value":"/ End key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10430,"byte_end":10441,"line_start":276,"line_end":276,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5248},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10475,"byte_end":10481,"line_start":279,"line_end":279,"column_start":5,"column_end":11},"name":"PageUp","qualname":"::event::Key::PageUp","value":"Key::PageUp","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Page Up key\n","sig":null,"attributes":[{"value":"/ Page Up key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10455,"byte_end":10470,"line_start":278,"line_end":278,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10509,"byte_end":10517,"line_start":281,"line_end":281,"column_start":5,"column_end":13},"name":"PageDown","qualname":"::event::Key::PageDown","value":"Key::PageDown","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Page Down key\n","sig":null,"attributes":[{"value":"/ Page Down key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10487,"byte_end":10504,"line_start":280,"line_end":280,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10548,"byte_end":10558,"line_start":284,"line_end":284,"column_start":5,"column_end":15},"name":"PauseBreak","qualname":"::event::Key::PauseBreak","value":"Key::PauseBreak","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" Pause Break key\n","sig":null,"attributes":[{"value":"/ Pause Break key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10524,"byte_end":10543,"line_start":283,"line_end":283,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5254},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10634,"byte_end":10646,"line_start":287,"line_end":287,"column_start":5,"column_end":17},"name":"NumpadCenter","qualname":"::event::Key::NumpadCenter","value":"Key::NumpadCenter","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" The 5 in the center of the keypad, when numlock is disabled.\n","sig":null,"attributes":[{"value":"/ The 5 in the center of the keypad, when numlock is disabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10565,"byte_end":10629,"line_start":286,"line_end":286,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5256},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10668,"byte_end":10670,"line_start":290,"line_end":290,"column_start":5,"column_end":7},"name":"F0","qualname":"::event::Key::F0","value":"Key::F0","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F0 key\n","sig":null,"attributes":[{"value":"/ F0 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10653,"byte_end":10663,"line_start":289,"line_end":289,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5258},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10691,"byte_end":10693,"line_start":292,"line_end":292,"column_start":5,"column_end":7},"name":"F1","qualname":"::event::Key::F1","value":"Key::F1","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F1 key\n","sig":null,"attributes":[{"value":"/ F1 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10676,"byte_end":10686,"line_start":291,"line_end":291,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10714,"byte_end":10716,"line_start":294,"line_end":294,"column_start":5,"column_end":7},"name":"F2","qualname":"::event::Key::F2","value":"Key::F2","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F2 key\n","sig":null,"attributes":[{"value":"/ F2 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10699,"byte_end":10709,"line_start":293,"line_end":293,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5262},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10737,"byte_end":10739,"line_start":296,"line_end":296,"column_start":5,"column_end":7},"name":"F3","qualname":"::event::Key::F3","value":"Key::F3","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F3 key\n","sig":null,"attributes":[{"value":"/ F3 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10722,"byte_end":10732,"line_start":295,"line_end":295,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5264},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10760,"byte_end":10762,"line_start":298,"line_end":298,"column_start":5,"column_end":7},"name":"F4","qualname":"::event::Key::F4","value":"Key::F4","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F4 key\n","sig":null,"attributes":[{"value":"/ F4 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10745,"byte_end":10755,"line_start":297,"line_end":297,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5266},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10783,"byte_end":10785,"line_start":300,"line_end":300,"column_start":5,"column_end":7},"name":"F5","qualname":"::event::Key::F5","value":"Key::F5","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F5 key\n","sig":null,"attributes":[{"value":"/ F5 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10768,"byte_end":10778,"line_start":299,"line_end":299,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5268},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10806,"byte_end":10808,"line_start":302,"line_end":302,"column_start":5,"column_end":7},"name":"F6","qualname":"::event::Key::F6","value":"Key::F6","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F6 key\n","sig":null,"attributes":[{"value":"/ F6 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10791,"byte_end":10801,"line_start":301,"line_end":301,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10829,"byte_end":10831,"line_start":304,"line_end":304,"column_start":5,"column_end":7},"name":"F7","qualname":"::event::Key::F7","value":"Key::F7","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F7 key\n","sig":null,"attributes":[{"value":"/ F7 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10814,"byte_end":10824,"line_start":303,"line_end":303,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5272},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10852,"byte_end":10854,"line_start":306,"line_end":306,"column_start":5,"column_end":7},"name":"F8","qualname":"::event::Key::F8","value":"Key::F8","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F8 key\n","sig":null,"attributes":[{"value":"/ F8 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10837,"byte_end":10847,"line_start":305,"line_end":305,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5274},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10875,"byte_end":10877,"line_start":308,"line_end":308,"column_start":5,"column_end":7},"name":"F9","qualname":"::event::Key::F9","value":"Key::F9","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F9 key\n","sig":null,"attributes":[{"value":"/ F9 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10860,"byte_end":10870,"line_start":307,"line_end":307,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10899,"byte_end":10902,"line_start":310,"line_end":310,"column_start":5,"column_end":8},"name":"F10","qualname":"::event::Key::F10","value":"Key::F10","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F10 key\n","sig":null,"attributes":[{"value":"/ F10 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10883,"byte_end":10894,"line_start":309,"line_end":309,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5278},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10924,"byte_end":10927,"line_start":312,"line_end":312,"column_start":5,"column_end":8},"name":"F11","qualname":"::event::Key::F11","value":"Key::F11","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F11 key\n","sig":null,"attributes":[{"value":"/ F11 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10908,"byte_end":10919,"line_start":311,"line_end":311,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5280},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10949,"byte_end":10952,"line_start":314,"line_end":314,"column_start":5,"column_end":8},"name":"F12","qualname":"::event::Key::F12","value":"Key::F12","parent":{"krate":0,"index":5223},"children":[],"decl_id":null,"docs":" F12 key\n","sig":null,"attributes":[{"value":"/ F12 key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10933,"byte_end":10944,"line_start":313,"line_end":313,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":5223},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10065,"byte_end":10068,"line_start":251,"line_end":251,"column_start":10,"column_end":13},"name":"Key","qualname":"::event::Key","value":"pub enum Key {\n    Enter,\n    Tab,\n    Backspace,\n    Esc,\n    Left,\n    Right,\n    Up,\n    Down,\n    Ins,\n    Del,\n    Home,\n    End,\n    PageUp,\n    PageDown,\n    PauseBreak,\n    NumpadCenter,\n    F0,\n    F1,\n    F2,\n    F3,\n    F4,\n    F5,\n    F6,\n    F7,\n    F8,\n    F9,\n    F10,\n    F11,\n    F12,\n}","parent":null,"children":[{"krate":0,"index":5224},{"krate":0,"index":5226},{"krate":0,"index":5228},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5234},{"krate":0,"index":5236},{"krate":0,"index":5238},{"krate":0,"index":5240},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5246},{"krate":0,"index":5248},{"krate":0,"index":5250},{"krate":0,"index":5252},{"krate":0,"index":5254},{"krate":0,"index":5256},{"krate":0,"index":5258},{"krate":0,"index":5260},{"krate":0,"index":5262},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5268},{"krate":0,"index":5270},{"krate":0,"index":5272},{"krate":0,"index":5274},{"krate":0,"index":5276},{"krate":0,"index":5278},{"krate":0,"index":5280}],"decl_id":null,"docs":" A non-character key on the keyboard\n","sig":null,"attributes":[{"value":"/ A non-character key on the keyboard","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":9965,"byte_end":10004,"line_start":249,"line_end":249,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11141,"byte_end":11147,"line_start":325,"line_end":325,"column_start":12,"column_end":18},"name":"from_f","qualname":"<Key>::from_f","value":"pub fn from_f(u8) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Returns the function key corresponding to the given number","sig":null,"attributes":[{"value":"/ Returns the function key corresponding to the given number","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10972,"byte_end":11034,"line_start":318,"line_end":318,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11039,"byte_end":11042,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ 1 -> F1, etc...","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11047,"byte_end":11066,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11071,"byte_end":11074,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11079,"byte_end":11091,"line_start":322,"line_end":322,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11096,"byte_end":11099,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ If `n == 0 || n > 12`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11104,"byte_end":11129,"line_start":324,"line_end":324,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11772,"byte_end":11776,"line_start":349,"line_end":349,"column_start":5,"column_end":9},"name":"Left","qualname":"::event::MouseButton::Left","value":"MouseButton::Left","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" The left button, used for main actions.\n","sig":null,"attributes":[{"value":"/ The left button, used for main actions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11724,"byte_end":11767,"line_start":348,"line_end":348,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5299},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11860,"byte_end":11866,"line_start":351,"line_end":351,"column_start":5,"column_end":11},"name":"Middle","qualname":"::event::MouseButton::Middle","value":"MouseButton::Middle","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" Middle button, probably the wheel. Often pastes text in X11 on linux.\n","sig":null,"attributes":[{"value":"/ Middle button, probably the wheel. Often pastes text in X11 on linux.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11782,"byte_end":11855,"line_start":350,"line_end":350,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5301},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11919,"byte_end":11924,"line_start":353,"line_end":353,"column_start":5,"column_end":10},"name":"Right","qualname":"::event::MouseButton::Right","value":"MouseButton::Right","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" The right button, for special actions.\n","sig":null,"attributes":[{"value":"/ The right button, for special actions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11872,"byte_end":11914,"line_start":352,"line_end":352,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5303},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11979,"byte_end":11986,"line_start":356,"line_end":356,"column_start":5,"column_end":12},"name":"Button4","qualname":"::event::MouseButton::Button4","value":"MouseButton::Button4","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" Fourth button if the mouse supports it.\n","sig":null,"attributes":[{"value":"/ Fourth button if the mouse supports it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11931,"byte_end":11974,"line_start":355,"line_end":355,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5305},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12039,"byte_end":12046,"line_start":358,"line_end":358,"column_start":5,"column_end":12},"name":"Button5","qualname":"::event::MouseButton::Button5","value":"MouseButton::Button5","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" Fifth button if the mouse supports it.\n","sig":null,"attributes":[{"value":"/ Fifth button if the mouse supports it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11992,"byte_end":12034,"line_start":357,"line_end":357,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5307},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12106,"byte_end":12111,"line_start":362,"line_end":362,"column_start":5,"column_end":10},"name":"Other","qualname":"::event::MouseButton::Other","value":"MouseButton::Other","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5296},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11706,"byte_end":11717,"line_start":347,"line_end":347,"column_start":10,"column_end":21},"name":"MouseButton","qualname":"::event::MouseButton","value":"pub enum MouseButton { Left, Middle, Right, Button4, Button5, Other, }","parent":null,"children":[{"krate":0,"index":5297},{"krate":0,"index":5299},{"krate":0,"index":5301},{"krate":0,"index":5303},{"krate":0,"index":5305},{"krate":0,"index":5307}],"decl_id":null,"docs":" One of the buttons present on the mouse\n","sig":null,"attributes":[{"value":"/ One of the buttons present on the mouse","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":11602,"byte_end":11645,"line_start":345,"line_end":345,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5324},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12274,"byte_end":12279,"line_start":369,"line_end":369,"column_start":5,"column_end":10},"name":"Press","qualname":"::event::MouseEvent::Press","value":"MouseEvent::Press(MouseButton)","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" A button was pressed.\n","sig":null,"attributes":[{"value":"/ A button was pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12244,"byte_end":12269,"line_start":368,"line_end":368,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5327},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12329,"byte_end":12336,"line_start":371,"line_end":371,"column_start":5,"column_end":12},"name":"Release","qualname":"::event::MouseEvent::Release","value":"MouseEvent::Release(MouseButton)","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" A button was released.\n","sig":null,"attributes":[{"value":"/ A button was released.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12298,"byte_end":12324,"line_start":370,"line_end":370,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5330},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12387,"byte_end":12391,"line_start":373,"line_end":373,"column_start":5,"column_end":9},"name":"Hold","qualname":"::event::MouseEvent::Hold","value":"MouseEvent::Hold(MouseButton)","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" A button is being held.\n","sig":null,"attributes":[{"value":"/ A button is being held.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12355,"byte_end":12382,"line_start":372,"line_end":372,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5333},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12442,"byte_end":12449,"line_start":375,"line_end":375,"column_start":5,"column_end":12},"name":"WheelUp","qualname":"::event::MouseEvent::WheelUp","value":"MouseEvent::WheelUp","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" The wheel was moved up.\n","sig":null,"attributes":[{"value":"/ The wheel was moved up.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12410,"byte_end":12437,"line_start":374,"line_end":374,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5335},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12489,"byte_end":12498,"line_start":377,"line_end":377,"column_start":5,"column_end":14},"name":"WheelDown","qualname":"::event::MouseEvent::WheelDown","value":"MouseEvent::WheelDown","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" The wheel was moved down.\n","sig":null,"attributes":[{"value":"/ The wheel was moved down.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12455,"byte_end":12484,"line_start":376,"line_end":376,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5323},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12227,"byte_end":12237,"line_start":367,"line_end":367,"column_start":10,"column_end":20},"name":"MouseEvent","qualname":"::event::MouseEvent","value":"pub enum MouseEvent {\n    Press(MouseButton),\n    Release(MouseButton),\n    Hold(MouseButton),\n    WheelUp,\n    WheelDown,\n}","parent":null,"children":[{"krate":0,"index":5324},{"krate":0,"index":5327},{"krate":0,"index":5330},{"krate":0,"index":5333},{"krate":0,"index":5335}],"decl_id":null,"docs":" Represents a possible event sent by the mouse.\n","sig":null,"attributes":[{"value":"/ Represents a possible event sent by the mouse.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12116,"byte_end":12166,"line_start":365,"line_end":365,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12657,"byte_end":12663,"line_start":384,"line_end":384,"column_start":12,"column_end":18},"name":"button","qualname":"<MouseEvent>::button","value":"pub fn button(Self) -> Option<MouseButton>","parent":null,"children":[],"decl_id":null,"docs":" Returns the button used by this event, if any.","sig":null,"attributes":[{"value":"/ Returns the button used by this event, if any.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12525,"byte_end":12575,"line_start":381,"line_end":381,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12580,"byte_end":12583,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is `WheelUp` or `WheelDown`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12588,"byte_end":12645,"line_start":383,"line_end":383,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13023,"byte_end":13034,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"grabs_focus","qualname":"<MouseEvent>::grabs_focus","value":"pub fn grabs_focus(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an event that can grab focus.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an event that can grab focus.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12884,"byte_end":12945,"line_start":393,"line_end":393,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12950,"byte_end":12953,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ This includes `Press`, `WheelUp` and `WheelDown`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12958,"byte_end":13011,"line_start":395,"line_end":395,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5353},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13393,"byte_end":13405,"line_start":410,"line_end":410,"column_start":5,"column_end":17},"name":"WindowResize","qualname":"::event::Event::WindowResize","value":"Event::WindowResize","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" Event fired when the window is resized.\n","sig":null,"attributes":[{"value":"/ Event fired when the window is resized.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13345,"byte_end":13388,"line_start":409,"line_end":409,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5355},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13470,"byte_end":13477,"line_start":413,"line_end":413,"column_start":5,"column_end":12},"name":"Refresh","qualname":"::event::Event::Refresh","value":"Event::Refresh","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" Event fired regularly when a auto-refresh is set.\n","sig":null,"attributes":[{"value":"/ Event fired regularly when a auto-refresh is set.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13412,"byte_end":13465,"line_start":412,"line_end":412,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5357},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13623,"byte_end":13627,"line_start":417,"line_end":417,"column_start":5,"column_end":9},"name":"Char","qualname":"::event::Event::Char","value":"Event::Char(char)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A character was entered (includes numbers, punctuation, ...).\n","sig":null,"attributes":[{"value":"/ A character was entered (includes numbers, punctuation, ...).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13553,"byte_end":13618,"line_start":416,"line_end":416,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5360},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13698,"byte_end":13706,"line_start":419,"line_end":419,"column_start":5,"column_end":13},"name":"CtrlChar","qualname":"::event::Event::CtrlChar","value":"Event::CtrlChar(char)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A character was entered with the Ctrl key pressed.\n","sig":null,"attributes":[{"value":"/ A character was entered with the Ctrl key pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13639,"byte_end":13693,"line_start":418,"line_end":418,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5363},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13776,"byte_end":13783,"line_start":421,"line_end":421,"column_start":5,"column_end":12},"name":"AltChar","qualname":"::event::Event::AltChar","value":"Event::AltChar(char)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A character was entered with the Alt key pressed.\n","sig":null,"attributes":[{"value":"/ A character was entered with the Alt key pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13718,"byte_end":13771,"line_start":420,"line_end":420,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5366},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13837,"byte_end":13840,"line_start":424,"line_end":424,"column_start":5,"column_end":8},"name":"Key","qualname":"::event::Event::Key","value":"Event::Key(Key)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A non-character key was pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13796,"byte_end":13832,"line_start":423,"line_end":423,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5369},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13919,"byte_end":13924,"line_start":426,"line_end":426,"column_start":5,"column_end":10},"name":"Shift","qualname":"::event::Event::Shift","value":"Event::Shift(Key)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Shift key pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Shift key pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13851,"byte_end":13914,"line_start":425,"line_end":425,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5372},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14001,"byte_end":14004,"line_start":428,"line_end":428,"column_start":5,"column_end":8},"name":"Alt","qualname":"::event::Event::Alt","value":"Event::Alt(Key)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Alt key pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Alt key pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13935,"byte_end":13996,"line_start":427,"line_end":427,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14092,"byte_end":14100,"line_start":430,"line_end":430,"column_start":5,"column_end":13},"name":"AltShift","qualname":"::event::Event::AltShift","value":"Event::AltShift(Key)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Shift and Alt keys pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Shift and Alt keys pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14015,"byte_end":14087,"line_start":429,"line_end":429,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5378},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14178,"byte_end":14182,"line_start":432,"line_end":432,"column_start":5,"column_end":9},"name":"Ctrl","qualname":"::event::Event::Ctrl","value":"Event::Ctrl(Key)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Ctrl key pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Ctrl key pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14111,"byte_end":14173,"line_start":431,"line_end":431,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5381},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14271,"byte_end":14280,"line_start":434,"line_end":434,"column_start":5,"column_end":14},"name":"CtrlShift","qualname":"::event::Event::CtrlShift","value":"Event::CtrlShift(Key)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Ctrl and Shift keys pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Ctrl and Shift keys pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14193,"byte_end":14266,"line_start":433,"line_end":433,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5384},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14367,"byte_end":14374,"line_start":436,"line_end":436,"column_start":5,"column_end":12},"name":"CtrlAlt","qualname":"::event::Event::CtrlAlt","value":"Event::CtrlAlt(Key)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Ctrl and Alt keys pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Ctrl and Alt keys pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14291,"byte_end":14362,"line_start":435,"line_end":435,"column_start":5,"column_end":76}}]},{"kind":"StructVariant","id":{"krate":0,"index":5387},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14418,"byte_end":14423,"line_start":439,"line_end":439,"column_start":5,"column_end":10},"name":"Mouse","qualname":"::event::Event::Mouse","value":"Event::Mouse { offset, position, event }","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" A mouse event was sent.\n","sig":null,"attributes":[{"value":"/ A mouse event was sent.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14386,"byte_end":14413,"line_start":438,"line_end":438,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5391},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14791,"byte_end":14798,"line_start":450,"line_end":450,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::event::Event::Unknown","value":"Event::Unknown(Vec<u8>)","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" An unknown event was received.\n","sig":null,"attributes":[{"value":"/ An unknown event was received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":14752,"byte_end":14786,"line_start":449,"line_end":449,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5394},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15044,"byte_end":15048,"line_start":458,"line_end":458,"column_start":5,"column_end":9},"name":"Exit","qualname":"::event::Event::Exit","value":"Event::Exit","parent":{"krate":0,"index":5352},"children":[],"decl_id":null,"docs":" The application is about to exit.\n","sig":null,"attributes":[{"value":"/ The application is about to exit.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15002,"byte_end":15039,"line_start":457,"line_end":457,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":5352},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13333,"byte_end":13338,"line_start":408,"line_end":408,"column_start":10,"column_end":15},"name":"Event","qualname":"::event::Event","value":"pub enum Event {\n    WindowResize,\n    Refresh,\n    Char(char),\n    CtrlChar(char),\n    AltChar(char),\n    Key(Key),\n    Shift(Key),\n    Alt(Key),\n    AltShift(Key),\n    Ctrl(Key),\n    CtrlShift(Key),\n    CtrlAlt(Key),\n    Mouse {\n        offset: Vec2,\n        position: Vec2,\n        event: MouseEvent,\n    },\n    Unknown(Vec<u8>),\n    Exit,\n}","parent":null,"children":[{"krate":0,"index":5353},{"krate":0,"index":5355},{"krate":0,"index":5357},{"krate":0,"index":5360},{"krate":0,"index":5363},{"krate":0,"index":5366},{"krate":0,"index":5369},{"krate":0,"index":5372},{"krate":0,"index":5375},{"krate":0,"index":5378},{"krate":0,"index":5381},{"krate":0,"index":5384},{"krate":0,"index":5387},{"krate":0,"index":5391},{"krate":0,"index":5394}],"decl_id":null,"docs":" Represents an event as seen by the application.\n","sig":null,"attributes":[{"value":"/ Represents an event as seen by the application.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":13227,"byte_end":13278,"line_start":406,"line_end":406,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15148,"byte_end":15162,"line_start":463,"line_end":463,"column_start":12,"column_end":26},"name":"mouse_position","qualname":"<Event>::mouse_position","value":"pub fn mouse_position(&Self) -> Option<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the mouse, if `self` is a mouse event.\n","sig":null,"attributes":[{"value":"/ Returns the position of the mouse, if `self` is a mouse event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15070,"byte_end":15136,"line_start":462,"line_end":462,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15461,"byte_end":15479,"line_start":474,"line_end":474,"column_start":12,"column_end":30},"name":"mouse_position_mut","qualname":"<Event>::mouse_position_mut","value":"pub fn mouse_position_mut(&mut Self) -> Option<&mut Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the position of the mouse/","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the position of the mouse/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15325,"byte_end":15386,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15391,"byte_end":15394,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not a mouse event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15399,"byte_end":15449,"line_start":473,"line_end":473,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15845,"byte_end":15855,"line_start":489,"line_end":489,"column_start":12,"column_end":22},"name":"relativize","qualname":"<Event>::relativize","value":"pub fn relativize<V>(&mut Self, V) where V: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Update `self` with the given offset.","sig":null,"attributes":[{"value":"/ Update `self` with the given offset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15687,"byte_end":15727,"line_start":485,"line_end":485,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15732,"byte_end":15735,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ If `self` is a mouse event, adds `top_left` to its offset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15740,"byte_end":15802,"line_start":487,"line_end":487,"column_start":5,"column_end":67}},{"value":"/ Otherwise, do nothing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15807,"byte_end":15833,"line_start":488,"line_end":488,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16216,"byte_end":16227,"line_start":502,"line_end":502,"column_start":12,"column_end":23},"name":"relativized","qualname":"<Event>::relativized","value":"pub fn relativized<V>(&Self, V) -> Self where V: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cloned, relativized event.","sig":null,"attributes":[{"value":"/ Returns a cloned, relativized event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16046,"byte_end":16086,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16091,"byte_end":16094,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ If `self` is a mouse event, adds `top_left` to its offset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16099,"byte_end":16161,"line_start":500,"line_end":500,"column_start":5,"column_end":67}},{"value":"/ Otherwise, returns a simple clone.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16166,"byte_end":16204,"line_start":501,"line_end":501,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"view","qualname":"::view","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":200},{"krate":0,"index":223},{"krate":0,"index":272},{"krate":0,"index":318},{"krate":0,"index":341},{"krate":0,"index":354},{"krate":0,"index":361},{"krate":0,"index":373},{"krate":0,"index":417},{"krate":0,"index":450},{"krate":0,"index":462},{"krate":0,"index":706},{"krate":0,"index":750},{"krate":0,"index":761},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822}],"decl_id":null,"docs":" Base elements required to build views.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2299,"byte_end":2311,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/ Base elements required to build views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16579,"byte_end":16621,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16622,"byte_end":16625,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Views are the main building blocks of your UI.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16626,"byte_end":16676,"line_start":3,"line_end":3,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16677,"byte_end":16680,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A view can delegate part or all of its responsabilities to child views,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16681,"byte_end":16756,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ forming a view tree. The root of this tree is a `StackView` handled","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16757,"byte_end":16828,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ directly by the `Cursive` element.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16829,"byte_end":16867,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16868,"byte_end":16871,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Layout","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16872,"byte_end":16884,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16885,"byte_end":16888,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The layout phase is when the size and location of each view is computed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16889,"byte_end":16965,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16966,"byte_end":16969,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Each view is given an area of the screen by the `View::layout()` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":16970,"byte_end":17046,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ With this, the view is free to plan its content, including calling","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17047,"byte_end":17117,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ `View::layout()` on its own children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17118,"byte_end":17159,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17160,"byte_end":17163,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ In order to determine how much space should be given each child, parents","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17164,"byte_end":17240,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ can use `View::required_size()` on them.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17241,"byte_end":17285,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17286,"byte_end":17289,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17290,"byte_end":17293,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ### Contracts","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17294,"byte_end":17311,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17312,"byte_end":17315,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When building new Views, you should respect these contracts:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17316,"byte_end":17380,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17381,"byte_end":17384,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * By default, `View::layout()` should be called before any call to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17385,"byte_end":17455,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/   `View::draw()` with the same available size. The only exceptions is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17456,"byte_end":17529,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   when both following conditions are met:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17530,"byte_end":17575,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/     * The available size has not changed since the last call to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17576,"byte_end":17643,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/       `View::layout()`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17644,"byte_end":17670,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/     * `View::needs_relayout()` returns `false`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17671,"byte_end":17721,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17722,"byte_end":17725,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/   In this case, it is safe to omit the call to `View::layout()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17726,"byte_end":17794,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17795,"byte_end":17798,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ * The value returned by `required_size` should be an actually viable size,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17799,"byte_end":17877,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   no matter what the request is. This means calling `View::layout()` with","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17878,"byte_end":17955,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/   a size returned by `required_size` is **never** an error.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\mod.rs","byte_start":17956,"byte_end":18019,"line_start":36,"line_end":36,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19754,"byte_end":19765,"line_start":23,"line_end":23,"column_start":11,"column_end":22},"name":"ViewWrapper","qualname":"::view::view_wrapper::ViewWrapper","value":"ViewWrapper: 'static","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" Generic wrapper around a view.","sig":null,"attributes":[{"value":"/ Generic wrapper around a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19210,"byte_end":19244,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19245,"byte_end":19248,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait is a shortcut to implement `View` on a type by forwarding","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19249,"byte_end":19321,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ calls to a wrapped view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19322,"byte_end":19350,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19351,"byte_end":19354,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ You only need to define `with_view` and `with_view_mut`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19355,"byte_end":19414,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/ (the [`wrap_impl!`] macro can help you with that), and you will get","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19415,"byte_end":19486,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ the `View` implementation for free.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19487,"byte_end":19526,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19527,"byte_end":19530,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You can also override any of the `wrap_*` methods for more specific","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19531,"byte_end":19602,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ behaviors (the default implementations simply forwards the calls to the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19603,"byte_end":19678,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ child view).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19679,"byte_end":19695,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19696,"byte_end":19699,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`wrap_impl!`]: ../macro.wrap_impl.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19700,"byte_end":19743,"line_start":22,"line_end":22,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19821,"byte_end":19822,"line_start":25,"line_end":25,"column_start":10,"column_end":11},"name":"V","qualname":"::view::view_wrapper::ViewWrapper::V","value":"type V: View + ?Sized;","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Type that this view wraps.\n","sig":null,"attributes":[{"value":"/ Type that this view wraps.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19781,"byte_end":19811,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20072,"byte_end":20081,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"with_view","qualname":"::view::view_wrapper::ViewWrapper::with_view","value":"pub fn with_view<F, R>(&Self, F) -> Option<R> where F: FnOnce(&Self::V) -> R","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Runs a function on the inner view, returning the result.","sig":null,"attributes":[{"value":"/ Runs a function on the inner view, returning the result.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19844,"byte_end":19904,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19909,"byte_end":19912,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the inner view is unavailable.  This should only","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19917,"byte_end":19987,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ happen with some views if they are already borrowed by another call.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":19992,"byte_end":20064,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20391,"byte_end":20404,"line_start":39,"line_end":39,"column_start":8,"column_end":21},"name":"with_view_mut","qualname":"::view::view_wrapper::ViewWrapper::with_view_mut","value":"pub fn with_view_mut<F, R>(&mut Self, F) -> Option<R> where\nF: FnOnce(&mut Self::V) -> R","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Runs a function on the inner view, returning the result.","sig":null,"attributes":[{"value":"/ Runs a function on the inner view, returning the result.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20163,"byte_end":20223,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20228,"byte_end":20231,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the inner view is unavailable.  This should only","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20236,"byte_end":20306,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/ happen with some views if they are already borrowed by another call.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20311,"byte_end":20383,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20542,"byte_end":20552,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::view::view_wrapper::ViewWrapper::into_inner","value":"pub fn into_inner(Self) -> Result<Self::V, Self> where Self: Sized,\nSelf::V: Sized","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Attempts to retrieve the inner view.\n","sig":null,"attributes":[{"value":"/ Attempts to retrieve the inner view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20494,"byte_end":20534,"line_start":43,"line_end":43,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20710,"byte_end":20719,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"wrap_draw","qualname":"::view::view_wrapper::ViewWrapper::wrap_draw","value":"pub fn wrap_draw(&Self, &Printer)","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `draw` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `draw` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20674,"byte_end":20702,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20857,"byte_end":20875,"line_start":58,"line_end":58,"column_start":8,"column_end":26},"name":"wrap_required_size","qualname":"::view::view_wrapper::ViewWrapper::wrap_required_size","value":"pub fn wrap_required_size(&mut Self, Vec2) -> Vec2","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `required_size` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `required_size` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":20812,"byte_end":20849,"line_start":57,"line_end":57,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21052,"byte_end":21065,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"wrap_on_event","qualname":"::view::view_wrapper::ViewWrapper::wrap_on_event","value":"pub fn wrap_on_event(&mut Self, Event) -> EventResult","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `on_event` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `on_event` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21012,"byte_end":21044,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21246,"byte_end":21257,"line_start":70,"line_end":70,"column_start":8,"column_end":19},"name":"wrap_layout","qualname":"::view::view_wrapper::ViewWrapper::wrap_layout","value":"pub fn wrap_layout(&mut Self, Vec2)","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `layout` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `layout` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21208,"byte_end":21238,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21384,"byte_end":21399,"line_start":75,"line_end":75,"column_start":8,"column_end":23},"name":"wrap_take_focus","qualname":"::view::view_wrapper::ViewWrapper::wrap_take_focus","value":"pub fn wrap_take_focus(&mut Self, Direction) -> bool","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `take_focus` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `take_focus` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21342,"byte_end":21376,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21570,"byte_end":21586,"line_start":81,"line_end":81,"column_start":8,"column_end":24},"name":"wrap_call_on_any","qualname":"::view::view_wrapper::ViewWrapper::wrap_call_on_any","value":"pub fn wrap_call_on_any<'a>(&mut Self, &Selector, AnyCb)","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `find` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `find` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21534,"byte_end":21562,"line_start":80,"line_end":80,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21785,"byte_end":21800,"line_start":88,"line_end":88,"column_start":8,"column_end":23},"name":"wrap_focus_view","qualname":"::view::view_wrapper::ViewWrapper::wrap_focus_view","value":"pub fn wrap_focus_view(&mut Self, &Selector) -> Result<(), ()>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `focus_view` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `focus_view` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21743,"byte_end":21777,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":22001,"byte_end":22020,"line_start":94,"line_end":94,"column_start":8,"column_end":27},"name":"wrap_needs_relayout","qualname":"::view::view_wrapper::ViewWrapper::wrap_needs_relayout","value":"pub fn wrap_needs_relayout(&Self) -> bool","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `needs_relayout` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `needs_relayout` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":21955,"byte_end":21993,"line_start":93,"line_end":93,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":22156,"byte_end":22175,"line_start":99,"line_end":99,"column_start":8,"column_end":27},"name":"wrap_important_area","qualname":"::view::view_wrapper::ViewWrapper::wrap_important_area","value":"pub fn wrap_important_area(&Self, Vec2) -> Rect","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Wraps the `important_area` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `important_area` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":22110,"byte_end":22148,"line_start":98,"line_end":98,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25546,"byte_end":25553,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"name":"AnyView","qualname":"::view::any::AnyView","value":"AnyView","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" A view that can be downcasted to its concrete type.","sig":null,"attributes":[{"value":"/ A view that can be downcasted to its concrete type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25413,"byte_end":25468,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25469,"byte_end":25472,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented for any `T: View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25473,"byte_end":25535,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25597,"byte_end":25603,"line_start":9,"line_end":9,"column_start":8,"column_end":14},"name":"as_any","qualname":"::view::any::AnyView::as_any","value":"pub fn as_any(&Self) -> &dyn Any","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Downcast self to a `Any`.\n","sig":null,"attributes":[{"value":"/ Downcast self to a `Any`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25560,"byte_end":25589,"line_start":8,"line_end":8,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25674,"byte_end":25684,"line_start":12,"line_end":12,"column_start":8,"column_end":18},"name":"as_any_mut","qualname":"::view::any::AnyView::as_any_mut","value":"pub fn as_any_mut(&mut Self) -> &mut dyn Any","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Downcast self to a mutable `Any`.\n","sig":null,"attributes":[{"value":"/ Downcast self to a mutable `Any`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25629,"byte_end":25666,"line_start":11,"line_end":11,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26134,"byte_end":26146,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"as_boxed_any","qualname":"::view::any::AnyView::as_boxed_any","value":"pub fn as_boxed_any(Box<Self>) -> Box<dyn Any>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Returns a boxed any from a boxed self.","sig":null,"attributes":[{"value":"/ Returns a boxed any from a boxed self.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25718,"byte_end":25760,"line_start":14,"line_end":14,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25765,"byte_end":25768,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Can be used before `Box::downcast()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25773,"byte_end":25814,"line_start":16,"line_end":16,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25819,"byte_end":25822,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25827,"byte_end":25841,"line_start":18,"line_end":18,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25846,"byte_end":25849,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25854,"byte_end":25865,"line_start":20,"line_end":20,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::TextView;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25870,"byte_end":25905,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"/ # use cursive::view::View;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25910,"byte_end":25940,"line_start":22,"line_end":22,"column_start":5,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25945,"byte_end":25962,"line_start":23,"line_end":23,"column_start":5,"column_end":22}},{"value":"/ let boxed: Box<View> = Box::new(TextView::new(\"text\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":25967,"byte_end":26026,"line_start":24,"line_end":24,"column_start":5,"column_end":64}},{"value":"/ let text: Box<TextView> = boxed.as_boxed_any().downcast().unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26031,"byte_end":26102,"line_start":25,"line_end":25,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26107,"byte_end":26114,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26119,"byte_end":26126,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26575,"byte_end":26587,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<dyn AnyView>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to downcast `self` to a concrete type.\n","sig":null,"attributes":[{"value":"/ Attempts to downcast `self` to a concrete type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26512,"byte_end":26563,"line_start":48,"line_end":48,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26730,"byte_end":26742,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"name":"downcast_mut","qualname":"<dyn AnyView>::downcast_mut","value":"pub fn downcast_mut<T: Any>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to downcast `self` to a concrete type.\n","sig":null,"attributes":[{"value":"/ Attempts to downcast `self` to a concrete type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26667,"byte_end":26718,"line_start":53,"line_end":53,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26902,"byte_end":26910,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"downcast","qualname":"<dyn AnyView>::downcast","value":"pub fn downcast<T: Any>(Box<Self>) -> Result<Box<T>, Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to downcast `Box<Self>` to a concrete type.\n","sig":null,"attributes":[{"value":"/ Attempts to downcast `Box<Self>` to a concrete type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26834,"byte_end":26890,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27587,"byte_end":27593,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Finder","qualname":"::view::finder::Finder","value":"Finder","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253}],"decl_id":null,"docs":" Provides `call_on<V: View>` to views.","sig":null,"attributes":[{"value":"/ Provides `call_on<V: View>` to views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27321,"byte_end":27362,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27363,"byte_end":27366,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This trait is mostly a wrapper around [`View::call_on_any`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27367,"byte_end":27431,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27432,"byte_end":27435,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ It provides a nicer interface to find a view when you know its type.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27436,"byte_end":27508,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27509,"byte_end":27512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`View::call_on_any`]: ./trait.View.html#method.call_on_any","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27513,"byte_end":27576,"line_start":11,"line_end":11,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27835,"byte_end":27842,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"call_on","qualname":"::view::finder::Finder::call_on","value":"pub fn call_on<V, F, R>(&mut Self, &Selector, F) -> Option<R> where V: View +\nAny, F: FnOnce(&mut V) -> R","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Runs a callback on the view identified by `sel`.","sig":null,"attributes":[{"value":"/ Runs a callback on the view identified by `sel`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27600,"byte_end":27652,"line_start":13,"line_end":13,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27657,"byte_end":27660,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ If the view is found, return the result of `callback`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27665,"byte_end":27723,"line_start":15,"line_end":15,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27728,"byte_end":27731,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If the view is not found, or if it is not of the asked type,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27736,"byte_end":27800,"line_start":17,"line_end":17,"column_start":5,"column_end":69}},{"value":"/ it returns `None`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27805,"byte_end":27827,"line_start":18,"line_end":18,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":28069,"byte_end":28079,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"call_on_id","qualname":"::view::finder::Finder::call_on_id","value":"pub fn call_on_id<V, F, R>(&mut Self, &str, F) -> Option<R> where V: View +\nAny, F: FnOnce(&mut V) -> R","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Convenient method to use `call_on` with a `view::Selector::Id`.\n","sig":null,"attributes":[{"value":"/ Convenient method to use `call_on` with a `view::Selector::Id`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":27994,"byte_end":28061,"line_start":26,"line_end":26,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":28391,"byte_end":28398,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"find_id","qualname":"::view::finder::Finder::find_id","value":"pub fn find_id<V>(&mut Self, &str) -> Option<ViewRef<V>> where V: View + Any","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Convenient method to find a view wrapped in an [`IdView`].","sig":null,"attributes":[{"value":"/ Convenient method to find a view wrapped in an [`IdView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":28268,"byte_end":28330,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":28335,"byte_end":28338,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`IdView`]: views/struct.IdView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":28343,"byte_end":28383,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":29597,"byte_end":29599,"line_start":80,"line_end":80,"column_start":5,"column_end":7},"name":"Id","qualname":"::view::finder::Selector::Id","value":"Selector::Id(&'a str)","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Selects a view from its ID.\n","sig":null,"attributes":[{"value":"/ Selects a view from its ID.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":29561,"byte_end":29592,"line_start":79,"line_end":79,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":29652,"byte_end":29656,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Path","qualname":"::view::finder::Selector::Path","value":"Selector::Path(&'a ViewPath)","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Selects a view from its path.\n","sig":null,"attributes":[{"value":"/ Selects a view from its path.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":29614,"byte_end":29647,"line_start":81,"line_end":81,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":29542,"byte_end":29550,"line_start":78,"line_end":78,"column_start":10,"column_end":18},"name":"Selector","qualname":"::view::finder::Selector","value":"pub enum Selector<'a> { Id(&'a str), Path(&'a ViewPath), }","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":269}],"decl_id":null,"docs":" Selects a single view (if any) in the tree.\n","sig":null,"attributes":[{"value":"/ Selects a single view (if any) in the tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":29485,"byte_end":29532,"line_start":77,"line_end":77,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29813,"byte_end":29820,"line_start":6,"line_end":6,"column_start":12,"column_end":19},"name":"Margins","qualname":"::view::margins::Margins","value":"Margins { left, right, top, bottom }","parent":null,"children":[{"krate":0,"index":5411},{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414}],"decl_id":null,"docs":" Four values representing each direction.\n","sig":null,"attributes":[{"value":"/ Four values representing each direction.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29734,"byte_end":29778,"line_start":4,"line_end":4,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29851,"byte_end":29855,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"left","qualname":"::view::margins::Margins::left","value":"usize","parent":{"krate":0,"index":5410},"children":[],"decl_id":null,"docs":" Left margin\n","sig":null,"attributes":[{"value":"/ Left margin","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29827,"byte_end":29842,"line_start":7,"line_end":7,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5412},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29893,"byte_end":29898,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"right","qualname":"::view::margins::Margins::right","value":"usize","parent":{"krate":0,"index":5410},"children":[],"decl_id":null,"docs":" Right margin\n","sig":null,"attributes":[{"value":"/ Right margin","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29868,"byte_end":29884,"line_start":9,"line_end":9,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29934,"byte_end":29937,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"top","qualname":"::view::margins::Margins::top","value":"usize","parent":{"krate":0,"index":5410},"children":[],"decl_id":null,"docs":" Top margin\n","sig":null,"attributes":[{"value":"/ Top margin","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29911,"byte_end":29925,"line_start":11,"line_end":11,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":5414},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29976,"byte_end":29982,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"bottom","qualname":"::view::margins::Margins::bottom","value":"usize","parent":{"krate":0,"index":5410},"children":[],"decl_id":null,"docs":" Bottom margin\n","sig":null,"attributes":[{"value":"/ Bottom margin","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29950,"byte_end":29967,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30051,"byte_end":30054,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Margins>::new","value":"pub fn new(usize, usize, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Margins.\n","sig":null,"attributes":[{"value":"/ Creates a new Margins.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30013,"byte_end":30039,"line_start":18,"line_end":18,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30269,"byte_end":30279,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Margins>::horizontal","value":"pub fn horizontal(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns left + right.\n","sig":null,"attributes":[{"value":"/ Returns left + right.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30232,"byte_end":30257,"line_start":28,"line_end":28,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30377,"byte_end":30385,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Margins>::vertical","value":"pub fn vertical(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns top + bottom.\n","sig":null,"attributes":[{"value":"/ Returns top + bottom.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30340,"byte_end":30365,"line_start":33,"line_end":33,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30495,"byte_end":30503,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"combined","qualname":"<Margins>::combined","value":"pub fn combined(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns (left+right, top+bottom).\n","sig":null,"attributes":[{"value":"/ Returns (left+right, top+bottom).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30446,"byte_end":30483,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30622,"byte_end":30630,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"top_left","qualname":"<Margins>::top_left","value":"pub fn top_left(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns (left, top).\n","sig":null,"attributes":[{"value":"/ Returns (left, top).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30586,"byte_end":30610,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30738,"byte_end":30747,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"bot_right","qualname":"<Margins>::bot_right","value":"pub fn bot_right(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns (right, bottom).\n","sig":null,"attributes":[{"value":"/ Returns (right, bottom).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30698,"byte_end":30726,"line_start":48,"line_end":48,"column_start":5,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33015,"byte_end":33023,"line_start":6,"line_end":6,"column_start":10,"column_end":18},"name":"Position","qualname":"::view::position::Position","value":"XY<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Location of the view on screen\n","sig":null,"attributes":[{"value":"/ Location of the view on screen","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":32971,"byte_end":33005,"line_start":5,"line_end":5,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33116,"byte_end":33122,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"center","qualname":"<Position>::center","value":"pub fn center() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a position centered on both axis.\n","sig":null,"attributes":[{"value":"/ Returns a position centered on both axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33059,"byte_end":33104,"line_start":9,"line_end":9,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33257,"byte_end":33265,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"absolute","qualname":"<Position>::absolute","value":"pub fn absolute<T: Into<Vec2>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a position absolute on both axis.\n","sig":null,"attributes":[{"value":"/ Returns a position absolute on both axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33200,"byte_end":33245,"line_start":14,"line_end":14,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33498,"byte_end":33504,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"parent","qualname":"<Position>::parent","value":"pub fn parent<T: Into<XY<isize>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a position relative to the parent on both axis.\n","sig":null,"attributes":[{"value":"/ Returns a position relative to the parent on both axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33427,"byte_end":33486,"line_start":20,"line_end":20,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33989,"byte_end":34003,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"compute_offset","qualname":"<Position>::compute_offset","value":"pub fn compute_offset<S, A, P>(&Self, S, A, P) -> Vec2 where S: Into<Vec2>,\nA: Into<Vec2>, P: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the offset required to draw a view.","sig":null,"attributes":[{"value":"/ Computes the offset required to draw a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33667,"byte_end":33715,"line_start":26,"line_end":26,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33720,"byte_end":33723,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ When drawing a view with `size` in a container with `available`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33728,"byte_end":33796,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ and a parent with the absolute coordinates `parent`, drawing the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33801,"byte_end":33869,"line_start":29,"line_end":29,"column_start":5,"column_end":73}},{"value":"/ child with its top-left corner at the returned coordinates will","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33874,"byte_end":33941,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ position him appropriately.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33946,"byte_end":33977,"line_start":31,"line_end":31,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5419},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34574,"byte_end":34580,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Center","qualname":"::view::position::Offset::Center","value":"Offset::Center","parent":{"krate":0,"index":5418},"children":[],"decl_id":null,"docs":" In the center of the screen\n","sig":null,"attributes":[{"value":"/ In the center of the screen","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34538,"byte_end":34569,"line_start":54,"line_end":54,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34650,"byte_end":34658,"line_start":57,"line_end":57,"column_start":5,"column_end":13},"name":"Absolute","qualname":"::view::position::Offset::Absolute","value":"Offset::Absolute(usize)","parent":{"krate":0,"index":5418},"children":[],"decl_id":null,"docs":" Place top-left corner at the given absolute coordinates\n","sig":null,"attributes":[{"value":"/ Place top-left corner at the given absolute coordinates","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34586,"byte_end":34645,"line_start":56,"line_end":56,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5424},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34799,"byte_end":34805,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"Parent","qualname":"::view::position::Offset::Parent","value":"Offset::Parent(isize)","parent":{"krate":0,"index":5418},"children":[],"decl_id":null,"docs":" Offset from the previous layer's top-left corner.","sig":null,"attributes":[{"value":"/ Offset from the previous layer's top-left corner.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34672,"byte_end":34725,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34730,"byte_end":34733,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If this is the first layer, behaves like `Absolute`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34738,"byte_end":34794,"line_start":61,"line_end":61,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":5418},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34525,"byte_end":34531,"line_start":53,"line_end":53,"column_start":10,"column_end":16},"name":"Offset","qualname":"::view::position::Offset","value":"pub enum Offset { Center, Absolute(usize), Parent(isize), }","parent":null,"children":[{"krate":0,"index":5419},{"krate":0,"index":5421},{"krate":0,"index":5424}],"decl_id":null,"docs":" Single-dimensional offset policy.\n","sig":null,"attributes":[{"value":"/ Single-dimensional offset policy.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34443,"byte_end":34480,"line_start":51,"line_end":51,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34909,"byte_end":34923,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"compute_offset","qualname":"<Offset>::compute_offset","value":"pub fn compute_offset(&Self, usize, usize, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes a single-dimension offset requred to draw a view.\n","sig":null,"attributes":[{"value":"/ Computes a single-dimension offset requred to draw a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34835,"byte_end":34897,"line_start":66,"line_end":66,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36253,"byte_end":36262,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SizeCache","qualname":"::view::size_cache::SizeCache","value":"SizeCache { value, constrained }","parent":null,"children":[{"krate":0,"index":5436},{"krate":0,"index":5437}],"decl_id":null,"docs":" Cache around a one-dimensional layout result.","sig":null,"attributes":[{"value":"/ Cache around a one-dimensional layout result.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36067,"byte_end":36116,"line_start":4,"line_end":4,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36117,"byte_end":36120,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is not a View, but something to help you if you create your own Views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36121,"byte_end":36200,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5436},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36294,"byte_end":36299,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"value","qualname":"::view::size_cache::SizeCache::value","value":"usize","parent":{"krate":0,"index":5435},"children":[],"decl_id":null,"docs":" Cached value\n","sig":null,"attributes":[{"value":"/ Cached value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36269,"byte_end":36285,"line_start":9,"line_end":9,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5437},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36470,"byte_end":36481,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"name":"constrained","qualname":"::view::size_cache::SizeCache::constrained","value":"bool","parent":{"krate":0,"index":5435},"children":[],"decl_id":null,"docs":" `true` if the last size was constrained.","sig":null,"attributes":[{"value":"/ `true` if the last size was constrained.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36312,"byte_end":36356,"line_start":11,"line_end":11,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36361,"byte_end":36364,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If unconstrained, any request larger than this value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36369,"byte_end":36425,"line_start":13,"line_end":13,"column_start":5,"column_end":61}},{"value":"/ would return the same size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36430,"byte_end":36461,"line_start":14,"line_end":14,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36554,"byte_end":36557,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<SizeCache>::new","value":"pub fn new(usize, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sized cache\n","sig":null,"attributes":[{"value":"/ Creates a new sized cache","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36513,"byte_end":36542,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36733,"byte_end":36739,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"accept","qualname":"<SizeCache>::accept","value":"pub fn accept(Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is still valid for the given `request`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is still valid for the given `request`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36653,"byte_end":36721,"line_start":24,"line_end":24,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36998,"byte_end":37003,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"value","qualname":"<SizeCache>::value","value":"pub fn value(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the value in the cache.\n","sig":null,"attributes":[{"value":"/ Returns the value in the cache.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36951,"byte_end":36986,"line_start":35,"line_end":35,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37541,"byte_end":37546,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"build","qualname":"<SizeCache>::build","value":"pub fn build(Vec2, Vec2) -> XY<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bi-dimensional cache.","sig":null,"attributes":[{"value":"/ Creates a new bi-dimensional cache.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37051,"byte_end":37090,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37095,"byte_end":37098,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ It will stay valid for the same request, and compatible ones.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37103,"byte_end":37168,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37173,"byte_end":37176,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ A compatible request is one where, for each axis, either:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37181,"byte_end":37242,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37247,"byte_end":37250,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ * the request is equal to the cached size, or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37255,"byte_end":37304,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/ * the request is larger than the cached size and the cache is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37309,"byte_end":37374,"line_start":47,"line_end":47,"column_start":5,"column_end":70}},{"value":"/   unconstrained","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37379,"byte_end":37398,"line_start":48,"line_end":48,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37403,"byte_end":37406,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Notes:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37411,"byte_end":37421,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37426,"byte_end":37429,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ * `size` must fit inside `req`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37434,"byte_end":37469,"line_start":52,"line_end":52,"column_start":5,"column_end":40}},{"value":"/ * for each dimension, `constrained = (size == req)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":37474,"byte_end":37529,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5448},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37975,"byte_end":37979,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Free","qualname":"::view::size_constraint::SizeConstraint::Free","value":"SizeConstraint::Free","parent":{"krate":0,"index":5447},"children":[],"decl_id":null,"docs":" No constraint imposed, the child view's response is used.\n","sig":null,"attributes":[{"value":"/ No constraint imposed, the child view's response is used.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37909,"byte_end":37970,"line_start":10,"line_end":10,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5450},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38060,"byte_end":38064,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Full","qualname":"::view::size_constraint::SizeConstraint::Full","value":"SizeConstraint::Full","parent":{"krate":0,"index":5447},"children":[],"decl_id":null,"docs":" Tries to take all available space, no matter what the child needs.\n","sig":null,"attributes":[{"value":"/ Tries to take all available space, no matter what the child needs.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37985,"byte_end":38055,"line_start":12,"line_end":12,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5452},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38143,"byte_end":38148,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::view::size_constraint::SizeConstraint::Fixed","value":"SizeConstraint::Fixed(usize)","parent":{"krate":0,"index":5447},"children":[],"decl_id":null,"docs":" Always return the included size, no matter what the child needs.\n","sig":null,"attributes":[{"value":"/ Always return the included size, no matter what the child needs.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38070,"byte_end":38138,"line_start":14,"line_end":14,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5455},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38238,"byte_end":38244,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"AtMost","qualname":"::view::size_constraint::SizeConstraint::AtMost","value":"SizeConstraint::AtMost(usize)","parent":{"krate":0,"index":5447},"children":[],"decl_id":null,"docs":" Returns the minimum of the included value and the child view's size.\n","sig":null,"attributes":[{"value":"/ Returns the minimum of the included value and the child view's size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38161,"byte_end":38233,"line_start":16,"line_end":16,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5458},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38334,"byte_end":38341,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"AtLeast","qualname":"::view::size_constraint::SizeConstraint::AtLeast","value":"SizeConstraint::AtLeast(usize)","parent":{"krate":0,"index":5447},"children":[],"decl_id":null,"docs":" Returns the maximum of the included value and the child view's size.\n","sig":null,"attributes":[{"value":"/ Returns the maximum of the included value and the child view's size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38257,"byte_end":38329,"line_start":18,"line_end":18,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":5447},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37888,"byte_end":37902,"line_start":9,"line_end":9,"column_start":10,"column_end":24},"name":"SizeConstraint","qualname":"::view::size_constraint::SizeConstraint","value":"pub enum SizeConstraint {\n    Free,\n    Full,\n    Fixed(usize),\n    AtMost(usize),\n    AtLeast(usize),\n}","parent":null,"children":[{"krate":0,"index":5448},{"krate":0,"index":5450},{"krate":0,"index":5452},{"krate":0,"index":5455},{"krate":0,"index":5458}],"decl_id":null,"docs":" Single-dimensional constraint on a view size.","sig":null,"attributes":[{"value":"/ Single-dimensional constraint on a view size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37686,"byte_end":37735,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37736,"byte_end":37739,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This describes a possible behaviour for a [`BoxView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37740,"byte_end":37798,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37799,"byte_end":37802,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`BoxView`]: ../views/struct.BoxView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":37803,"byte_end":37848,"line_start":7,"line_end":7,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38499,"byte_end":38508,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"available","qualname":"<SizeConstraint>::available","value":"pub fn available(Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size to be given to the child.","sig":null,"attributes":[{"value":"/ Returns the size to be given to the child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38379,"byte_end":38425,"line_start":23,"line_end":23,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38430,"byte_end":38433,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ When `available` is offered to the `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38438,"byte_end":38487,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":39024,"byte_end":39030,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"result","qualname":"<SizeConstraint>::result","value":"pub fn result(Self, (usize, usize)) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size the child view should actually use.","sig":null,"attributes":[{"value":"/ Returns the size the child view should actually use.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38907,"byte_end":38963,"line_start":38,"line_end":38,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38968,"byte_end":38971,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ When it said it wanted `result`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38976,"byte_end":39012,"line_start":40,"line_end":40,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39454,"byte_end":39462,"line_start":2,"line_end":2,"column_start":12,"column_end":20},"name":"ViewPath","qualname":"::view::view_path::ViewPath","value":"ViewPath { path }","parent":null,"children":[{"krate":0,"index":363}],"decl_id":null,"docs":" Represents a path to a single view in the layout.\n","sig":null,"attributes":[{"value":"/ Represents a path to a single view in the layout.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39389,"byte_end":39442,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39609,"byte_end":39613,"line_start":5,"line_end":5,"column_start":9,"column_end":13},"name":"path","qualname":"::view::view_path::ViewPath::path","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" List of turns to make on decision nodes when descending the view tree.\n Simple nodes (with one fixed child) are skipped.\n","sig":null,"attributes":[{"value":"/ List of turns to make on decision nodes when descending the view tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39469,"byte_end":39543,"line_start":3,"line_end":3,"column_start":5,"column_end":79}},{"value":"/ Simple nodes (with one fixed child) are skipped.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39548,"byte_end":39600,"line_start":4,"line_end":4,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39716,"byte_end":39719,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<ViewPath>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty path.\n","sig":null,"attributes":[{"value":"/ Creates a new empty path.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39675,"byte_end":39704,"line_start":11,"line_end":11,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39832,"byte_end":39836,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"from","qualname":"<ViewPath>::from","value":"pub fn from<T: ToPath>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a path from the given item.\n","sig":null,"attributes":[{"value":"/ Creates a path from the given item.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39781,"byte_end":39820,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39981,"byte_end":39987,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"ToPath","qualname":"::view::view_path::ToPath","value":"ToPath","parent":null,"children":[{"krate":0,"index":369}],"decl_id":null,"docs":" Generic trait for elements that can be converted into a `ViewPath`.\n","sig":null,"attributes":[{"value":"/ Generic trait for elements that can be converted into a `ViewPath`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39899,"byte_end":39970,"line_start":22,"line_end":22,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":40038,"byte_end":40045,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"to_path","qualname":"::view::view_path::ToPath::to_path","value":"pub fn to_path(Self) -> ViewPath","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Creates a path from the element.\n","sig":null,"attributes":[{"value":"/ Creates a path from the element.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39994,"byte_end":40030,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40532,"byte_end":40536,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"View","qualname":"::view::view_trait::View","value":"View: Any + AnyView","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"decl_id":null,"docs":" Main trait defining a view behaviour.","sig":null,"attributes":[{"value":"/ Main trait defining a view behaviour.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40413,"byte_end":40454,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40455,"byte_end":40458,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is what you should implement to define a custom View.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40459,"byte_end":40521,"line_start":11,"line_end":11,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40701,"byte_end":40705,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"draw","qualname":"::view::view_trait::View::draw","value":"pub fn draw(&Self, &Printer)","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Draws the view with the given printer (includes bounds) and focus.","sig":null,"attributes":[{"value":"/ Draws the view with the given printer (includes bounds) and focus.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40558,"byte_end":40628,"line_start":13,"line_end":13,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40633,"byte_end":40636,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ This is the only *required* method to implement.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40641,"byte_end":40693,"line_start":15,"line_end":15,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41127,"byte_end":41133,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"layout","qualname":"::view::view_trait::View::layout","value":"pub fn layout(&mut Self, Vec2)","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Called once the size for this view has been decided.","sig":null,"attributes":[{"value":"/ Called once the size for this view has been decided.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40746,"byte_end":40802,"line_start":18,"line_end":18,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40807,"byte_end":40810,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ It can be used to pre-compute the configuration of child views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40815,"byte_end":40882,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40887,"byte_end":40890,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ View groups should propagate the information to their children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40895,"byte_end":40962,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40967,"byte_end":40970,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ At this point, the given size is final and cannot be negociated.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40975,"byte_end":41043,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ It is guaranteed to be the size available for the call to `draw()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41048,"byte_end":41119,"line_start":25,"line_end":25,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41767,"byte_end":41781,"line_start":40,"line_end":40,"column_start":8,"column_end":22},"name":"needs_relayout","qualname":"::view::view_trait::View::needs_relayout","value":"pub fn needs_relayout(&Self) -> bool","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Should return `true` if the view content changed since the last call\n to `layout()`.","sig":null,"attributes":[{"value":"/ Should return `true` if the view content changed since the last call","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41162,"byte_end":41234,"line_start":28,"line_end":28,"column_start":5,"column_end":77}},{"value":"/ to `layout()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41239,"byte_end":41257,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41262,"byte_end":41265,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is mostly an optimisation for views where the layout phase is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41270,"byte_end":41340,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ expensive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41345,"byte_end":41359,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41364,"byte_end":41367,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ * Views can ignore it and always return true (default implementation).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41372,"byte_end":41446,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/   They will always be assumed to have changed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41451,"byte_end":41501,"line_start":35,"line_end":35,"column_start":5,"column_end":55}},{"value":"/ * View Groups can ignore it and always re-layout their children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41506,"byte_end":41574,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"/     * If they call `required_size` or `layout` with stable parameters,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41579,"byte_end":41653,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/       the children may cache the result themselves and speed up the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41658,"byte_end":41729,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/       process anyway.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41734,"byte_end":41759,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42257,"byte_end":42270,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"required_size","qualname":"::view::view_trait::View::required_size","value":"pub fn required_size(&mut Self, Vec2) -> Vec2","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns the minimum size the view requires with the given restrictions.","sig":null,"attributes":[{"value":"/ Returns the minimum size the view requires with the given restrictions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41823,"byte_end":41898,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41903,"byte_end":41906,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is the main way a view communicate its size to its parent.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41911,"byte_end":41978,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41983,"byte_end":41986,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Some views have a fixed size, and will ignore the `constraint`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":41991,"byte_end":42057,"line_start":48,"line_end":48,"column_start":5,"column_end":71}},{"value":"/ parameter entirely.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42062,"byte_end":42085,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42090,"byte_end":42093,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Some views are flexible, and may adapt fully or partially to the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42098,"byte_end":42166,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ constraints.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42171,"byte_end":42187,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42192,"byte_end":42195,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Default implementation always return `(1,1)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42200,"byte_end":42249,"line_start":54,"line_end":54,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42851,"byte_end":42859,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"on_event","qualname":"::view::view_trait::View::on_event","value":"pub fn on_event(&mut Self, Event) -> EventResult","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Called when an event is received (key press, mouse event, ...).","sig":null,"attributes":[{"value":"/ Called when an event is received (key press, mouse event, ...).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42373,"byte_end":42440,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42445,"byte_end":42448,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ You can return an `EventResult`:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42453,"byte_end":42489,"line_start":62,"line_end":62,"column_start":5,"column_end":41}},{"value":"/ * `EventResult::Ignored` means the event was not processed and may be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42494,"byte_end":42567,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/    sent to another view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42572,"byte_end":42600,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/ * `EventResult::Consumed` means the event was consumed and should not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42605,"byte_end":42678,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/    be sent to any other view. It may in addition include a callback","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42683,"byte_end":42754,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/    to be run.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42759,"byte_end":42776,"line_start":67,"line_end":67,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42781,"byte_end":42784,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The default implementation just ignores any event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42789,"byte_end":42843,"line_start":69,"line_end":69,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43400,"byte_end":43411,"line_start":86,"line_end":86,"column_start":8,"column_end":19},"name":"call_on_any","qualname":"::view::view_trait::View::call_on_any","value":"pub fn call_on_any<'a>(&mut Self, &Selector, AnyCb)","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Runs a closure on the view identified by the given selector.","sig":null,"attributes":[{"value":"/ Runs a closure on the view identified by the given selector.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":42938,"byte_end":43002,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43007,"byte_end":43010,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ See [`Finder::call_on`] for a nicer interface, implemented for all","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43015,"byte_end":43085,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43090,"byte_end":43100,"line_start":77,"line_end":77,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43105,"byte_end":43108,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`Finder::call_on`]: trait.Finder.html#method.call_on","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43113,"byte_end":43170,"line_start":79,"line_end":79,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43175,"byte_end":43178,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ If the selector doesn't find a match, the closure will not be run.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43183,"byte_end":43253,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43258,"byte_end":43261,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ View groups should implement this to forward the call to each children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43266,"byte_end":43341,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43346,"byte_end":43349,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Default implementation is a no-op.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43354,"byte_end":43392,"line_start":85,"line_end":85,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43726,"byte_end":43736,"line_start":95,"line_end":95,"column_start":8,"column_end":18},"name":"focus_view","qualname":"::view::view_trait::View::focus_view","value":"pub fn focus_view(&mut Self, &Selector) -> Result<(), ()>","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Moves the focus to the view identified by the given selector.","sig":null,"attributes":[{"value":"/ Moves the focus to the view identified by the given selector.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43519,"byte_end":43584,"line_start":90,"line_end":90,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43589,"byte_end":43592,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if the view was found and selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43597,"byte_end":43653,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43658,"byte_end":43661,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Default implementation simply returns `Err(())`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43666,"byte_end":43718,"line_start":94,"line_end":94,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44055,"byte_end":44065,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"take_focus","qualname":"::view::view_trait::View::take_focus","value":"pub fn take_focus(&mut Self, Direction) -> bool","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" This view is offered focus. Will it take it?","sig":null,"attributes":[{"value":"/ This view is offered focus. Will it take it?","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43813,"byte_end":43861,"line_start":99,"line_end":99,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43866,"byte_end":43869,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ `source` indicates where the focus comes from.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43874,"byte_end":43924,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/ When the source is unclear, `Front` is usually used.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43929,"byte_end":43985,"line_start":102,"line_end":102,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43990,"byte_end":43993,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Default implementation always return `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":43998,"byte_end":44047,"line_start":104,"line_end":104,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44461,"byte_end":44475,"line_start":118,"line_end":118,"column_start":8,"column_end":22},"name":"important_area","qualname":"::view::view_trait::View::important_area","value":"pub fn important_area(&Self, Vec2) -> Rect","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" What part of the view is important and should be visible?","sig":null,"attributes":[{"value":"/ What part of the view is important and should be visible?","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44155,"byte_end":44216,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44221,"byte_end":44224,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When only part of this view can be visible, this helps","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44229,"byte_end":44287,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/ determine which part.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44292,"byte_end":44317,"line_start":113,"line_end":113,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44322,"byte_end":44325,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ It is given the view size (same size given to `layout`).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44330,"byte_end":44390,"line_start":115,"line_end":115,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44395,"byte_end":44398,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Default implementation return the entire view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":44403,"byte_end":44453,"line_start":117,"line_end":117,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":44758,"byte_end":44765,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Boxable","qualname":"::view::boxable::Boxable","value":"Boxable: View + Sized","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" Makes a view wrappable in a [`BoxView`].","sig":null,"attributes":[{"value":"/ Makes a view wrappable in a [`BoxView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":44653,"byte_end":44697,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":44698,"byte_end":44701,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`BoxView`]: ../views/struct.BoxView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":44702,"byte_end":44747,"line_start":7,"line_end":7,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":44858,"byte_end":44863,"line_start":10,"line_end":10,"column_start":8,"column_end":13},"name":"boxed","qualname":"::view::boxable::Boxable::boxed","value":"pub fn boxed(Self, SizeConstraint, SizeConstraint) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` in a `BoxView` with the given size constraints.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `BoxView` with the given size constraints.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":44786,"byte_end":44850,"line_start":9,"line_end":9,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45057,"byte_end":45067,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"fixed_size","qualname":"::view::boxable::Boxable::fixed_size","value":"pub fn fixed_size<S: Into<Vec2>>(Self, S) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a fixed-size `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a fixed-size `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45004,"byte_end":45049,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45227,"byte_end":45238,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"fixed_width","qualname":"::view::boxable::Boxable::fixed_width","value":"pub fn fixed_width(Self, usize) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a fixed-width `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a fixed-width `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45173,"byte_end":45219,"line_start":21,"line_end":21,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45390,"byte_end":45402,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"fixed_height","qualname":"::view::boxable::Boxable::fixed_height","value":"pub fn fixed_height(Self, usize) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a fixed-width `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a fixed-width `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45336,"byte_end":45382,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45557,"byte_end":45568,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"full_screen","qualname":"::view::boxable::Boxable::full_screen","value":"pub fn full_screen(Self) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a full-screen `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a full-screen `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45503,"byte_end":45549,"line_start":31,"line_end":31,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45698,"byte_end":45708,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"full_width","qualname":"::view::boxable::Boxable::full_width","value":"pub fn full_width(Self) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a full-width `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a full-width `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45645,"byte_end":45690,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45838,"byte_end":45849,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"full_height","qualname":"::view::boxable::Boxable::full_height","value":"pub fn full_height(Self) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a full-height `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a full-height `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45784,"byte_end":45830,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45981,"byte_end":45989,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"max_size","qualname":"::view::boxable::Boxable::max_size","value":"pub fn max_size<S: Into<Vec2>>(Self, S) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a limited-size `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a limited-size `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":45926,"byte_end":45973,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46149,"byte_end":46158,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"max_width","qualname":"::view::boxable::Boxable::max_width","value":"pub fn max_width(Self, usize) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a limited-width `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a limited-width `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46093,"byte_end":46141,"line_start":51,"line_end":51,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46319,"byte_end":46329,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"max_height","qualname":"::view::boxable::Boxable::max_height","value":"pub fn max_height(Self, usize) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a limited-height `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a limited-height `BoxView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46262,"byte_end":46311,"line_start":56,"line_end":56,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46500,"byte_end":46508,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"min_size","qualname":"::view::boxable::Boxable::min_size","value":"pub fn min_size<S: Into<Vec2>>(Self, S) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` into a `BoxView` at least sized `size`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a `BoxView` at least sized `size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46436,"byte_end":46492,"line_start":61,"line_end":61,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46678,"byte_end":46687,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"min_width","qualname":"::view::boxable::Boxable::min_width","value":"pub fn min_width(Self, usize) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` in a `BoxView` at least `min_width` wide.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `BoxView` at least `min_width` wide.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46612,"byte_end":46670,"line_start":66,"line_end":66,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46858,"byte_end":46868,"line_start":72,"line_end":72,"column_start":8,"column_end":18},"name":"min_height","qualname":"::view::boxable::Boxable::min_height","value":"pub fn min_height(Self, usize) -> BoxView<Self>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wraps `self` in a `BoxView` at least `min_height` tall.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `BoxView` at least `min_height` tall.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46791,"byte_end":46850,"line_start":71,"line_end":71,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47158,"byte_end":47170,"line_start":7,"line_end":7,"column_start":11,"column_end":23},"name":"Identifiable","qualname":"::view::identifiable::Identifiable","value":"Identifiable: View + Sized","parent":null,"children":[{"krate":0,"index":458}],"decl_id":null,"docs":" Makes a view wrappable in an [`IdView`].","sig":null,"attributes":[{"value":"/ Makes a view wrappable in an [`IdView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47055,"byte_end":47099,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47100,"byte_end":47103,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`IdView`]: ../views/struct.IdView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47104,"byte_end":47147,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48319,"byte_end":48326,"line_start":44,"line_end":44,"column_start":8,"column_end":15},"name":"with_id","qualname":"::view::identifiable::Identifiable::with_id","value":"pub fn with_id<S: Into<String>>(Self, S) -> IdView<Self>","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":" Wraps this view into an `IdView` with the given id.","sig":null,"attributes":[{"value":"/ Wraps this view into an `IdView` with the given id.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47191,"byte_end":47246,"line_start":8,"line_end":8,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47251,"byte_end":47254,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ This is just a shortcut for `IdView::new(id, self)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47259,"byte_end":47314,"line_start":10,"line_end":10,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47319,"byte_end":47322,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ You can use the given id to find the view in the layout tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47327,"byte_end":47392,"line_start":12,"line_end":12,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47397,"byte_end":47400,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47405,"byte_end":47419,"line_start":14,"line_end":14,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47424,"byte_end":47427,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47432,"byte_end":47443,"line_start":16,"line_end":16,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47448,"byte_end":47475,"line_start":17,"line_end":17,"column_start":5,"column_end":32}},{"value":"/ # use cursive::views::TextView;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47480,"byte_end":47515,"line_start":18,"line_end":18,"column_start":5,"column_end":40}},{"value":"/ # use cursive::view::Boxable;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47520,"byte_end":47553,"line_start":19,"line_end":19,"column_start":5,"column_end":38}},{"value":"/ use cursive::view::Identifiable;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47558,"byte_end":47594,"line_start":20,"line_end":20,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47599,"byte_end":47602,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47607,"byte_end":47642,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/ siv.add_layer(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47647,"byte_end":47665,"line_start":23,"line_end":23,"column_start":5,"column_end":23}},{"value":"/     TextView::new(\"foo\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47670,"byte_end":47698,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/         .with_id(\"text\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47703,"byte_end":47731,"line_start":25,"line_end":25,"column_start":5,"column_end":33}},{"value":"/         .fixed_width(10)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47736,"byte_end":47764,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47769,"byte_end":47775,"line_start":27,"line_end":27,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47780,"byte_end":47783,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ // You could call this from an event callback","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47788,"byte_end":47837,"line_start":29,"line_end":29,"column_start":5,"column_end":54}},{"value":"/ siv.call_on_id(\"text\", |view: &mut TextView| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47842,"byte_end":47892,"line_start":30,"line_end":30,"column_start":5,"column_end":55}},{"value":"/     view.set_content(\"New content!\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47897,"byte_end":47938,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47943,"byte_end":47950,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47955,"byte_end":47962,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47967,"byte_end":47970,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47975,"byte_end":47986,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47991,"byte_end":47994,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ You should call this directly on the view you want to retrieve later,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47999,"byte_end":48072,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ before other wrappers like [`fixed_width`]. Otherwise, you would be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48077,"byte_end":48148,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ retrieving a [`BoxView`]!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48153,"byte_end":48182,"line_start":39,"line_end":39,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48187,"byte_end":48190,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`fixed_width`]: trait.Boxable.html#method.fixed_width","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48195,"byte_end":48253,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/ [`BoxView`]: ../views/struct.BoxView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48258,"byte_end":48303,"line_start":42,"line_end":42,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48308,"byte_end":48311,"line_start":43,"line_end":43,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5481},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49080,"byte_end":49087,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"KeepRow","qualname":"::view::scroll::ScrollStrategy::KeepRow","value":"ScrollStrategy::KeepRow","parent":{"krate":0,"index":5480},"children":[],"decl_id":null,"docs":" Keeps the same row number\n","sig":null,"attributes":[{"value":"/ Keeps the same row number","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49046,"byte_end":49075,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5483},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49120,"byte_end":49130,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"StickToTop","qualname":"::view::scroll::ScrollStrategy::StickToTop","value":"ScrollStrategy::StickToTop","parent":{"krate":0,"index":5480},"children":[],"decl_id":null,"docs":" Sticks to the top.\n","sig":null,"attributes":[{"value":"/ Sticks to the top.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49093,"byte_end":49115,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5485},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49178,"byte_end":49191,"line_start":25,"line_end":25,"column_start":5,"column_end":18},"name":"StickToBottom","qualname":"::view::scroll::ScrollStrategy::StickToBottom","value":"ScrollStrategy::StickToBottom","parent":{"krate":0,"index":5480},"children":[],"decl_id":null,"docs":" Sticks to the bottom of the view.\n","sig":null,"attributes":[{"value":"/ Sticks to the bottom of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49136,"byte_end":49173,"line_start":24,"line_end":24,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":5480},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49025,"byte_end":49039,"line_start":19,"line_end":19,"column_start":10,"column_end":24},"name":"ScrollStrategy","qualname":"::view::scroll::ScrollStrategy","value":"pub enum ScrollStrategy { KeepRow, StickToTop, StickToBottom, }","parent":null,"children":[{"krate":0,"index":5481},{"krate":0,"index":5483},{"krate":0,"index":5485}],"decl_id":null,"docs":" Defines the scrolling behaviour on content or size change\n","sig":null,"attributes":[{"value":"/ Defines the scrolling behaviour on content or size change","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":48937,"byte_end":48998,"line_start":17,"line_end":17,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5489},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86372,"byte_end":86382,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"ScrollBase","qualname":"::view::scroll_base::ScrollBase","value":"ScrollBase { start_line, content_height, view_height, scrollbar_offset, right_padding, thumb_grab }","parent":null,"children":[{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5495}],"decl_id":null,"docs":" Provide scrolling functionalities to a view.","sig":null,"attributes":[{"value":"/ Provide scrolling functionalities to a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86180,"byte_end":86228,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86229,"byte_end":86232,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ You're not supposed to use this directly,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86233,"byte_end":86278,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/ but it can be helpful if you create your own Views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86279,"byte_end":86334,"line_start":10,"line_end":10,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5490},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86420,"byte_end":86430,"line_start":14,"line_end":14,"column_start":9,"column_end":19},"name":"start_line","qualname":"::view::scroll_base::ScrollBase::start_line","value":"usize","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" First line visible\n","sig":null,"attributes":[{"value":"/ First line visible","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86389,"byte_end":86411,"line_start":13,"line_end":13,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":5491},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86471,"byte_end":86485,"line_start":17,"line_end":17,"column_start":9,"column_end":23},"name":"content_height","qualname":"::view::scroll_base::ScrollBase::content_height","value":"usize","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Content height\n","sig":null,"attributes":[{"value":"/ Content height","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86444,"byte_end":86462,"line_start":16,"line_end":16,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5492},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86537,"byte_end":86548,"line_start":20,"line_end":20,"column_start":9,"column_end":20},"name":"view_height","qualname":"::view::scroll_base::ScrollBase::view_height","value":"usize","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Number of lines displayed\n","sig":null,"attributes":[{"value":"/ Number of lines displayed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86499,"byte_end":86528,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":5493},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86815,"byte_end":86831,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"scrollbar_offset","qualname":"::view::scroll_base::ScrollBase::scrollbar_offset","value":"usize","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Padding for the scrollbar","sig":null,"attributes":[{"value":"/ Padding for the scrollbar","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86562,"byte_end":86591,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86596,"byte_end":86599,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If present, the scrollbar will be shifted","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86604,"byte_end":86649,"line_start":24,"line_end":24,"column_start":5,"column_end":50}},{"value":"/ `scrollbar_offset` columns to the left.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86654,"byte_end":86697,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86702,"byte_end":86705,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ (Useful when each item includes its own side borders,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86710,"byte_end":86767,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/ to draw the scrollbar inside.)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86772,"byte_end":86806,"line_start":28,"line_end":28,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5494},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86899,"byte_end":86912,"line_start":32,"line_end":32,"column_start":9,"column_end":22},"name":"right_padding","qualname":"::view::scroll_base::ScrollBase::right_padding","value":"usize","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Blank between the text and the scrollbar.\n","sig":null,"attributes":[{"value":"/ Blank between the text and the scrollbar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86845,"byte_end":86890,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86984,"byte_end":86994,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"name":"thumb_grab","qualname":"::view::scroll_base::ScrollBase::thumb_grab","value":"std::option::Option<usize>","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Initial position of the cursor when dragging.\n","sig":null,"attributes":[{"value":"/ Initial position of the cursor when dragging.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":86926,"byte_end":86975,"line_start":34,"line_end":34,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87091,"byte_end":87094,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<ScrollBase>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, uninitialized scrollbar.\n","sig":null,"attributes":[{"value":"/ Creates a new, uninitialized scrollbar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87036,"byte_end":87079,"line_start":39,"line_end":39,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87559,"byte_end":87575,"line_start":56,"line_end":56,"column_start":12,"column_end":28},"name":"scrollbar_offset","qualname":"<ScrollBase>::scrollbar_offset","value":"pub fn scrollbar_offset(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shifts the scrollbar toward the inside of the view.","sig":null,"attributes":[{"value":"/ Shifts the scrollbar toward the inside of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87328,"byte_end":87383,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87388,"byte_end":87391,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Used by views that draw their side borders in the children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87396,"byte_end":87459,"line_start":53,"line_end":53,"column_start":5,"column_end":68}},{"value":"/ Pushing the scrollbar to the left allows it to stay inside","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87464,"byte_end":87526,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/ the borders.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87531,"byte_end":87547,"line_start":55,"line_end":55,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87788,"byte_end":87801,"line_start":64,"line_end":64,"column_start":12,"column_end":25},"name":"right_padding","qualname":"<ScrollBase>::right_padding","value":"pub fn right_padding(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of blank cells between the text and the scrollbar.","sig":null,"attributes":[{"value":"/ Sets the number of blank cells between the text and the scrollbar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87675,"byte_end":87745,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87750,"byte_end":87753,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Defaults to 1.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87758,"byte_end":87776,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87970,"byte_end":87981,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"set_heights","qualname":"<ScrollBase>::set_heights","value":"pub fn set_heights(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Call this method whem the content or the view changes.\n","sig":null,"attributes":[{"value":"/ Call this method whem the content or the view changes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87900,"byte_end":87958,"line_start":69,"line_end":69,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88475,"byte_end":88485,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"scrollable","qualname":"<ScrollBase>::scrollable","value":"pub fn scrollable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `TRUE` if the view needs to scroll.\n","sig":null,"attributes":[{"value":"/ Returns `TRUE` if the view needs to scroll.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88416,"byte_end":88463,"line_start":84,"line_end":84,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88617,"byte_end":88630,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"can_scroll_up","qualname":"<ScrollBase>::can_scroll_up","value":"pub fn can_scroll_up(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `TRUE` unless we are at the top.\n","sig":null,"attributes":[{"value":"/ Returns `TRUE` unless we are at the top.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88561,"byte_end":88605,"line_start":89,"line_end":89,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88746,"byte_end":88761,"line_start":95,"line_end":95,"column_start":12,"column_end":27},"name":"can_scroll_down","qualname":"<ScrollBase>::can_scroll_down","value":"pub fn can_scroll_down(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `TRUE` unless we are at the bottom.\n","sig":null,"attributes":[{"value":"/ Returns `TRUE` unless we are at the bottom.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88687,"byte_end":88734,"line_start":94,"line_end":94,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88901,"byte_end":88911,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"scroll_top","qualname":"<ScrollBase>::scroll_top","value":"pub fn scroll_top(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Scroll to the top of the view.\n","sig":null,"attributes":[{"value":"/ Scroll to the top of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88855,"byte_end":88889,"line_start":99,"line_end":99,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89044,"byte_end":89053,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"scroll_to","qualname":"<ScrollBase>::scroll_to","value":"pub fn scroll_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Makes sure that the given line is visible, scrolling if needed.\n","sig":null,"attributes":[{"value":"/ Makes sure that the given line is visible, scrolling if needed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":88965,"byte_end":89032,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89329,"byte_end":89342,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"scroll_bottom","qualname":"<ScrollBase>::scroll_bottom","value":"pub fn scroll_bottom(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Scroll to the bottom of the view.\n","sig":null,"attributes":[{"value":"/ Scroll to the bottom of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89280,"byte_end":89317,"line_start":113,"line_end":113,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89593,"byte_end":89604,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"scroll_down","qualname":"<ScrollBase>::scroll_down","value":"pub fn scroll_down(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Scroll down by the given number of line.","sig":null,"attributes":[{"value":"/ Scroll down by the given number of line.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89478,"byte_end":89522,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89527,"byte_end":89530,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Never further than the bottom of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89535,"byte_end":89581,"line_start":122,"line_end":122,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89903,"byte_end":89918,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"scroll_to_thumb","qualname":"<ScrollBase>::scroll_to_thumb","value":"pub fn scroll_to_thumb(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Scrolls down until the scrollbar thumb is at the given location.\n","sig":null,"attributes":[{"value":"/ Scrolls down until the scrollbar thumb is at the given location.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":89823,"byte_end":89891,"line_start":132,"line_end":132,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":90533,"byte_end":90542,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"scroll_up","qualname":"<ScrollBase>::scroll_up","value":"pub fn scroll_up(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Scroll up by the given number of lines.","sig":null,"attributes":[{"value":"/ Scroll up by the given number of lines.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":90429,"byte_end":90472,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":90477,"byte_end":90480,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Never above the top of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":90485,"byte_end":90521,"line_start":148,"line_end":148,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":90738,"byte_end":90748,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"start_drag","qualname":"<ScrollBase>::start_drag","value":"pub fn start_drag(&mut Self, Vec2, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Starts scrolling from the given cursor position.\n","sig":null,"attributes":[{"value":"/ Starts scrolling from the given cursor position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":90674,"byte_end":90726,"line_start":155,"line_end":155,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":91652,"byte_end":91656,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"drag","qualname":"<ScrollBase>::drag","value":"pub fn drag(&mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Keeps scrolling by dragging the cursor.\n","sig":null,"attributes":[{"value":"/ Keeps scrolling by dragging the cursor.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":91597,"byte_end":91640,"line_start":181,"line_end":181,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92216,"byte_end":92227,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_dragging","qualname":"<ScrollBase>::is_dragging","value":"pub fn is_dragging(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if we are in the process of dragging the scroll thumb.\n","sig":null,"attributes":[{"value":"/ Returns `true` if we are in the process of dragging the scroll thumb.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92131,"byte_end":92204,"line_start":193,"line_end":193,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92335,"byte_end":92347,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"release_grab","qualname":"<ScrollBase>::release_grab","value":"pub fn release_grab(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops grabbing the scrollbar.\n","sig":null,"attributes":[{"value":"/ Stops grabbing the scrollbar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92290,"byte_end":92323,"line_start":198,"line_end":198,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93324,"byte_end":93328,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"draw","qualname":"<ScrollBase>::draw","value":"pub fn draw<F>(&Self, &Printer, F) where F: Fn(&Printer, usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws the scroll bar and the content using the given drawer.","sig":null,"attributes":[{"value":"/ Draws the scroll bar and the content using the given drawer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92404,"byte_end":92468,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92473,"byte_end":92476,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ `line_drawer` will be called once for each line that needs to be drawn.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92481,"byte_end":92556,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ It will be given the absolute ID of the item to draw..","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92561,"byte_end":92619,"line_start":206,"line_end":206,"column_start":5,"column_end":63}},{"value":"/ It will also be given a printer with the correct offset,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92624,"byte_end":92684,"line_start":207,"line_end":207,"column_start":5,"column_end":65}},{"value":"/ so it should only print on the first line.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92689,"byte_end":92735,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92740,"byte_end":92743,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92748,"byte_end":92762,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92767,"byte_end":92770,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92775,"byte_end":92786,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use cursive::view::ScrollBase;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92791,"byte_end":92827,"line_start":213,"line_end":213,"column_start":5,"column_end":41}},{"value":"/ # use cursive::Printer;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92832,"byte_end":92859,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/ # use cursive::theme;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92864,"byte_end":92889,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/ # use cursive::backend;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92894,"byte_end":92921,"line_start":216,"line_end":216,"column_start":5,"column_end":32}},{"value":"/ # let scrollbase = ScrollBase::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92926,"byte_end":92967,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ # let b = backend::dummy::Backend::init();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":92972,"byte_end":93018,"line_start":218,"line_end":218,"column_start":5,"column_end":51}},{"value":"/ # let t = theme::load_default();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93023,"byte_end":93059,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/ # let printer = Printer::new((5,1), &t, &*b);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93064,"byte_end":93113,"line_start":220,"line_end":220,"column_start":5,"column_end":54}},{"value":"/ # let printer = &printer;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93118,"byte_end":93147,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/ let lines = [\"Line 1\", \"Line number 2\"];","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93152,"byte_end":93196,"line_start":222,"line_end":222,"column_start":5,"column_end":49}},{"value":"/ scrollbase.draw(printer, |printer, i| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93201,"byte_end":93244,"line_start":223,"line_end":223,"column_start":5,"column_end":48}},{"value":"/     printer.print((0,0), lines[i]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93249,"byte_end":93288,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93293,"byte_end":93300,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":93305,"byte_end":93312,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95357,"byte_end":95368,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"scrollbar_x","qualname":"<ScrollBase>::scrollbar_x","value":"pub fn scrollbar_x(&Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the X position of the scrollbar, given the size available.","sig":null,"attributes":[{"value":"/ Returns the X position of the scrollbar, given the size available.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95167,"byte_end":95237,"line_start":281,"line_end":281,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95242,"byte_end":95245,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that this does not depend whether or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95250,"byte_end":95295,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"/ not a scrollbar will actually be present.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95300,"byte_end":95345,"line_start":284,"line_end":284,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95536,"byte_end":95558,"line_start":290,"line_end":290,"column_start":12,"column_end":34},"name":"scrollbar_thumb_height","qualname":"<ScrollBase>::scrollbar_thumb_height","value":"pub fn scrollbar_thumb_height(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the scrollbar thumb.\n","sig":null,"attributes":[{"value":"/ Returns the height of the scrollbar thumb.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95478,"byte_end":95524,"line_start":289,"line_end":289,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95724,"byte_end":95741,"line_start":295,"line_end":295,"column_start":12,"column_end":29},"name":"scrollbar_thumb_y","qualname":"<ScrollBase>::scrollbar_thumb_y","value":"pub fn scrollbar_thumb_y(&Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the y position of the scrollbar thumb.\n","sig":null,"attributes":[{"value":"/ Returns the y position of the scrollbar thumb.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":95662,"byte_end":95712,"line_start":294,"line_end":294,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96107,"byte_end":96117,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"Scrollable","qualname":"::view::scrollable::Scrollable","value":"Scrollable: View + Sized","parent":null,"children":[{"krate":0,"index":758}],"decl_id":null,"docs":" Makes a view wrappable in a [`ScrollView`].","sig":null,"attributes":[{"value":"/ Makes a view wrappable in a [`ScrollView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96000,"byte_end":96047,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96048,"byte_end":96051,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`ScrollView`]: crate::views::ScrollView","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96052,"byte_end":96096,"line_start":6,"line_end":6,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96181,"byte_end":96191,"line_start":9,"line_end":9,"column_start":8,"column_end":18},"name":"scrollable","qualname":"::view::scrollable::Scrollable::scrollable","value":"pub fn scrollable(Self) -> ScrollView<Self>","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":" Wraps `self` in a `ScrollView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `ScrollView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96138,"byte_end":96173,"line_start":8,"line_end":8,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\into_boxed_view.rs","byte_start":96387,"byte_end":96400,"line_start":4,"line_end":4,"column_start":11,"column_end":24},"name":"IntoBoxedView","qualname":"::view::into_boxed_view::IntoBoxedView","value":"IntoBoxedView","parent":null,"children":[{"krate":0,"index":766}],"decl_id":null,"docs":" Represents a type that can be made into a `Box<View>`.\n","sig":null,"attributes":[{"value":"/ Represents a type that can be made into a `Box<View>`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\into_boxed_view.rs","byte_start":96318,"byte_end":96376,"line_start":3,"line_end":3,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\into_boxed_view.rs","byte_start":96441,"byte_end":96454,"line_start":6,"line_end":6,"column_start":8,"column_end":21},"name":"as_boxed_view","qualname":"::view::into_boxed_view::IntoBoxedView::as_boxed_view","value":"pub fn as_boxed_view(Self) -> Box<dyn View>","parent":{"krate":0,"index":765},"children":[],"decl_id":null,"docs":" Returns a `Box<View>`.\n","sig":null,"attributes":[{"value":"/ Returns a `Box<View>`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\into_boxed_view.rs","byte_start":96407,"byte_end":96433,"line_start":5,"line_end":5,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":842},{"krate":0,"index":846},{"krate":0,"index":1113},{"krate":0,"index":1142},{"krate":0,"index":1160},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1260}],"decl_id":null,"docs":" Toolbox to make text layout easier.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2327,"byte_end":2339,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/ Toolbox to make text layout easier.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","byte_start":96716,"byte_end":96755,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5500},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97132,"byte_end":97139,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"Counter","qualname":"::utils::counter::Counter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Atomic counter used by [`ProgressBar`].","sig":null,"attributes":[{"value":"/ Atomic counter used by [`ProgressBar`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":96995,"byte_end":97038,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97039,"byte_end":97042,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`ProgressBar`]: ../views/struct.ProgressBar.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97043,"byte_end":97096,"line_start":6,"line_end":6,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5502},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97140,"byte_end":97160,"line_start":8,"line_end":8,"column_start":20,"column_end":40},"name":"0","qualname":"::utils::counter::Counter::0","value":"std::sync::Arc<std::sync::atomic::AtomicUsize>","parent":{"krate":0,"index":5500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97253,"byte_end":97256,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<Counter>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Counter` starting with the given value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Counter` starting with the given value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97183,"byte_end":97241,"line_start":11,"line_end":11,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97396,"byte_end":97399,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"get","qualname":"<Counter>::get","value":"pub fn get(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the current progress value.\n","sig":null,"attributes":[{"value":"/ Retrieves the current progress value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97343,"byte_end":97384,"line_start":16,"line_end":16,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97516,"byte_end":97519,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"set","qualname":"<Counter>::set","value":"pub fn set(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the current progress value.\n","sig":null,"attributes":[{"value":"/ Sets the current progress value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97468,"byte_end":97504,"line_start":21,"line_end":21,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97659,"byte_end":97663,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"tick","qualname":"<Counter>::tick","value":"pub fn tick(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Increase the current progress by `ticks`.\n","sig":null,"attributes":[{"value":"/ Increase the current progress by `ticks`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97602,"byte_end":97647,"line_start":26,"line_end":26,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lines","qualname":"::utils::lines","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\mod.rs","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":921}],"decl_id":null,"docs":" Compute rows of text with a width constraint.\n","sig":null,"attributes":[{"value":"/ Compute rows of text with a width constraint.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\mod.rs","byte_start":101781,"byte_end":101830,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"simple","qualname":"::utils::lines::simple","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":886},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":920}],"decl_id":null,"docs":" Compute lines on simple text.","sig":null,"attributes":[{"value":"/ Compute lines on simple text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":101864,"byte_end":101897,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":101898,"byte_end":101901,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The input is a single `&str`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":101902,"byte_end":101935,"line_start":3,"line_end":3,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":101936,"byte_end":101939,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Computed rows will include start/end byte offsets in the input string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":101940,"byte_end":102014,"line_start":5,"line_end":5,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":105758,"byte_end":105771,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"LinesIterator","qualname":"::utils::lines::simple::lines_iterator::LinesIterator","value":"LinesIterator {  }","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"decl_id":null,"docs":" Generates rows of text in constrained width.","sig":null,"attributes":[{"value":"/ Generates rows of text in constrained width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":105575,"byte_end":105623,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":105624,"byte_end":105627,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Given a long text and a width constraint, it iterates over","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":105628,"byte_end":105690,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/ substrings of the text, each within the constraint.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":105691,"byte_end":105746,"line_start":8,"line_end":8,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106553,"byte_end":106556,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesIterator>::new","value":"pub fn new(&'a str, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `LinesIterator` on `content`.","sig":null,"attributes":[{"value":"/ Returns a new `LinesIterator` on `content`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106440,"byte_end":106487,"line_start":41,"line_end":41,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106492,"byte_end":106495,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Yields rows of `width` cells or less.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106500,"byte_end":106541,"line_start":43,"line_end":43,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106900,"byte_end":106911,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"show_spaces","qualname":"<LinesIterator>::show_spaces","value":"pub fn show_spaces(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Leave a blank cell at the end of lines.","sig":null,"attributes":[{"value":"/ Leave a blank cell at the end of lines.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106745,"byte_end":106788,"line_start":50,"line_end":50,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106793,"byte_end":106796,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Unless a word had to be truncated, in which case","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106801,"byte_end":106853,"line_start":52,"line_end":52,"column_start":5,"column_end":57}},{"value":"/ it takes the entire width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106858,"byte_end":106888,"line_start":53,"line_end":53,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5507},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107604,"byte_end":107607,"line_start":8,"line_end":8,"column_start":12,"column_end":15},"name":"Row","qualname":"::utils::lines::simple::row::Row","value":"Row { start, end, width }","parent":null,"children":[{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510}],"decl_id":null,"docs":" Represents a row of text within a `String`.","sig":null,"attributes":[{"value":"/ Represents a row of text within a `String`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107386,"byte_end":107433,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107434,"byte_end":107437,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A row is made of offsets into a parent `String`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107438,"byte_end":107490,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/ The corresponding substring should take `width` cells when printed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107491,"byte_end":107562,"line_start":6,"line_end":6,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":5508},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107671,"byte_end":107676,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"start","qualname":"::utils::lines::simple::row::Row::start","value":"usize","parent":{"krate":0,"index":5507},"children":[],"decl_id":null,"docs":" Beginning of the row in the parent `String`.\n","sig":null,"attributes":[{"value":"/ Beginning of the row in the parent `String`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107614,"byte_end":107662,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107727,"byte_end":107730,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"end","qualname":"::utils::lines::simple::row::Row::end","value":"usize","parent":{"krate":0,"index":5507},"children":[],"decl_id":null,"docs":" End of the row (excluded)\n","sig":null,"attributes":[{"value":"/ End of the row (excluded)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107689,"byte_end":107718,"line_start":11,"line_end":11,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":5510},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107783,"byte_end":107788,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::lines::simple::row::Row::width","value":"usize","parent":{"krate":0,"index":5507},"children":[],"decl_id":null,"docs":" Width of the row, in cells.\n","sig":null,"attributes":[{"value":"/ Width of the row, in cells.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107743,"byte_end":107774,"line_start":13,"line_end":13,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107869,"byte_end":107874,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"shift","qualname":"<Row>::shift","value":"pub fn shift(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shift a row start and end by `offset`.\n","sig":null,"attributes":[{"value":"/ Shift a row start and end by `offset`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107815,"byte_end":107857,"line_start":18,"line_end":18,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":108061,"byte_end":108068,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"shifted","qualname":"<Row>::shifted","value":"pub fn shifted(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shift a row start and end by `offset`.","sig":null,"attributes":[{"value":"/ Shift a row start and end by `offset`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107972,"byte_end":108014,"line_start":24,"line_end":24,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":108019,"byte_end":108022,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Chainable variant;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":108027,"byte_end":108049,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":108209,"byte_end":108218,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"rev_shift","qualname":"<Row>::rev_shift","value":"pub fn rev_shift(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shift back a row start and end by `offset`.\n","sig":null,"attributes":[{"value":"/ Shift back a row start and end by `offset`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":108150,"byte_end":108197,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102258,"byte_end":102262,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Span","qualname":"::utils::lines::simple::Span","value":"Span { length, width }","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"decl_id":null,"docs":" The length and width of a part of a string.\n","sig":null,"attributes":[{"value":"/ The length and width of a part of a string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102199,"byte_end":102246,"line_start":15,"line_end":15,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102318,"byte_end":102324,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"length","qualname":"::utils::lines::simple::Span::length","value":"usize","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" The length (in bytes) of the string.\n","sig":null,"attributes":[{"value":"/ The length (in bytes) of the string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102269,"byte_end":102309,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102382,"byte_end":102387,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::lines::simple::Span::width","value":"usize","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" The unicode-width of the string.\n","sig":null,"attributes":[{"value":"/ The unicode-width of the string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102337,"byte_end":102373,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102533,"byte_end":102543,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"make_lines","qualname":"::utils::lines::simple::make_lines","value":"pub fn make_lines(&str, usize) -> Vec<Row>","parent":null,"children":[],"decl_id":null,"docs":" Compute lines for the given content and width.","sig":null,"attributes":[{"value":"/ Compute lines for the given content and width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102399,"byte_end":102449,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102450,"byte_end":102453,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to constructing a new `LinesIterator` and collecting it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102454,"byte_end":102525,"line_start":25,"line_end":25,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103430,"byte_end":103436,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"prefix","qualname":"::utils::lines::simple::prefix","value":"pub fn prefix<'a, I>(I, usize, &str) -> Span where I: Iterator<Item = &'a str>","parent":null,"children":[],"decl_id":null,"docs":" Computes a prefix that fits in the given `width`.","sig":null,"attributes":[{"value":"/ Computes a prefix that fits in the given `width`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102639,"byte_end":102692,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102693,"byte_end":102696,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Takes non-breakable elements from `iter`, while keeping the string width","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102697,"byte_end":102773,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ under `width` (and adding `delimiter` between each element).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102774,"byte_end":102838,"line_start":33,"line_end":33,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102839,"byte_end":102842,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Given `total_text = iter.collect().join(delimiter)`, the result is the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102843,"byte_end":102917,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ length of the longest prefix of `width` or less cells, without breaking","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102918,"byte_end":102993,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ inside an element.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":102994,"byte_end":103016,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103017,"byte_end":103020,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103021,"byte_end":103033,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103034,"byte_end":103037,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103038,"byte_end":103045,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103046,"byte_end":103073,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ extern crate unicode_segmentation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103074,"byte_end":103112,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ use unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103113,"byte_end":103163,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103164,"byte_end":103167,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # use cursive::utils::lines::simple::prefix;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103168,"byte_end":103216,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103217,"byte_end":103234,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/ let my_text = \"blah...\";","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103235,"byte_end":103263,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ // This returns the number of bytes for a prefix of `my_text` that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103264,"byte_end":103334,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/ // fits within 5 cells.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103335,"byte_end":103362,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/ prefix(my_text.graphemes(true), 5, \"\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103363,"byte_end":103406,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103407,"byte_end":103414,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":103415,"byte_end":103422,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104873,"byte_end":104879,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"suffix","qualname":"::utils::lines::simple::suffix","value":"pub fn suffix<'a, I>(I, usize, &str) -> Span where I: DoubleEndedIterator<Item\n= &'a str>","parent":null,"children":[],"decl_id":null,"docs":" Computes the longest suffix that fits in the given `width`.","sig":null,"attributes":[{"value":"/ Computes the longest suffix that fits in the given `width`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104571,"byte_end":104634,"line_start":92,"line_end":92,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104635,"byte_end":104638,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Doesn't break inside elements returned by `iter`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104639,"byte_end":104692,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104693,"byte_end":104696,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes of the longest","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104697,"byte_end":104743,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/ suffix from `text` that fits in `width`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104744,"byte_end":104788,"line_start":97,"line_end":97,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104789,"byte_end":104792,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This is a shortcut for `prefix_length(iter.rev(), width, delimiter)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":104793,"byte_end":104865,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":105144,"byte_end":105157,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"simple_suffix","qualname":"::utils::lines::simple::simple_suffix","value":"pub fn simple_suffix(&str, usize) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Computes the longest suffix that fits in the given `width`.","sig":null,"attributes":[{"value":"/ Computes the longest suffix that fits in the given `width`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":105031,"byte_end":105094,"line_start":107,"line_end":107,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":105095,"byte_end":105098,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Breaks between any two graphemes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":105099,"byte_end":105136,"line_start":109,"line_end":109,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":105352,"byte_end":105365,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"simple_prefix","qualname":"::utils::lines::simple::simple_prefix","value":"pub fn simple_prefix(&str, usize) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Computes the longest prefix that fits in the given width.","sig":null,"attributes":[{"value":"/ Computes the longest prefix that fits in the given width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":105241,"byte_end":105302,"line_start":114,"line_end":114,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":105303,"byte_end":105306,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Breaks between any two graphemes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\mod.rs","byte_start":105307,"byte_end":105344,"line_start":116,"line_end":116,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spans","qualname":"::utils::lines::spans","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":929},{"krate":0,"index":961},{"krate":0,"index":1022},{"krate":0,"index":1043},{"krate":0,"index":1066},{"krate":0,"index":1089},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110}],"decl_id":null,"docs":" Compute lines on multiple spans of text.","sig":null,"attributes":[{"value":"/ Compute lines on multiple spans of text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108314,"byte_end":108358,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108359,"byte_end":108362,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The input is a list of consecutive text spans.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108363,"byte_end":108413,"line_start":3,"line_end":3,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108414,"byte_end":108417,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Computed rows will include a list of span segments.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108418,"byte_end":108473,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"/ Each segment include the source span ID, and start/end byte offsets.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\mod.rs","byte_start":108474,"byte_end":108546,"line_start":6,"line_end":6,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":117943,"byte_end":117956,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"LinesIterator","qualname":"::utils::lines::spans::lines_iterator::LinesIterator","value":"LinesIterator {  }","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"decl_id":null,"docs":" Generates rows of text in constrainted width.","sig":null,"attributes":[{"value":"/ Generates rows of text in constrainted width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":117850,"byte_end":117899,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":117900,"byte_end":117903,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Works on spans of text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":117904,"byte_end":117931,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118493,"byte_end":118496,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesIterator<S>>::new","value":"pub fn new(S, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator with the given content and width.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator with the given content and width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118421,"byte_end":118481,"line_start":39,"line_end":39,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118998,"byte_end":119009,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"show_spaces","qualname":"<LinesIterator<S>>::show_spaces","value":"pub fn show_spaces(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Leave a blank cell at the end of lines.","sig":null,"attributes":[{"value":"/ Leave a blank cell at the end of lines.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118840,"byte_end":118883,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118888,"byte_end":118891,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Unless a word had to be truncated, in which case","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118896,"byte_end":118948,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ it can take the entire width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118953,"byte_end":118986,"line_start":55,"line_end":55,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5549},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127106,"byte_end":127109,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Row","qualname":"::utils::lines::spans::row::Row","value":"Row { segments, width }","parent":null,"children":[{"krate":0,"index":5550},{"krate":0,"index":5551}],"decl_id":null,"docs":" A list of segments representing a row of text\n","sig":null,"attributes":[{"value":"/ A list of segments representing a row of text","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127006,"byte_end":127055,"line_start":4,"line_end":4,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5550},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127145,"byte_end":127153,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"name":"segments","qualname":"::utils::lines::spans::row::Row::segments","value":"std::vec::Vec<utils::lines::spans::segment::Segment>","parent":{"krate":0,"index":5549},"children":[],"decl_id":null,"docs":" List of segments\n","sig":null,"attributes":[{"value":"/ List of segments","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127116,"byte_end":127136,"line_start":7,"line_end":7,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":5551},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127210,"byte_end":127215,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::lines::spans::row::Row::width","value":"usize","parent":{"krate":0,"index":5549},"children":[],"decl_id":null,"docs":" Total width for this row\n","sig":null,"attributes":[{"value":"/ Total width for this row","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127173,"byte_end":127201,"line_start":9,"line_end":9,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127316,"byte_end":127323,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Row>::resolve","value":"pub fn resolve<'a, T, S>(&Self, S) -> Vec<Span> where S: Into<SpannedStr>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the row indices into string slices and attributes.\n","sig":null,"attributes":[{"value":"/ Resolve the row indices into string slices and attributes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127242,"byte_end":127304,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127786,"byte_end":127801,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"overall_indices","qualname":"<Row>::overall_indices","value":"pub fn overall_indices<S>(&Self, &[S]) -> Option<(usize, usize)> where\nS: AsRef<IndexedCow>","parent":null,"children":[],"decl_id":null,"docs":" Returns indices in the source string, if possible.","sig":null,"attributes":[{"value":"/ Returns indices in the source string, if possible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127635,"byte_end":127689,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127694,"byte_end":127697,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Returns overall `(start, end)`, or `None` if the segments are owned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127702,"byte_end":127774,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":5563},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128232,"byte_end":128239,"line_start":5,"line_end":5,"column_start":12,"column_end":19},"name":"Segment","qualname":"::utils::lines::spans::segment::Segment","value":"Segment { span_id, start, end, width }","parent":null,"children":[{"krate":0,"index":5564},{"krate":0,"index":5565},{"krate":0,"index":5566},{"krate":0,"index":5567}],"decl_id":null,"docs":" Refers to a part of a span\n","sig":null,"attributes":[{"value":"/ Refers to a part of a span","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128145,"byte_end":128175,"line_start":3,"line_end":3,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":5564},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128296,"byte_end":128303,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"span_id","qualname":"::utils::lines::spans::segment::Segment::span_id","value":"usize","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":" ID of the span this segment refers to\n","sig":null,"attributes":[{"value":"/ ID of the span this segment refers to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128246,"byte_end":128287,"line_start":6,"line_end":6,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5565},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128382,"byte_end":128387,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"start","qualname":"::utils::lines::spans::segment::Segment::start","value":"usize","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":" Beginning of this segment within the span (included)\n","sig":null,"attributes":[{"value":"/ Beginning of this segment within the span (included)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128317,"byte_end":128373,"line_start":9,"line_end":9,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5566},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128459,"byte_end":128462,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"end","qualname":"::utils::lines::spans::segment::Segment::end","value":"usize","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":" End of this segment within the span (excluded)\n","sig":null,"attributes":[{"value":"/ End of this segment within the span (excluded)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128400,"byte_end":128450,"line_start":11,"line_end":11,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5567},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128510,"byte_end":128515,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::lines::spans::segment::Segment::width","value":"usize","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":" Width of this segment\n","sig":null,"attributes":[{"value":"/ Width of this segment","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128476,"byte_end":128501,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128618,"byte_end":128625,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Segment>::resolve","value":"pub fn resolve<'a, T>(&Self, &SpannedStr) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Resolve this segment to a string slice and an attribute.\n","sig":null,"attributes":[{"value":"/ Resolve this segment to a string slice and an attribute.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128546,"byte_end":128606,"line_start":19,"line_end":19,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":129026,"byte_end":129039,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"resolve_plain","qualname":"<Segment>::resolve_plain","value":"pub fn resolve_plain<'a, S>(&Self, &'a S) -> &'a str where S: SpannedText","parent":null,"children":[],"decl_id":null,"docs":" Resolves this segment to plain text.\n","sig":null,"attributes":[{"value":"/ Resolves this segment to plain text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128974,"byte_end":129014,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":129439,"byte_end":129453,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"source_indices","qualname":"<Segment>::source_indices","value":"pub fn source_indices<S>(&Self, &[S]) -> Option<(usize, usize)> where\nS: AsRef<IndexedCow>","parent":null,"children":[],"decl_id":null,"docs":" Returns indices in the source string, if possible.","sig":null,"attributes":[{"value":"/ Returns indices in the source string, if possible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":129284,"byte_end":129338,"line_start":45,"line_end":45,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":129343,"byte_end":129346,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returns `(start, end)`, or `None` if the target span is an owned string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":129351,"byte_end":129427,"line_start":47,"line_end":47,"column_start":5,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"markup","qualname":"::utils::markup","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1131}],"decl_id":null,"docs":" Parse various text markup formats.","sig":null,"attributes":[{"value":"/ Parse various text markup formats.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131061,"byte_end":131099,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131100,"byte_end":131103,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Each module is optional and relies on a feature.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131104,"byte_end":131156,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131626,"byte_end":131638,"line_start":20,"line_end":20,"column_start":10,"column_end":22},"name":"StyledString","qualname":"::utils::markup::StyledString","value":"SpannedString<Style>","parent":null,"children":[],"decl_id":null,"docs":" A parsed string with markup style.","sig":null,"attributes":[{"value":"/ A parsed string with markup style.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131292,"byte_end":131330,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131331,"byte_end":131334,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Contains both the source string, and parsed information indicating the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131335,"byte_end":131409,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ style to apply.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131410,"byte_end":131429,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131430,"byte_end":131433,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ **Note**: due to limitations in rustdoc, you will need to read the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131434,"byte_end":131504,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ documentation from the [`SpannedString`] page.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131505,"byte_end":131555,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131556,"byte_end":131559,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`SpannedString`]: ../span/struct.SpannedString.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131560,"byte_end":131616,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131714,"byte_end":131731,"line_start":23,"line_end":23,"column_start":10,"column_end":27},"name":"StyledIndexedSpan","qualname":"::utils::markup::StyledIndexedSpan","value":"IndexedSpan<Style>","parent":null,"children":[],"decl_id":null,"docs":" Indexes a span into a source string.\n","sig":null,"attributes":[{"value":"/ Indexes a span into a source string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131664,"byte_end":131704,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131820,"byte_end":131830,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"name":"StyledSpan","qualname":"::utils::markup::StyledSpan","value":"Span","parent":null,"children":[],"decl_id":null,"docs":" A resolved styled span borrowing its source string.\n","sig":null,"attributes":[{"value":"/ A resolved styled span borrowing its source string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131755,"byte_end":131810,"line_start":25,"line_end":25,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":132008,"byte_end":132013,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"plain","qualname":"<SpannedString<Style>>::plain","value":"pub fn plain<S>(S) -> Self where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a plain StyledString without any style.","sig":null,"attributes":[{"value":"/ Returns a plain StyledString without any style.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131887,"byte_end":131938,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131943,"byte_end":131946,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ > You got no style, Dutch. You know that.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131951,"byte_end":131996,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":132220,"byte_end":132226,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"styled","qualname":"<SpannedString<Style>>::styled","value":"pub fn styled<S, T>(S, T) -> Self where S: Into<String>, T: Into<Style>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `StyledString` using a single style for the entire text.\n","sig":null,"attributes":[{"value":"/ Creates a new `StyledString` using a single style for the entire text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":132134,"byte_end":132208,"line_start":39,"line_end":39,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":132509,"byte_end":132521,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"append_plain","qualname":"<SpannedString<Style>>::append_plain","value":"pub fn append_plain<S>(&mut Self, S) where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Appends the given plain text to `self`.\n","sig":null,"attributes":[{"value":"/ Appends the given plain text to `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":132454,"byte_end":132497,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":132693,"byte_end":132706,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"append_styled","qualname":"<SpannedString<Style>>::append_styled","value":"pub fn append_styled<S, T>(&mut Self, S, T) where S: Into<String>,\nT: Into<Style>","parent":null,"children":[],"decl_id":null,"docs":" Appends `text` to `self`, using `style`.\n","sig":null,"attributes":[{"value":"/ Appends `text` to `self`, using `style`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":132637,"byte_end":132681,"line_start":59,"line_end":59,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5580},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133865,"byte_end":133879,"line_start":34,"line_end":34,"column_start":12,"column_end":26},"name":"ProgressReader","qualname":"::utils::reader::ProgressReader","value":"ProgressReader {  }","parent":null,"children":[{"krate":0,"index":5582},{"krate":0,"index":5583}],"decl_id":null,"docs":" Wrapper around a `Read` that reports the progress made.","sig":null,"attributes":[{"value":"/ Wrapper around a `Read` that reports the progress made.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":132920,"byte_end":132979,"line_start":4,"line_end":4,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":132980,"byte_end":132983,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Used to monitor a file downloading or other slow IO task","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":132984,"byte_end":133044,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ in a progress bar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133045,"byte_end":133067,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133068,"byte_end":133071,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133072,"byte_end":133086,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133087,"byte_end":133090,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133091,"byte_end":133109,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133110,"byte_end":133132,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/ use cursive::utils::{Counter, ProgressReader};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133133,"byte_end":133183,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133184,"byte_end":133187,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Read a file and report the progress","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133188,"byte_end":133230,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ let file = std::fs::File::open(\"large_file\").unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133231,"byte_end":133289,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ let counter = Counter::new(0);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133290,"byte_end":133324,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"/ let mut reader = ProgressReader::new(counter.clone(), file);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133325,"byte_end":133389,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133390,"byte_end":133393,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133394,"byte_end":133426,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     // Left as an exercise: use an AtomicBool for a stop condition!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133427,"byte_end":133498,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133499,"byte_end":133513,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/         let progress = counter.get();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133514,"byte_end":133555,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/         println!(\"Read {} bytes so far\", progress);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133556,"byte_end":133611,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133612,"byte_end":133621,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133622,"byte_end":133629,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133630,"byte_end":133633,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // As we read data, the counter will be updated and the control thread","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133634,"byte_end":133708,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ // will monitor the progress.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133709,"byte_end":133742,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133743,"byte_end":133775,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ reader.read_to_end(&mut buffer).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133776,"byte_end":133821,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133822,"byte_end":133829,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134208,"byte_end":134211,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressReader<R>>::new","value":"pub fn new(Counter, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ProgressReader` around `reader`.","sig":null,"attributes":[{"value":"/ Creates a new `ProgressReader` around `reader`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133969,"byte_end":134020,"line_start":40,"line_end":40,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134025,"byte_end":134028,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ `counter` will be updated with the number of bytes read.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134033,"byte_end":134093,"line_start":42,"line_end":42,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134098,"byte_end":134101,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ You should make sure the progress bar knows how","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134106,"byte_end":134157,"line_start":44,"line_end":44,"column_start":5,"column_end":56}},{"value":"/ many bytes should be received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134162,"byte_end":134196,"line_start":45,"line_end":45,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134385,"byte_end":134396,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"deconstruct","qualname":"<ProgressReader<R>>::deconstruct","value":"pub fn deconstruct(Self) -> (R, Counter)","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `ProgressReader`, returning the reader and counter.\n","sig":null,"attributes":[{"value":"/ Unwraps this `ProgressReader`, returning the reader and counter.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134305,"byte_end":134373,"line_start":50,"line_end":50,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::utils::span","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":5590},{"krate":0,"index":5594},{"krate":0,"index":5597},{"krate":0,"index":5600},{"krate":0,"index":5602},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5611},{"krate":0,"index":5616},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5628},{"krate":0,"index":5631},{"krate":0,"index":1167},{"krate":0,"index":1172},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1185},{"krate":0,"index":1191},{"krate":0,"index":1197},{"krate":0,"index":1201},{"krate":0,"index":1212},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1237},{"krate":0,"index":5635},{"krate":0,"index":5640},{"krate":0,"index":5643},{"krate":0,"index":5646},{"krate":0,"index":5648},{"krate":0,"index":5652},{"krate":0,"index":5654},{"krate":0,"index":1241},{"krate":0,"index":5657},{"krate":0,"index":5663},{"krate":0,"index":5667},{"krate":0,"index":5671},{"krate":0,"index":5674},{"krate":0,"index":5679},{"krate":0,"index":5682},{"krate":0,"index":1244},{"krate":0,"index":5686},{"krate":0,"index":5693},{"krate":0,"index":5695},{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":1251}],"decl_id":null,"docs":" Work with spans of text.","sig":null,"attributes":[{"value":"/ Work with spans of text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":134679,"byte_end":134707,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":134708,"byte_end":134711,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module defines various structs describing a span of text from a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":134712,"byte_end":134784,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ larger string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":134785,"byte_end":134803,"line_start":4,"line_end":4,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5590},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135000,"byte_end":135013,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"SpannedString","qualname":"::utils::span::SpannedString","value":"SpannedString {  }","parent":null,"children":[{"krate":0,"index":5592},{"krate":0,"index":5593}],"decl_id":null,"docs":" A string with associated spans.","sig":null,"attributes":[{"value":"/ A string with associated spans.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":134863,"byte_end":134898,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":134899,"byte_end":134902,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each span has an associated attribute `T`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":134903,"byte_end":134949,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5611},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135176,"byte_end":135186,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"SpannedStr","qualname":"::utils::span::SpannedStr","value":"SpannedStr {  }","parent":null,"children":[{"krate":0,"index":5614},{"krate":0,"index":5615}],"decl_id":null,"docs":" The immutable, borrowed equivalent of `SpannedString`.\n","sig":null,"attributes":[{"value":"/ The immutable, borrowed equivalent of `SpannedString`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135074,"byte_end":135132,"line_start":17,"line_end":17,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135321,"byte_end":135332,"line_start":25,"line_end":25,"column_start":11,"column_end":22},"name":"SpannedText","qualname":"::utils::span::SpannedText","value":"SpannedText","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171}],"decl_id":null,"docs":" Describes an object that appears like a `SpannedStr`.\n","sig":null,"attributes":[{"value":"/ Describes an object that appears like a `SpannedStr`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135253,"byte_end":135310,"line_start":24,"line_end":24,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135401,"byte_end":135402,"line_start":27,"line_end":27,"column_start":10,"column_end":11},"name":"S","qualname":"::utils::span::SpannedText::S","value":"type S: AsRef<IndexedCow>;","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" Type of span returned by `SpannedText::spans()`.\n","sig":null,"attributes":[{"value":"/ Type of span returned by `SpannedText::spans()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135339,"byte_end":135391,"line_start":26,"line_end":26,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135464,"byte_end":135470,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"source","qualname":"::utils::span::SpannedText::source","value":"pub fn source(&Self) -> &str","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" Returns the source text.\n","sig":null,"attributes":[{"value":"/ Returns the source text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135428,"byte_end":135456,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135536,"byte_end":135541,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"spans","qualname":"::utils::span::SpannedText::spans","value":"pub fn spans(&Self) -> &[Self::S]","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" Returns the spans for this text.\n","sig":null,"attributes":[{"value":"/ Returns the spans for this text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135492,"byte_end":135528,"line_start":32,"line_end":32,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135618,"byte_end":135624,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"as_ref","qualname":"::utils::span::SpannedText::as_ref","value":"pub fn as_ref(&Self) -> SpannedTextRef<, Self>","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" Returns a `SpannedText` by reference.\n","sig":null,"attributes":[{"value":"/ Returns a `SpannedText` by reference.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135569,"byte_end":135610,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135759,"byte_end":135773,"line_start":42,"line_end":42,"column_start":12,"column_end":26},"name":"SpannedTextRef","qualname":"::utils::span::SpannedTextRef","value":"SpannedTextRef {  }","parent":null,"children":[{"krate":0,"index":1175}],"decl_id":null,"docs":" A reference to another `SpannedText`.\n","sig":null,"attributes":[{"value":"/ A reference to another `SpannedText`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135706,"byte_end":135747,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136916,"byte_end":136919,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<SpannedStr>::new","value":"pub fn new(&'a str, &'a [IndexedSpan<T>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SpannedStr` from the given references.\n","sig":null,"attributes":[{"value":"/ Creates a new `SpannedStr` from the given references.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136847,"byte_end":136904,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137080,"byte_end":137085,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"name":"spans","qualname":"<SpannedStr>::spans","value":"pub fn spans<'b>(&'b Self) -> /*impl Trait*/ where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Gives access to the parsed styled spans.\n","sig":null,"attributes":[{"value":"/ Gives access to the parsed styled spans.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137024,"byte_end":137068,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137340,"byte_end":137349,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"spans_raw","qualname":"<SpannedStr>::spans_raw","value":"pub fn spans_raw(&Self) -> &'a [IndexedSpan<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the indexed spans.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the indexed spans.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137283,"byte_end":137328,"line_start":125,"line_end":125,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137483,"byte_end":137489,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"source","qualname":"<SpannedStr>::source","value":"pub fn source(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the source (non-parsed) string.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the source (non-parsed) string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137413,"byte_end":137471,"line_start":130,"line_end":130,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137653,"byte_end":137661,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SpannedStr>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is empty.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137541,"byte_end":137579,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137584,"byte_end":137587,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Can be caused by an empty source, or no span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137592,"byte_end":137641,"line_start":137,"line_end":137,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138019,"byte_end":138024,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"plain","qualname":"<SpannedString<()>>::plain","value":"pub fn plain<S>(S) -> Self where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a simple spanned string without any attribute.\n","sig":null,"attributes":[{"value":"/ Returns a simple spanned string without any attribute.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137949,"byte_end":138007,"line_start":153,"line_end":153,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138217,"byte_end":138220,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<SpannedString<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty `SpannedString`.\n","sig":null,"attributes":[{"value":"/ Returns an empty `SpannedString`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138168,"byte_end":138205,"line_start":163,"line_end":163,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138469,"byte_end":138479,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"with_spans","qualname":"<SpannedString<T>>::with_spans","value":"pub fn with_spans<S>(S, Vec<IndexedSpan<T>>) -> Self where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SpannedString` manually.","sig":null,"attributes":[{"value":"/ Creates a new `SpannedString` manually.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138296,"byte_end":138339,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138344,"byte_end":138347,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to use this directly.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138352,"byte_end":138399,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/ Instead, look for methods like `Markdown::parse`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138404,"byte_end":138457,"line_start":171,"line_end":171,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139004,"byte_end":139015,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"single_span","qualname":"<SpannedString<T>>::single_span","value":"pub fn single_span<S>(S, T) -> Self where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new SpannedString with a single span.\n","sig":null,"attributes":[{"value":"/ Returns a new SpannedString with a single span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138941,"byte_end":138992,"line_start":189,"line_end":189,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139307,"byte_end":139313,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"append","qualname":"<SpannedString<T>>::append","value":"pub fn append<S>(&mut Self, S) where S: Into<Self>","parent":null,"children":[],"decl_id":null,"docs":" Appends the given `StyledString` to `self`.\n","sig":null,"attributes":[{"value":"/ Appends the given `StyledString` to `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139248,"byte_end":139295,"line_start":201,"line_end":201,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139654,"byte_end":139664,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"append_raw","qualname":"<SpannedString<T>>::append_raw","value":"pub fn append_raw(&mut Self, &str, Vec<IndexedSpan<T>>)","parent":null,"children":[],"decl_id":null,"docs":" Appends `content` and its corresponding spans to the end.","sig":null,"attributes":[{"value":"/ Appends `content` and its corresponding spans to the end.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139475,"byte_end":139536,"line_start":210,"line_end":210,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139541,"byte_end":139544,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to use this directly;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139549,"byte_end":139596,"line_start":212,"line_end":212,"column_start":5,"column_end":52}},{"value":"/ instead, look at the `append` method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139601,"byte_end":139642,"line_start":213,"line_end":213,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140021,"byte_end":140026,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"spans","qualname":"<SpannedString<T>>::spans","value":"pub fn spans(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Gives access to the parsed styled spans.\n","sig":null,"attributes":[{"value":"/ Gives access to the parsed styled spans.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":139965,"byte_end":140009,"line_start":226,"line_end":226,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140240,"byte_end":140249,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"spans_raw","qualname":"<SpannedString<T>>::spans_raw","value":"pub fn spans_raw(&Self) -> &[IndexedSpan<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the indexed spans.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the indexed spans.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140183,"byte_end":140228,"line_start":232,"line_end":232,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140415,"byte_end":140421,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"source","qualname":"<SpannedString<T>>::source","value":"pub fn source(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the source string.","sig":null,"attributes":[{"value":"/ Returns a reference to the source string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140311,"byte_end":140356,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140361,"byte_end":140364,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This is the non-parsed string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140369,"byte_end":140403,"line_start":239,"line_end":239,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140519,"byte_end":140527,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SpannedString<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if self is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if self is empty.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140471,"byte_end":140507,"line_start":244,"line_end":244,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140726,"byte_end":140731,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"width","qualname":"<SpannedString<T>>::width","value":"pub fn width(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the width taken by this string.","sig":null,"attributes":[{"value":"/ Returns the width taken by this string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140612,"byte_end":140655,"line_start":249,"line_end":249,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140660,"byte_end":140663,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This is the sum of the width of each span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140668,"byte_end":140714,"line_start":251,"line_end":251,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5635},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141079,"byte_end":141090,"line_start":265,"line_end":265,"column_start":12,"column_end":23},"name":"IndexedSpan","qualname":"::utils::span::IndexedSpan","value":"IndexedSpan { content, attr, width }","parent":null,"children":[{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639}],"decl_id":null,"docs":" An indexed span with an associated attribute.\n","sig":null,"attributes":[{"value":"/ An indexed span with an associated attribute.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140979,"byte_end":141028,"line_start":263,"line_end":263,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141133,"byte_end":141140,"line_start":267,"line_end":267,"column_start":9,"column_end":16},"name":"content","qualname":"::utils::span::IndexedSpan::content","value":"utils::span::IndexedCow","parent":{"krate":0,"index":5635},"children":[],"decl_id":null,"docs":" Content of the span.\n","sig":null,"attributes":[{"value":"/ Content of the span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141100,"byte_end":141124,"line_start":266,"line_end":266,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5638},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141202,"byte_end":141206,"line_start":270,"line_end":270,"column_start":9,"column_end":13},"name":"attr","qualname":"::utils::span::IndexedSpan::attr","value":"T","parent":{"krate":0,"index":5635},"children":[],"decl_id":null,"docs":" Attribute applied to the span.\n","sig":null,"attributes":[{"value":"/ Attribute applied to the span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141159,"byte_end":141193,"line_start":269,"line_end":269,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5639},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141261,"byte_end":141266,"line_start":273,"line_end":273,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::span::IndexedSpan::width","value":"usize","parent":{"krate":0,"index":5635},"children":[],"decl_id":null,"docs":" Width of the text for this span.\n","sig":null,"attributes":[{"value":"/ Width of the text for this span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141216,"byte_end":141252,"line_start":272,"line_end":272,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5657},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141493,"byte_end":141497,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"Span","qualname":"::utils::span::Span","value":"Span { content, attr, width }","parent":null,"children":[{"krate":0,"index":5660},{"krate":0,"index":5661},{"krate":0,"index":5662}],"decl_id":null,"docs":" A resolved span borrowing its source string.\n","sig":null,"attributes":[{"value":"/ A resolved span borrowing its source string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141394,"byte_end":141442,"line_start":282,"line_end":282,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":5660},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141545,"byte_end":141552,"line_start":286,"line_end":286,"column_start":9,"column_end":16},"name":"content","qualname":"::utils::span::Span::content","value":"&'a str","parent":{"krate":0,"index":5657},"children":[],"decl_id":null,"docs":" Content of this span.\n","sig":null,"attributes":[{"value":"/ Content of this span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141511,"byte_end":141536,"line_start":285,"line_end":285,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":5661},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141615,"byte_end":141619,"line_start":289,"line_end":289,"column_start":9,"column_end":13},"name":"attr","qualname":"::utils::span::Span::attr","value":"&'a T","parent":{"krate":0,"index":5657},"children":[],"decl_id":null,"docs":" Attribute associated to this span.\n","sig":null,"attributes":[{"value":"/ Attribute associated to this span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141568,"byte_end":141606,"line_start":288,"line_end":288,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5662},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141678,"byte_end":141683,"line_start":292,"line_end":292,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::span::Span::width","value":"usize","parent":{"krate":0,"index":5657},"children":[],"decl_id":null,"docs":" Width of the text for this span.\n","sig":null,"attributes":[{"value":"/ Width of the text for this span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141633,"byte_end":141669,"line_start":291,"line_end":291,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141792,"byte_end":141799,"line_start":297,"line_end":297,"column_start":12,"column_end":19},"name":"resolve","qualname":"<IndexedSpan<T>>::resolve","value":"pub fn resolve<'a>(&'a Self, &'a str) -> Span where T: 'a","parent":null,"children":[],"decl_id":null,"docs":" Resolve the span to a string slice and an attribute.\n","sig":null,"attributes":[{"value":"/ Resolve the span to a string slice and an attribute.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141724,"byte_end":141780,"line_start":296,"line_end":296,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142083,"byte_end":142091,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexedSpan<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an empty span.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an empty span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142025,"byte_end":142071,"line_start":308,"line_end":308,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142221,"byte_end":142236,"line_start":314,"line_end":314,"column_start":12,"column_end":27},"name":"simple_borrowed","qualname":"<IndexedSpan<T>>::simple_borrowed","value":"pub fn simple_borrowed(&str, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a single indexed span around the entire text.\n","sig":null,"attributes":[{"value":"/ Returns a single indexed span around the entire text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142152,"byte_end":142209,"line_start":313,"line_end":313,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142564,"byte_end":142576,"line_start":326,"line_end":326,"column_start":12,"column_end":24},"name":"simple_owned","qualname":"<IndexedSpan<T>>::simple_owned","value":"pub fn simple_owned(String, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a single owned indexed span around the entire text.\n","sig":null,"attributes":[{"value":"/ Returns a single owned indexed span around the entire text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142489,"byte_end":142552,"line_start":325,"line_end":325,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142963,"byte_end":142971,"line_start":340,"line_end":340,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::utils::span::IndexedCow::Borrowed","value":"IndexedCow::Borrowed { start, end }","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":" Indexes content in a separate string.\n","sig":null,"attributes":[{"value":"/ Indexes content in a separate string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142917,"byte_end":142958,"line_start":339,"line_end":339,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5690},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143179,"byte_end":143184,"line_start":349,"line_end":349,"column_start":5,"column_end":10},"name":"Owned","qualname":"::utils::span::IndexedCow::Owned","value":"IndexedCow::Owned(String)","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":" Owns its content.\n","sig":null,"attributes":[{"value":"/ Owns its content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143153,"byte_end":143174,"line_start":348,"line_end":348,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142900,"byte_end":142910,"line_start":338,"line_end":338,"column_start":10,"column_end":20},"name":"IndexedCow","qualname":"::utils::span::IndexedCow","value":"pub enum IndexedCow {\n    Borrowed {\n        start: usize,\n        end: usize,\n    },\n    Owned(String),\n}","parent":null,"children":[{"krate":0,"index":5687},{"krate":0,"index":5690}],"decl_id":null,"docs":" A span of text that can be either owned, or indexed in another String.\n","sig":null,"attributes":[{"value":"/ A span of text that can be either owned, or indexed in another String.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":142777,"byte_end":142851,"line_start":336,"line_end":336,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143270,"byte_end":143277,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"resolve","qualname":"<IndexedCow>::resolve","value":"pub fn resolve<'a>(&'a Self, &'a str) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Resolve the span to a string slice.\n","sig":null,"attributes":[{"value":"/ Resolve the span to a string slice.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143219,"byte_end":143258,"line_start":353,"line_end":353,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143638,"byte_end":143646,"line_start":364,"line_end":364,"column_start":12,"column_end":20},"name":"from_cow","qualname":"<IndexedCow>::from_cow","value":"pub fn from_cow(Cow<, str>, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an indexed view of the given item.","sig":null,"attributes":[{"value":"/ Returns an indexed view of the given item.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143492,"byte_end":143538,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143543,"byte_end":143546,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ **Note**: it is assumed `cow`, if borrowed, is a substring of `source`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143551,"byte_end":143626,"line_start":363,"line_end":363,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":144375,"byte_end":144383,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexedCow>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this represents an empty span.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this represents an empty span.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":144311,"byte_end":144363,"line_start":382,"line_end":382,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":144719,"byte_end":144725,"line_start":393,"line_end":393,"column_start":12,"column_end":18},"name":"offset","qualname":"<IndexedCow>::offset","value":"pub fn offset(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" If `self` is borrowed, offset its indices by the given value.","sig":null,"attributes":[{"value":"/ If `self` is borrowed, offset its indices by the given value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":144575,"byte_end":144640,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":144645,"byte_end":144648,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Useful to update spans when concatenating sources.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":144653,"byte_end":144707,"line_start":392,"line_end":392,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"align","qualname":"::align","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","parent":null,"children":[{"krate":0,"index":5704},{"krate":0,"index":5707},{"krate":0,"index":1264},{"krate":0,"index":5709},{"krate":0,"index":5716},{"krate":0,"index":5718},{"krate":0,"index":5725},{"krate":0,"index":1271},{"krate":0,"index":1273}],"decl_id":null,"docs":" Tools to control view alignment.\n","sig":null,"attributes":[{"value":"/ Tools to control view alignment.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":144949,"byte_end":144985,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5704},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145090,"byte_end":145095,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Align","qualname":"::align::Align","value":"Align { h, v }","parent":null,"children":[{"krate":0,"index":5705},{"krate":0,"index":5706}],"decl_id":null,"docs":" Specifies the alignment along both horizontal and vertical directions.\n","sig":null,"attributes":[{"value":"/ Specifies the alignment along both horizontal and vertical directions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":144987,"byte_end":145061,"line_start":3,"line_end":3,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":5705},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145142,"byte_end":145143,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"h","qualname":"::align::Align::h","value":"align::HAlign","parent":{"krate":0,"index":5704},"children":[],"decl_id":null,"docs":" Horizontal alignment policy\n","sig":null,"attributes":[{"value":"/ Horizontal alignment policy","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145102,"byte_end":145133,"line_start":6,"line_end":6,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5706},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145195,"byte_end":145196,"line_start":9,"line_end":9,"column_start":9,"column_end":10},"name":"v","qualname":"::align::Align::v","value":"align::VAlign","parent":{"krate":0,"index":5704},"children":[],"decl_id":null,"docs":" Vertical alignment policy\n","sig":null,"attributes":[{"value":"/ Vertical alignment policy","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145157,"byte_end":145186,"line_start":8,"line_end":8,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145295,"byte_end":145298,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Align>::new","value":"pub fn new(HAlign, VAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Align object from the given alignments.\n","sig":null,"attributes":[{"value":"/ Creates a new Align object from the given alignments.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145226,"byte_end":145283,"line_start":13,"line_end":13,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145410,"byte_end":145418,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"top_left","qualname":"<Align>::top_left","value":"pub fn top_left() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a top-left alignment.\n","sig":null,"attributes":[{"value":"/ Creates a top-left alignment.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145365,"byte_end":145398,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145534,"byte_end":145543,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"top_right","qualname":"<Align>::top_right","value":"pub fn top_right() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a top-right alignment.\n","sig":null,"attributes":[{"value":"/ Creates a top-right alignment.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145488,"byte_end":145522,"line_start":23,"line_end":23,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145662,"byte_end":145670,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"bot_left","qualname":"<Align>::bot_left","value":"pub fn bot_left() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a bottom-left alignment.\n","sig":null,"attributes":[{"value":"/ Creates a bottom-left alignment.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145614,"byte_end":145650,"line_start":28,"line_end":28,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145792,"byte_end":145801,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"bot_right","qualname":"<Align>::bot_right","value":"pub fn bot_right() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a bottom-right alignment.\n","sig":null,"attributes":[{"value":"/ Creates a bottom-right alignment.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145743,"byte_end":145780,"line_start":33,"line_end":33,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145951,"byte_end":145957,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"center","qualname":"<Align>::center","value":"pub fn center() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an alignment centered both horizontally and vertically.\n","sig":null,"attributes":[{"value":"/ Creates an alignment centered both horizontally and vertically.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145872,"byte_end":145939,"line_start":38,"line_end":38,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5710},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146151,"byte_end":146155,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Left","qualname":"::align::HAlign::Left","value":"HAlign::Left","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Place the element to the left of available space\n","sig":null,"attributes":[{"value":"/ Place the element to the left of available space","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146094,"byte_end":146146,"line_start":47,"line_end":47,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5712},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146233,"byte_end":146239,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"Center","qualname":"::align::HAlign::Center","value":"HAlign::Center","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Place the element horizontally in the center of available space\n","sig":null,"attributes":[{"value":"/ Place the element horizontally in the center of available space","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146161,"byte_end":146228,"line_start":49,"line_end":49,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5714},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146303,"byte_end":146308,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Right","qualname":"::align::HAlign::Right","value":"HAlign::Right","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Place the element to the right of available space\n","sig":null,"attributes":[{"value":"/ Place the element to the right of available space","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146245,"byte_end":146298,"line_start":51,"line_end":51,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":5709},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146081,"byte_end":146087,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"HAlign","qualname":"::align::HAlign","value":"pub enum HAlign { Left, Center, Right, }","parent":null,"children":[{"krate":0,"index":5710},{"krate":0,"index":5712},{"krate":0,"index":5714}],"decl_id":null,"docs":" Horizontal alignment\n","sig":null,"attributes":[{"value":"/ Horizontal alignment","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146030,"byte_end":146054,"line_start":44,"line_end":44,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5719},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146431,"byte_end":146434,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"Top","qualname":"::align::VAlign::Top","value":"VAlign::Top","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" Place the element at the top of available space\n","sig":null,"attributes":[{"value":"/ Place the element at the top of available space","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146375,"byte_end":146426,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146510,"byte_end":146516,"line_start":61,"line_end":61,"column_start":5,"column_end":11},"name":"Center","qualname":"::align::VAlign::Center","value":"VAlign::Center","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" Place the element vertically in the center of available space\n","sig":null,"attributes":[{"value":"/ Place the element vertically in the center of available space","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146440,"byte_end":146505,"line_start":60,"line_end":60,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5723},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146581,"byte_end":146587,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Bottom","qualname":"::align::VAlign::Bottom","value":"VAlign::Bottom","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" Place the element at the bottom of available space\n","sig":null,"attributes":[{"value":"/ Place the element at the bottom of available space","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146522,"byte_end":146576,"line_start":62,"line_end":62,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":5718},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146362,"byte_end":146368,"line_start":57,"line_end":57,"column_start":10,"column_end":16},"name":"VAlign","qualname":"::align::VAlign","value":"pub enum VAlign { Top, Center, Bottom, }","parent":null,"children":[{"krate":0,"index":5719},{"krate":0,"index":5721},{"krate":0,"index":5723}],"decl_id":null,"docs":" Vertical alignment\n","sig":null,"attributes":[{"value":"/ Vertical alignment","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146313,"byte_end":146335,"line_start":55,"line_end":55,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146850,"byte_end":146860,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<HAlign>::get_offset","value":"pub fn get_offset(&Self, usize, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset required to position a view.","sig":null,"attributes":[{"value":"/ Returns the offset required to position a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146610,"byte_end":146661,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146666,"byte_end":146669,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ When drawing a view with size `content` when the available size is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146674,"byte_end":146744,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ `container`, printing at the resulting offset will align the view as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146749,"byte_end":146821,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ desired.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146826,"byte_end":146838,"line_start":71,"line_end":71,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":147446,"byte_end":147456,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<VAlign>::get_offset","value":"pub fn get_offset(&Self, usize, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset required to position a view.","sig":null,"attributes":[{"value":"/ Returns the offset required to position a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":147206,"byte_end":147257,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":147262,"byte_end":147265,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ When drawing a view with size `content` when the available size is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":147270,"byte_end":147340,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ `container`, printing at the resulting offset will align the view as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":147345,"byte_end":147417,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ desired.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":147422,"byte_end":147434,"line_start":90,"line_end":90,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"direction","qualname":"::direction","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":5727},{"krate":0,"index":5732},{"krate":0,"index":5734},{"krate":0,"index":5735},{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":1282},{"krate":0,"index":5740},{"krate":0,"index":5747},{"krate":0,"index":5749},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":1295},{"krate":0,"index":5756},{"krate":0,"index":5761},{"krate":0,"index":5763},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":1305},{"krate":0,"index":5769},{"krate":0,"index":5780},{"krate":0,"index":5782},{"krate":0,"index":5784},{"krate":0,"index":5785},{"krate":0,"index":5786},{"krate":0,"index":1307}],"decl_id":null,"docs":" Direction-related structures.","sig":null,"attributes":[{"value":"/ Direction-related structures.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":147784,"byte_end":147817,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":147818,"byte_end":147821,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module defines two main concepts: [`Orientation`] and [`Direction`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":147822,"byte_end":147899,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":147900,"byte_end":147903,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`Orientation`]: direction::Orientation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":147904,"byte_end":147947,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/ [`Direction`]: direction::Direction","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":147948,"byte_end":147987,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":147988,"byte_end":147991,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ### Orientation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":147992,"byte_end":148011,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148012,"byte_end":148015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Orientation` is a simple enum that can take two values:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148016,"byte_end":148076,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/ `Horizontal` or `Vertical`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148077,"byte_end":148108,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148109,"byte_end":148112,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ### Direction","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148113,"byte_end":148130,"line_start":13,"line_end":13,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148131,"byte_end":148134,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Direction` is a bit more complex, and can be of two kinds:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148135,"byte_end":148198,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148199,"byte_end":148202,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * Absolute direction: left, up, right, or down","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148203,"byte_end":148253,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/ * Relative direction: front or back. Its actual direction depends on the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148254,"byte_end":148330,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/   orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148331,"byte_end":148349,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148350,"byte_end":148353,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/   Usually, \"front\" refers to the \"forward\" direction, or the \"next\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148354,"byte_end":148425,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/   element. For example, for a vertical `LinearLayout`, \"front\" would refer","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148426,"byte_end":148504,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/   to the \"down\" direction.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148505,"byte_end":148535,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148536,"byte_end":148539,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/   This is mostly relevant when referring to change of focus. Hitting the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148540,"byte_end":148616,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/   `Tab` key would usually cycle focus in the \"front\" direction, while","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148617,"byte_end":148690,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   using the arrow keys would use absolute directions instead.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148691,"byte_end":148756,"line_start":27,"line_end":27,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5728},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148958,"byte_end":148968,"line_start":36,"line_end":36,"column_start":5,"column_end":15},"name":"Horizontal","qualname":"::direction::Orientation::Horizontal","value":"Orientation::Horizontal","parent":{"krate":0,"index":5727},"children":[],"decl_id":null,"docs":" Horizontal orientation\n","sig":null,"attributes":[{"value":"/ Horizontal orientation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148927,"byte_end":148953,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5730},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149003,"byte_end":149011,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"Vertical","qualname":"::direction::Orientation::Vertical","value":"Orientation::Vertical","parent":{"krate":0,"index":5727},"children":[],"decl_id":null,"docs":" Vertical orientation\n","sig":null,"attributes":[{"value":"/ Vertical orientation","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148974,"byte_end":148998,"line_start":37,"line_end":37,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":5727},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148909,"byte_end":148920,"line_start":34,"line_end":34,"column_start":10,"column_end":21},"name":"Orientation","qualname":"::direction::Orientation","value":"pub enum Orientation { Horizontal, Vertical, }","parent":null,"children":[{"krate":0,"index":5728},{"krate":0,"index":5730}],"decl_id":null,"docs":" Describes a vertical or horizontal orientation for a view.\n","sig":null,"attributes":[{"value":"/ Describes a vertical or horizontal orientation for a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":148796,"byte_end":148858,"line_start":32,"line_end":32,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149092,"byte_end":149096,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"pair","qualname":"<Orientation>::pair","value":"pub fn pair() -> XY<Orientation>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `XY(Horizontal, Vertical)`.\n","sig":null,"attributes":[{"value":"/ Returns a `XY(Horizontal, Vertical)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149039,"byte_end":149080,"line_start":42,"line_end":42,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149378,"byte_end":149381,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"get","qualname":"<Orientation>::get","value":"pub fn get<T: Clone>(Self, &XY<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the component of `v` corresponding to this orientation.","sig":null,"attributes":[{"value":"/ Returns the component of `v` corresponding to this orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149195,"byte_end":149262,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149267,"byte_end":149270,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ (`Horizontal` will return the x value,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149275,"byte_end":149317,"line_start":49,"line_end":49,"column_start":5,"column_end":47}},{"value":"/ and `Vertical` will return the y value.)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149322,"byte_end":149366,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149501,"byte_end":149505,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"swap","qualname":"<Orientation>::swap","value":"pub fn swap(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the other orientation.\n","sig":null,"attributes":[{"value":"/ Returns the other orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149455,"byte_end":149489,"line_start":55,"line_end":55,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150099,"byte_end":150106,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Orientation>::get_ref","value":"pub fn get_ref<T>(Self, &mut XY<T>) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the component of the given vector\n corresponding to this orientation.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the component of the given vector","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149688,"byte_end":149756,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ corresponding to this orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149761,"byte_end":149799,"line_start":64,"line_end":64,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149804,"byte_end":149807,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149812,"byte_end":149826,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149831,"byte_end":149842,"line_start":67,"line_end":67,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149847,"byte_end":149869,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/ # use cursive::direction::Orientation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149874,"byte_end":149916,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ let o = Orientation::Horizontal;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149921,"byte_end":149957,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/ let mut xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149962,"byte_end":149993,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ *o.get_ref(&mut xy) = 42;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149998,"byte_end":150027,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150032,"byte_end":150035,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy, XY::new(42, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150040,"byte_end":150075,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150080,"byte_end":150087,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150553,"byte_end":150558,"line_start":88,"line_end":88,"column_start":12,"column_end":17},"name":"stack","qualname":"<Orientation>::stack","value":"pub fn stack<'a, T: Iterator<Item = &'a Vec2>>(Self, T) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Takes an iterator on sizes, and stack them in the current orientation,\n returning the size of the required bounding box.","sig":null,"attributes":[{"value":"/ Takes an iterator on sizes, and stack them in the current orientation,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150281,"byte_end":150355,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ returning the size of the required bounding box.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150360,"byte_end":150412,"line_start":84,"line_end":84,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150417,"byte_end":150420,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ * For an horizontal view, returns `(Sum(x), Max(y))`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150425,"byte_end":150482,"line_start":86,"line_end":86,"column_start":5,"column_end":62}},{"value":"/ * For a vertical view, returns `(Max(x), Sum(y))`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150487,"byte_end":150541,"line_start":87,"line_end":87,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151427,"byte_end":151435,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"make_vec","qualname":"<Orientation>::make_vec","value":"pub fn make_vec(Self, usize, usize) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Vec2` with `main_axis` in `self`'s axis, and\n `second_axis` for the other axis.","sig":null,"attributes":[{"value":"/ Creates a new `Vec2` with `main_axis` in `self`'s axis, and","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150906,"byte_end":150969,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/ `second_axis` for the other axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":150974,"byte_end":151011,"line_start":100,"line_end":100,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151016,"byte_end":151019,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151024,"byte_end":151038,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151043,"byte_end":151046,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151051,"byte_end":151062,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ # use cursive::direction::Orientation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151067,"byte_end":151109,"line_start":105,"line_end":105,"column_start":5,"column_end":47}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151114,"byte_end":151143,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/ let o = Orientation::Horizontal;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151148,"byte_end":151184,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ let vec = o.make_vec(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151189,"byte_end":151220,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151225,"byte_end":151228,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec, Vec2::new(1, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151233,"byte_end":151270,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151275,"byte_end":151278,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let o = Orientation::Vertical;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151283,"byte_end":151317,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/ let vec = o.make_vec(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151322,"byte_end":151353,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151358,"byte_end":151361,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec, Vec2::new(2, 1));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151366,"byte_end":151403,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151408,"byte_end":151415,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5741},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151932,"byte_end":151935,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"Abs","qualname":"::direction::Direction::Abs","value":"Direction::Abs(Absolute)","parent":{"krate":0,"index":5740},"children":[],"decl_id":null,"docs":" An absolute direction.\n","sig":null,"attributes":[{"value":"/ An absolute direction.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151901,"byte_end":151927,"line_start":131,"line_end":131,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5744},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152008,"byte_end":152011,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"Rel","qualname":"::direction::Direction::Rel","value":"Direction::Rel(Relative)","parent":{"krate":0,"index":5740},"children":[],"decl_id":null,"docs":" A direction relative to the current orientation.\n","sig":null,"attributes":[{"value":"/ A direction relative to the current orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151951,"byte_end":152003,"line_start":133,"line_end":133,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151885,"byte_end":151894,"line_start":130,"line_end":130,"column_start":10,"column_end":19},"name":"Direction","qualname":"::direction::Direction","value":"pub enum Direction { Abs(Absolute), Rel(Relative), }","parent":null,"children":[{"krate":0,"index":5741},{"krate":0,"index":5744}],"decl_id":null,"docs":" Represents a direction, either absolute or orientation-dependent.","sig":null,"attributes":[{"value":"/ Represents a direction, either absolute or orientation-dependent.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151658,"byte_end":151727,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151728,"byte_end":151731,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ * Absolute directions are Up, Down, Left, and Right.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151732,"byte_end":151788,"line_start":127,"line_end":127,"column_start":1,"column_end":57}},{"value":"/ * Relative directions are Front and Back.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":151789,"byte_end":151834,"line_start":128,"line_end":128,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152281,"byte_end":152289,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"relative","qualname":"<Direction>::relative","value":"pub fn relative(Self, Orientation) -> Option<Relative>","parent":null,"children":[],"decl_id":null,"docs":" Returns the relative direction for the given orientation.","sig":null,"attributes":[{"value":"/ Returns the relative direction for the given orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152047,"byte_end":152108,"line_start":138,"line_end":138,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152113,"byte_end":152116,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Some combination have no corresponding relative position. For example,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152121,"byte_end":152195,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ `Direction::Abs(Up)` means nothing for `Orientation::Horizontal`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152200,"byte_end":152269,"line_start":141,"line_end":141,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152568,"byte_end":152576,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"absolute","qualname":"<Direction>::absolute","value":"pub fn absolute(Self, Orientation) -> Absolute","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute direction in the given `orientation`.\n","sig":null,"attributes":[{"value":"/ Returns the absolute direction in the given `orientation`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152494,"byte_end":152556,"line_start":149,"line_end":149,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152834,"byte_end":152838,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"back","qualname":"<Direction>::back","value":"pub fn back() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Rel(Relative::Back)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Rel(Relative::Back)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152767,"byte_end":152822,"line_start":157,"line_end":157,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152969,"byte_end":152974,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"front","qualname":"<Direction>::front","value":"pub fn front() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Rel(Relative::Front)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Rel(Relative::Front)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152901,"byte_end":152957,"line_start":162,"line_end":162,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153105,"byte_end":153109,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"left","qualname":"<Direction>::left","value":"pub fn left() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::Left)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::Left)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153038,"byte_end":153093,"line_start":167,"line_end":167,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153240,"byte_end":153245,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"right","qualname":"<Direction>::right","value":"pub fn right() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::Right)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::Right)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153172,"byte_end":153228,"line_start":172,"line_end":172,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153374,"byte_end":153376,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"name":"up","qualname":"<Direction>::up","value":"pub fn up() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::Up)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::Up)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153309,"byte_end":153362,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153504,"byte_end":153508,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"down","qualname":"<Direction>::down","value":"pub fn down() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::Down)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::Down)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153437,"byte_end":153492,"line_start":182,"line_end":182,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153638,"byte_end":153642,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"none","qualname":"<Direction>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::None)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::None)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153571,"byte_end":153626,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5757},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153981,"byte_end":153986,"line_start":201,"line_end":201,"column_start":5,"column_end":10},"name":"Front","qualname":"::direction::Relative::Front","value":"Relative::Front","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Front relative direction.","sig":null,"attributes":[{"value":"/ Front relative direction.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153859,"byte_end":153888,"line_start":197,"line_end":197,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153893,"byte_end":153896,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ * Horizontally, this means `Left`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153901,"byte_end":153938,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ * Vertically, this means `Up`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153943,"byte_end":153976,"line_start":200,"line_end":200,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5759},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154118,"byte_end":154122,"line_start":207,"line_end":207,"column_start":5,"column_end":9},"name":"Back","qualname":"::direction::Relative::Back","value":"Relative::Back","parent":{"krate":0,"index":5756},"children":[],"decl_id":null,"docs":" Back relative direction.","sig":null,"attributes":[{"value":"/ Back relative direction.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153993,"byte_end":154021,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154026,"byte_end":154029,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ * Horizontally, this means `Right`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154034,"byte_end":154072,"line_start":205,"line_end":205,"column_start":5,"column_end":43}},{"value":"/ * Vertically, this means `Down`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154077,"byte_end":154113,"line_start":206,"line_end":206,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":5756},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153795,"byte_end":153803,"line_start":195,"line_end":195,"column_start":10,"column_end":18},"name":"Relative","qualname":"::direction::Relative","value":"pub enum Relative { Front, Back, }","parent":null,"children":[{"krate":0,"index":5757},{"krate":0,"index":5759}],"decl_id":null,"docs":" Direction relative to an orientation.\n","sig":null,"attributes":[{"value":"/ Direction relative to an orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":153703,"byte_end":153744,"line_start":193,"line_end":193,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154221,"byte_end":154229,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"absolute","qualname":"<Relative>::absolute","value":"pub fn absolute(Self, Orientation) -> Absolute","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute direction in the given `orientation`.\n","sig":null,"attributes":[{"value":"/ Returns the absolute direction in the given `orientation`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154147,"byte_end":154209,"line_start":211,"line_end":211,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5770},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154746,"byte_end":154750,"line_start":226,"line_end":226,"column_start":5,"column_end":9},"name":"Left","qualname":"::direction::Absolute::Left","value":"Absolute::Left","parent":{"krate":0,"index":5769},"children":[],"decl_id":null,"docs":" Left\n","sig":null,"attributes":[{"value":"/ Left","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154733,"byte_end":154741,"line_start":225,"line_end":225,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5772},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154767,"byte_end":154769,"line_start":228,"line_end":228,"column_start":5,"column_end":7},"name":"Up","qualname":"::direction::Absolute::Up","value":"Absolute::Up","parent":{"krate":0,"index":5769},"children":[],"decl_id":null,"docs":" Up\n","sig":null,"attributes":[{"value":"/ Up","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154756,"byte_end":154762,"line_start":227,"line_end":227,"column_start":5,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5774},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154789,"byte_end":154794,"line_start":230,"line_end":230,"column_start":5,"column_end":10},"name":"Right","qualname":"::direction::Absolute::Right","value":"Absolute::Right","parent":{"krate":0,"index":5769},"children":[],"decl_id":null,"docs":" Right\n","sig":null,"attributes":[{"value":"/ Right","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154775,"byte_end":154784,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154813,"byte_end":154817,"line_start":232,"line_end":232,"column_start":5,"column_end":9},"name":"Down","qualname":"::direction::Absolute::Down","value":"Absolute::Down","parent":{"krate":0,"index":5769},"children":[],"decl_id":null,"docs":" Down\n","sig":null,"attributes":[{"value":"/ Down","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154800,"byte_end":154808,"line_start":231,"line_end":231,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154925,"byte_end":154929,"line_start":237,"line_end":237,"column_start":5,"column_end":9},"name":"None","qualname":"::direction::Absolute::None","value":"Absolute::None","parent":{"krate":0,"index":5769},"children":[],"decl_id":null,"docs":" No real direction.","sig":null,"attributes":[{"value":"/ No real direction.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154824,"byte_end":154846,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154851,"byte_end":154854,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Used when the \"direction\" is accross layers for instance.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154859,"byte_end":154920,"line_start":236,"line_end":236,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":5769},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154718,"byte_end":154726,"line_start":224,"line_end":224,"column_start":10,"column_end":18},"name":"Absolute","qualname":"::direction::Absolute","value":"pub enum Absolute { Left, Up, Right, Down, None, }","parent":null,"children":[{"krate":0,"index":5770},{"krate":0,"index":5772},{"krate":0,"index":5774},{"krate":0,"index":5776},{"krate":0,"index":5778}],"decl_id":null,"docs":" Absolute direction (up, down, left, right).\n","sig":null,"attributes":[{"value":"/ Absolute direction (up, down, left, right).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154620,"byte_end":154667,"line_start":222,"line_end":222,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":155154,"byte_end":155162,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"relative","qualname":"<Absolute>::relative","value":"pub fn relative(Self, Orientation) -> Option<Relative>","parent":null,"children":[],"decl_id":null,"docs":" Returns the relative direction for the given orientation.","sig":null,"attributes":[{"value":"/ Returns the relative direction for the given orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154954,"byte_end":155015,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":155020,"byte_end":155023,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the direction does not apply to the given","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":155028,"byte_end":155093,"line_start":243,"line_end":243,"column_start":5,"column_end":70}},{"value":"/ orientation (ex: `Left` and `Vertical`).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":155098,"byte_end":155142,"line_start":244,"line_end":244,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"logger","qualname":"::logger","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":5788},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5796},{"krate":0,"index":1326},{"krate":0,"index":1330}],"decl_id":null,"docs":" Logging utilities\n","sig":null,"attributes":[{"value":"/ Logging utilities","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":155561,"byte_end":155582,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":155854,"byte_end":155860,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Record","qualname":"::logger::Record","value":"Record { level, time, message }","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325}],"decl_id":null,"docs":" A log record.\n","sig":null,"attributes":[{"value":"/ A log record.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":155825,"byte_end":155842,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":155910,"byte_end":155915,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"level","qualname":"::logger::Record::level","value":"log::Level","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Log level used for this record\n","sig":null,"attributes":[{"value":"/ Log level used for this record","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":155867,"byte_end":155901,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":155974,"byte_end":155978,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"time","qualname":"::logger::Record::time","value":"chrono::DateTime<chrono::Utc>","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Time this message was logged\n","sig":null,"attributes":[{"value":"/ Time this message was logged","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":155933,"byte_end":155965,"line_start":18,"line_end":18,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156043,"byte_end":156050,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"message","qualname":"::logger::Record::message","value":"std::string::String","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Message content\n","sig":null,"attributes":[{"value":"/ Message content","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156015,"byte_end":156034,"line_start":20,"line_end":20,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5788},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156164,"byte_end":156168,"line_start":26,"line_end":26,"column_start":20,"column_end":24},"name":"LOGS","qualname":"::logger::LOGS","value":"LOGS {  }","parent":null,"children":[{"krate":0,"index":5789}],"decl_id":null,"docs":" Circular buffer for logs. Use it to implement `DebugView`.\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.4.0\\src\\lib.rs","byte_start":13717517,"byte_end":13717555,"line_start":155,"line_end":155,"column_start":9,"column_end":47}},{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.4.0\\src\\lib.rs","byte_start":13717564,"byte_end":13717594,"line_start":156,"line_end":156,"column_start":9,"column_end":39}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.4.0\\src\\lib.rs","byte_start":13717603,"byte_end":13717622,"line_start":157,"line_end":157,"column_start":9,"column_end":28}}]},{"kind":"Static","id":{"krate":0,"index":5790},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156164,"byte_end":156168,"line_start":26,"line_end":26,"column_start":20,"column_end":24},"name":"LOGS","qualname":"::logger::LOGS","value":"LOGS","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":157053,"byte_end":157057,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"init","qualname":"::logger::init","value":"pub fn init()","parent":null,"children":[],"decl_id":null,"docs":" Initialize the Cursive logger.","sig":null,"attributes":[{"value":"/ Initialize the Cursive logger.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156795,"byte_end":156829,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156830,"byte_end":156833,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Make sure this is the only logger your are using.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156834,"byte_end":156887,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156888,"byte_end":156891,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Use a [`DebugView`](crate::views::DebugView) to see the logs, or use","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156892,"byte_end":156964,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ [`Cursive::toggle_debug_console()`](crate::Cursive::toggle_debug_console()).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156965,"byte_end":157045,"line_start":56,"line_end":56,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"menu","qualname":"::menu","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":5799},{"krate":0,"index":5801},{"krate":0,"index":5803},{"krate":0,"index":5805},{"krate":0,"index":5816},{"krate":0,"index":1344},{"krate":0,"index":1350}],"decl_id":null,"docs":" Build menu trees.","sig":null,"attributes":[{"value":"/ Build menu trees.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157356,"byte_end":157377,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157378,"byte_end":157381,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Menus are a way to arrange many actions in groups of more manageable size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157382,"byte_end":157460,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157461,"byte_end":157464,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A menu can be seen as a `MenuTree`. It has a list of children:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157465,"byte_end":157531,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157532,"byte_end":157535,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * Leaf nodes are made of a label and a callback","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157536,"byte_end":157587,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/ * Sub-trees are made of a label, and another `MenuTree`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157588,"byte_end":157648,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/ * Delimiters are just there to separate groups of related children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157649,"byte_end":157720,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157721,"byte_end":157724,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The [menubar] is the main way to show menus.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157725,"byte_end":157773,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157774,"byte_end":157777,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [menubar]: ../struct.Cursive.html#method.menubar","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157778,"byte_end":157830,"line_start":13,"line_end":13,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":5799},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157977,"byte_end":157985,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"MenuTree","qualname":"::menu::MenuTree","value":"MenuTree { children }","parent":null,"children":[{"krate":0,"index":5800}],"decl_id":null,"docs":" Root of a menu tree.\n","sig":null,"attributes":[{"value":"/ Root of a menu tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157915,"byte_end":157939,"line_start":20,"line_end":20,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":5800},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158015,"byte_end":158023,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"children","qualname":"::menu::MenuTree::children","value":"std::vec::Vec<menu::MenuItem>","parent":{"krate":0,"index":5799},"children":[],"decl_id":null,"docs":" Menu items\n","sig":null,"attributes":[{"value":"/ Menu items","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":157992,"byte_end":158006,"line_start":23,"line_end":23,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5806},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158152,"byte_end":158156,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Leaf","qualname":"::menu::MenuItem::Leaf","value":"MenuItem::Leaf(String, Callback)","parent":{"krate":0,"index":5805},"children":[],"decl_id":null,"docs":" Actionnable button with a label.\n","sig":null,"attributes":[{"value":"/ Actionnable button with a label.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158111,"byte_end":158147,"line_start":30,"line_end":30,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5810},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158211,"byte_end":158218,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Subtree","qualname":"::menu::MenuItem::Subtree","value":"MenuItem::Subtree(String, Rc<MenuTree>)","parent":{"krate":0,"index":5805},"children":[],"decl_id":null,"docs":" Sub-menu with a label.\n","sig":null,"attributes":[{"value":"/ Sub-menu with a label.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158180,"byte_end":158206,"line_start":32,"line_end":32,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5814},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158281,"byte_end":158290,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Delimiter","qualname":"::menu::MenuItem::Delimiter","value":"MenuItem::Delimiter","parent":{"krate":0,"index":5805},"children":[],"decl_id":null,"docs":" Delimiter without a label.\n","sig":null,"attributes":[{"value":"/ Delimiter without a label.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158246,"byte_end":158276,"line_start":34,"line_end":34,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":5805},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158096,"byte_end":158104,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"name":"MenuItem","qualname":"::menu::MenuItem","value":"pub enum MenuItem {\n    Leaf(String, Callback),\n    Subtree(String, Rc<MenuTree>),\n    Delimiter,\n}","parent":null,"children":[{"krate":0,"index":5806},{"krate":0,"index":5810},{"krate":0,"index":5814}],"decl_id":null,"docs":" Node in the menu tree.\n","sig":null,"attributes":[{"value":"/ Node in the menu tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158043,"byte_end":158069,"line_start":27,"line_end":27,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158429,"byte_end":158434,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"label","qualname":"<MenuItem>::label","value":"pub fn label(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the label for this item.","sig":null,"attributes":[{"value":"/ Returns the label for this item.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158315,"byte_end":158351,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158356,"byte_end":158359,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Returns an empty string if `self` is a delimiter.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158364,"byte_end":158417,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158709,"byte_end":158721,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"is_delimiter","qualname":"<MenuItem>::is_delimiter","value":"pub fn is_delimiter(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a delimiter.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a delimiter.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158653,"byte_end":158697,"line_start":51,"line_end":51,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158903,"byte_end":158910,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"is_leaf","qualname":"<MenuItem>::is_leaf","value":"pub fn is_leaf(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a leaf node.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a leaf node.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158847,"byte_end":158891,"line_start":59,"line_end":59,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159091,"byte_end":159101,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_subtree","qualname":"<MenuItem>::is_subtree","value":"pub fn is_subtree(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a subtree.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a subtree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159037,"byte_end":159079,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159375,"byte_end":159385,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"as_subtree","qualname":"<MenuItem>::as_subtree","value":"pub fn as_subtree(&mut Self) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the subtree, if applicable.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the subtree, if applicable.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159231,"byte_end":159292,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159297,"byte_end":159300,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not a `MenuItem::Subtree`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159305,"byte_end":159363,"line_start":77,"line_end":77,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159626,"byte_end":159629,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<MenuTree>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty tree.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159584,"byte_end":159614,"line_start":87,"line_end":87,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159730,"byte_end":159735,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"clear","qualname":"<MenuTree>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove every children from this tree.\n","sig":null,"attributes":[{"value":"/ Remove every children from this tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159677,"byte_end":159718,"line_start":92,"line_end":92,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159845,"byte_end":159851,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"insert","qualname":"<MenuTree>::insert","value":"pub fn insert(&mut Self, usize, MenuItem)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at the given position.\n","sig":null,"attributes":[{"value":"/ Inserts an item at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159791,"byte_end":159833,"line_start":97,"line_end":97,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159999,"byte_end":160015,"line_start":103,"line_end":103,"column_start":12,"column_end":28},"name":"insert_delimiter","qualname":"<MenuTree>::insert_delimiter","value":"pub fn insert_delimiter(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a delimiter at the given position.\n","sig":null,"attributes":[{"value":"/ Inserts a delimiter at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159941,"byte_end":159987,"line_start":102,"line_end":102,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160152,"byte_end":160165,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"add_delimiter","qualname":"<MenuTree>::add_delimiter","value":"pub fn add_delimiter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the end of this tree.\n","sig":null,"attributes":[{"value":"/ Adds a delimiter to the end of this tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160095,"byte_end":160140,"line_start":107,"line_end":107,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160338,"byte_end":160347,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<MenuTree>::delimiter","value":"pub fn delimiter(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the end of this tree - chainable variant.\n","sig":null,"attributes":[{"value":"/ Adds a delimiter to the end of this tree - chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160261,"byte_end":160326,"line_start":113,"line_end":113,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160478,"byte_end":160486,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"add_leaf","qualname":"<MenuTree>::add_leaf","value":"pub fn add_leaf<S, F>(&mut Self, S, F) where S: Into<String>, F: 'static +\nFn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a actionnable leaf to the end of this tree.\n","sig":null,"attributes":[{"value":"/ Adds a actionnable leaf to the end of this tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160414,"byte_end":160466,"line_start":118,"line_end":118,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160742,"byte_end":160753,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"insert_leaf","qualname":"<MenuTree>::insert_leaf","value":"pub fn insert_leaf<S, F>(&mut Self, usize, S, F) where S: Into<String>,\nF: 'static + Fn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a leaf at the given position.\n","sig":null,"attributes":[{"value":"/ Inserts a leaf at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160689,"byte_end":160730,"line_start":128,"line_end":128,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":161077,"byte_end":161081,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"leaf","qualname":"<MenuTree>::leaf","value":"pub fn leaf<S, F>(Self, S, F) -> Self where S: Into<String>, F: 'static +\nFn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a actionnable leaf to the end of this tree - chainable variant.\n","sig":null,"attributes":[{"value":"/ Adds a actionnable leaf to the end of this tree - chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":160993,"byte_end":161065,"line_start":138,"line_end":138,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":161317,"byte_end":161331,"line_start":148,"line_end":148,"column_start":12,"column_end":26},"name":"insert_subtree","qualname":"<MenuTree>::insert_subtree","value":"pub fn insert_subtree<S>(&mut Self, usize, S, MenuTree) where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a subtree at the given position.\n","sig":null,"attributes":[{"value":"/ Inserts a subtree at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":161261,"byte_end":161305,"line_start":147,"line_end":147,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":161613,"byte_end":161624,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"add_subtree","qualname":"<MenuTree>::add_subtree","value":"pub fn add_subtree<S>(&mut Self, S, MenuTree) where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Adds a submenu to the end of this tree.\n","sig":null,"attributes":[{"value":"/ Adds a submenu to the end of this tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":161558,"byte_end":161601,"line_start":157,"line_end":157,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":161874,"byte_end":161881,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"subtree","qualname":"<MenuTree>::subtree","value":"pub fn subtree<S>(Self, S, MenuTree) -> Self where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Adds a submenu to the end of this tree - chainable variant.\n","sig":null,"attributes":[{"value":"/ Adds a submenu to the end of this tree - chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":161799,"byte_end":161862,"line_start":166,"line_end":166,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162144,"byte_end":162151,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MenuTree>::get_mut","value":"pub fn get_mut(&mut Self, usize) -> Option<&mut MenuItem>","parent":null,"children":[],"decl_id":null,"docs":" Looks for the child at the given position.","sig":null,"attributes":[{"value":"/ Looks for the child at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162033,"byte_end":162079,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162084,"byte_end":162087,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `i >= self.len()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162092,"byte_end":162132,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162383,"byte_end":162394,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_subtree","qualname":"<MenuTree>::get_subtree","value":"pub fn get_subtree(&mut Self, usize) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item at the given position.","sig":null,"attributes":[{"value":"/ Returns the item at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162244,"byte_end":162287,"line_start":181,"line_end":181,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162292,"byte_end":162295,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `i > self.len()` or if the item is not a subtree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162300,"byte_end":162371,"line_start":183,"line_end":183,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162623,"byte_end":162632,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"find_item","qualname":"<MenuTree>::find_item","value":"pub fn find_item(&mut Self, &str) -> Option<&mut MenuItem>","parent":null,"children":[],"decl_id":null,"docs":" Looks for a child with the given title.","sig":null,"attributes":[{"value":"/ Looks for a child with the given title.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162509,"byte_end":162552,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162557,"byte_end":162560,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no such label was found.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162565,"byte_end":162611,"line_start":190,"line_end":190,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162848,"byte_end":162860,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"find_subtree","qualname":"<MenuTree>::find_subtree","value":"pub fn find_subtree(&mut Self, &str) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Looks for a subtree with the given title.\n","sig":null,"attributes":[{"value":"/ Looks for a subtree with the given title.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":162791,"byte_end":162836,"line_start":197,"line_end":197,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163215,"byte_end":163228,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"find_position","qualname":"<MenuTree>::find_position","value":"pub fn find_position(&mut Self, &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of a child with the given label.","sig":null,"attributes":[{"value":"/ Returns the position of a child with the given label.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163087,"byte_end":163144,"line_start":206,"line_end":206,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163149,"byte_end":163152,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no such label was found.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163157,"byte_end":163203,"line_start":208,"line_end":208,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163434,"byte_end":163440,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"remove","qualname":"<MenuTree>::remove","value":"pub fn remove(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Removes the item at the given position.\n","sig":null,"attributes":[{"value":"/ Removes the item at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163379,"byte_end":163422,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163656,"byte_end":163659,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"len","qualname":"<MenuTree>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of direct children in this node.","sig":null,"attributes":[{"value":"/ Returns the number of direct children in this node.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163508,"byte_end":163563,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163568,"byte_end":163571,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * Includes delimiters.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163576,"byte_end":163602,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/ * Does not count nested children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163607,"byte_end":163644,"line_start":223,"line_end":223,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163777,"byte_end":163785,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MenuTree>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this tree has no children.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this tree has no children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":163717,"byte_end":163765,"line_start":228,"line_end":228,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"theme","qualname":"::theme","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1393},{"krate":0,"index":1406},{"krate":0,"index":1413},{"krate":0,"index":1463},{"krate":0,"index":1467},{"krate":0,"index":1524},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":6108},{"krate":0,"index":6112},{"krate":0,"index":6114},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":6116},{"krate":0,"index":6123},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1624}],"decl_id":null,"docs":" Handle colors and themes in the UI.","sig":null,"attributes":[{"value":"/ Handle colors and themes in the UI.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":163845,"byte_end":163884,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":163885,"byte_end":163888,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Colors","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":163889,"byte_end":163901,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":163902,"byte_end":163905,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Characters can be printed in the terminal with a specific color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":163906,"byte_end":163974,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ The [`Color`] enum represents the ways this can be set.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":163975,"byte_end":164034,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164035,"byte_end":164038,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`Color`]: enum.Color.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164039,"byte_end":164069,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164070,"byte_end":164073,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Palette","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164074,"byte_end":164087,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164088,"byte_end":164091,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ To achieve a customizable, yet unified look, Cursive uses a configurable","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164092,"byte_end":164168,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ palette of colors to be used through the entire application.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164169,"byte_end":164233,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164234,"byte_end":164237,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The [`PaletteColor`] enum defines possible entries in this palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164238,"byte_end":164309,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164310,"byte_end":164313,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`PaletteColor`]: enum.PaletteColor.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164314,"byte_end":164358,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164359,"byte_end":164362,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ These entries are:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164363,"byte_end":164385,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164386,"byte_end":164389,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * **`Background`**: used to color the application background","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164390,"byte_end":164454,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/   (around views).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164455,"byte_end":164476,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/   Defaults to **blue**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164477,"byte_end":164504,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ * **`Shadow`**: used to color shadow around views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164505,"byte_end":164559,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/   Defaults to **black**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164560,"byte_end":164588,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ * **`View`**: used to color the background for views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164589,"byte_end":164646,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/   Defaults to **white**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164647,"byte_end":164675,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ * **`Primary`**: used to print primary text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164676,"byte_end":164724,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/   Defaults to **black**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164725,"byte_end":164753,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ * **`Secondary`**: used to print secondary text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164754,"byte_end":164806,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/   Defaults to **blue**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164807,"byte_end":164834,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/ * **`Tertiary`**: used to print tertiary text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164835,"byte_end":164885,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/   Defaults to **white**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164886,"byte_end":164914,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * **`TitlePrimary`**: used to print primary titles.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164915,"byte_end":164970,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/   Defaults to **red**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164971,"byte_end":164997,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ * **`TitleSecondary`**: used to print secondary titles.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":164998,"byte_end":165057,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/   Defaults to **yellow**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165058,"byte_end":165087,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/ * **`Highlight`**: used to highlight selected items.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165088,"byte_end":165144,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/   Defaults to **red**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165145,"byte_end":165171,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ * **`HighlightInactive`**: used to highlight selected but inactive items.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165172,"byte_end":165249,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/   Defaults to **blue**.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165250,"byte_end":165277,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165278,"byte_end":165281,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ A [`Palette`] then maps each of these to an actual [`Color`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165282,"byte_end":165347,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165348,"byte_end":165351,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Palette`]: type.Palette.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165352,"byte_end":165386,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/ [`Color`]: enum.Color.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165387,"byte_end":165417,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165418,"byte_end":165421,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Color Types","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165422,"byte_end":165439,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165440,"byte_end":165443,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ When drawing views, color can be picked in two way:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165444,"byte_end":165499,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165500,"byte_end":165503,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ * An exact [`Color`] can be given directly","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165504,"byte_end":165550,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/ * A [`PaletteColor`] entry can be given, which will fetch whatever color","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165551,"byte_end":165627,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/   is currently defined for this.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165628,"byte_end":165664,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165665,"byte_end":165668,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The [`ColorType`] enum abstract over these two choices.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165669,"byte_end":165728,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165729,"byte_end":165732,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`ColorType`]: enum.ColorType.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165733,"byte_end":165771,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165772,"byte_end":165775,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Color Styles","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165776,"byte_end":165794,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165795,"byte_end":165798,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ To actually print anything, two colors must be picked: one for the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165799,"byte_end":165869,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ foreground, and one for the background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165870,"byte_end":165913,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165914,"byte_end":165917,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ As such, a [`ColorStyle`] is made of a pair of `ColorType`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165918,"byte_end":165981,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165982,"byte_end":165985,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Since some pairs are frequently used, `ColorStyle` defines some methods to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":165986,"byte_end":166064,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ create these usual values:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166065,"byte_end":166095,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166096,"byte_end":166099,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ * **`ColorStyle::background()`**: style used to print the application","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166100,"byte_end":166173,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/   background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166174,"byte_end":166191,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"/     * Its *background* color is `Background`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166192,"byte_end":166241,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/     * Its *foreground* color is unimportant as no characters are ever","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166242,"byte_end":166315,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/       printed in the background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166316,"byte_end":166352,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ * **`ColorStyle::shadow()`**: style used to print shadows behind views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166353,"byte_end":166428,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/     * Its *background* color is `Shadow`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166429,"byte_end":166474,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/     * Here again, the *foreground* color is unimportant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166475,"byte_end":166535,"line_start":77,"line_end":77,"column_start":1,"column_end":61}},{"value":"/ * **`ColorStyle::primary()`**: style used to print primary text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166536,"byte_end":166604,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     * Its *background* color is `View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166605,"byte_end":166648,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/     * Its *foreground* color is `Primary`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166649,"byte_end":166695,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/ * **`ColorStyle::secondary()`**: style used to print secondary text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166696,"byte_end":166768,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"/     * Its *background* color is `View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166769,"byte_end":166812,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/     * Its *foreground* color is `Secondary`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166813,"byte_end":166861,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"/ * **`ColorStyle::tertiary()`**: style used to print tertiary text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166862,"byte_end":166932,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/     * Its *background* color is `View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166933,"byte_end":166976,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/     * Its *foreground* color is `Tertiary`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":166977,"byte_end":167024,"line_start":86,"line_end":86,"column_start":1,"column_end":48}},{"value":"/ * **`ColorStyle::title_primary()`**: style used to print titles.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167025,"byte_end":167093,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/     * Its *background* color is `View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167094,"byte_end":167137,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/     * Its *foreground* color is `TitlePrimary`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167138,"byte_end":167189,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"/ * **`ColorStyle::title_secondary()`**: style used to print secondary","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167190,"byte_end":167262,"line_start":90,"line_end":90,"column_start":1,"column_end":73}},{"value":"/   titles.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167263,"byte_end":167276,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     * Its *background* color is `View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167277,"byte_end":167320,"line_start":92,"line_end":92,"column_start":1,"column_end":44}},{"value":"/     * Its *foreground* color is `TitleSecondary`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167321,"byte_end":167374,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/ * **`ColorStyle::highlight()`**: style used to print selected items.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167375,"byte_end":167447,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/     * Its *background* color is `Highlight`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167448,"byte_end":167496,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/     * Its *foreground* color is `View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167497,"byte_end":167540,"line_start":96,"line_end":96,"column_start":1,"column_end":44}},{"value":"/ * **`ColorStyle::highlight_inactive()`**: style used to print selected,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167541,"byte_end":167616,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/   but inactive items.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167617,"byte_end":167642,"line_start":98,"line_end":98,"column_start":1,"column_end":26}},{"value":"/     * Its *background* color is `HighlightInactive`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167643,"byte_end":167699,"line_start":99,"line_end":99,"column_start":1,"column_end":57}},{"value":"/     * Its *foreground* color is `View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167700,"byte_end":167743,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167744,"byte_end":167747,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Using one of these pairs when styling your application helps give it a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167748,"byte_end":167822,"line_start":102,"line_end":102,"column_start":1,"column_end":75}},{"value":"/ coherent look.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167823,"byte_end":167841,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167842,"byte_end":167845,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`ColorStyle`]: struct.ColorStyle.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167846,"byte_end":167888,"line_start":105,"line_end":105,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167889,"byte_end":167892,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ # Effects","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167893,"byte_end":167906,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167907,"byte_end":167910,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ On top of a color style, some effects can be applied on cells: `Reverse`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167911,"byte_end":167988,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ for instance, swaps the foreground and background colors of a cell.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":167989,"byte_end":168060,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168061,"byte_end":168064,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168065,"byte_end":168068,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Style","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168069,"byte_end":168080,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168081,"byte_end":168084,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Finally, a style combine a [`ColorType`] and a set of [`Effect`]s, to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168085,"byte_end":168158,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/ represent any way text should be printed on screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168159,"byte_end":168214,"line_start":116,"line_end":116,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168215,"byte_end":168218,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`Effect`]: enum.Effect.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168219,"byte_end":168251,"line_start":118,"line_end":118,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168252,"byte_end":168255,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Themes","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168256,"byte_end":168268,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168269,"byte_end":168272,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ A theme defines the color palette an application will use, as well as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168273,"byte_end":168346,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/ various options to style views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168347,"byte_end":168382,"line_start":123,"line_end":123,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168383,"byte_end":168386,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Themes are described in toml configuration files. All fields are optional.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168387,"byte_end":168465,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168466,"byte_end":168469,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Here are the possible entries:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168470,"byte_end":168504,"line_start":127,"line_end":127,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168505,"byte_end":168508,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168509,"byte_end":168520,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ # Every field in a theme file is optional.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168521,"byte_end":168567,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168568,"byte_end":168571,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # First come some various options","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168572,"byte_end":168609,"line_start":132,"line_end":132,"column_start":1,"column_end":38}},{"value":"/ shadow = false  # Don't draw shadows around stacked views","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168610,"byte_end":168671,"line_start":133,"line_end":133,"column_start":1,"column_end":62}},{"value":"/ borders = \"simple\"  # Alternatives are \"none\" and \"outset\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168672,"byte_end":168734,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168735,"byte_end":168738,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Here we define the color palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168739,"byte_end":168778,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/ [colors]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168779,"byte_end":168791,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/ \tbackground = \"black\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168792,"byte_end":168817,"line_start":138,"line_end":138,"column_start":1,"column_end":26}},{"value":"/ \t# If the value is an array, the first valid color will be used.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168818,"byte_end":168886,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/ \t# If the terminal doesn't support custom color,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168887,"byte_end":168939,"line_start":140,"line_end":140,"column_start":1,"column_end":53}},{"value":"/ \t# non-base colors will be skipped.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168940,"byte_end":168979,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"/ \tshadow     = [\"#000000\", \"black\"]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":168980,"byte_end":169018,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/ \tview       = \"#d3d7cf\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169019,"byte_end":169046,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169047,"byte_end":169050,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ \t# Array and simple values have the same effect.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169051,"byte_end":169103,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/ \tprimary   = [\"#111111\"]","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169104,"byte_end":169132,"line_start":146,"line_end":146,"column_start":1,"column_end":29}},{"value":"/ \tsecondary = \"#EEEEEE\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169133,"byte_end":169159,"line_start":147,"line_end":147,"column_start":1,"column_end":27}},{"value":"/ \ttertiary  = \"#444444\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169160,"byte_end":169186,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169187,"byte_end":169190,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ \t# Hex values can use lower or uppercase.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169191,"byte_end":169236,"line_start":150,"line_end":150,"column_start":1,"column_end":46}},{"value":"/ \t# (base color MUST be lowercase)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169237,"byte_end":169274,"line_start":151,"line_end":151,"column_start":1,"column_end":38}},{"value":"/ \ttitle_primary   = \"#ff5555\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169275,"byte_end":169307,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"/ \ttitle_secondary = \"#ffff55\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169308,"byte_end":169340,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169341,"byte_end":169344,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ \t# Lower precision values can use only 3 digits.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169345,"byte_end":169397,"line_start":155,"line_end":155,"column_start":1,"column_end":53}},{"value":"/ \thighlight          = \"#F00\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169398,"byte_end":169430,"line_start":156,"line_end":156,"column_start":1,"column_end":33}},{"value":"/ \thighlight_inactive = \"#5555FF\"","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169431,"byte_end":169466,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169467,"byte_end":169474,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5819},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172347,"byte_end":172353,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"name":"Simple","qualname":"::theme::border_style::BorderStyle::Simple","value":"BorderStyle::Simple","parent":{"krate":0,"index":5818},"children":[],"decl_id":null,"docs":" Simple borders.\n","sig":null,"attributes":[{"value":"/ Simple borders.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172323,"byte_end":172342,"line_start":8,"line_end":8,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5821},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172407,"byte_end":172413,"line_start":11,"line_end":11,"column_start":5,"column_end":11},"name":"Outset","qualname":"::theme::border_style::BorderStyle::Outset","value":"BorderStyle::Outset","parent":{"krate":0,"index":5818},"children":[],"decl_id":null,"docs":" Outset borders with a simple 3d effect.\n","sig":null,"attributes":[{"value":"/ Outset borders with a simple 3d effect.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172359,"byte_end":172402,"line_start":10,"line_end":10,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5823},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172439,"byte_end":172443,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"None","qualname":"::theme::border_style::BorderStyle::None","value":"BorderStyle::None","parent":{"krate":0,"index":5818},"children":[],"decl_id":null,"docs":" No borders.\n","sig":null,"attributes":[{"value":"/ No borders.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172419,"byte_end":172434,"line_start":12,"line_end":12,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172305,"byte_end":172316,"line_start":7,"line_end":7,"column_start":10,"column_end":21},"name":"BorderStyle","qualname":"::theme::border_style::BorderStyle","value":"pub enum BorderStyle { Simple, Outset, None, }","parent":null,"children":[{"krate":0,"index":5819},{"krate":0,"index":5821},{"krate":0,"index":5823}],"decl_id":null,"docs":" Specifies how some borders should be drawn.","sig":null,"attributes":[{"value":"/ Specifies how some borders should be drawn.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172129,"byte_end":172176,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172177,"byte_end":172180,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Borders are used around Dialogs, select popups, and panels.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172181,"byte_end":172244,"line_start":5,"line_end":5,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5840},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172880,"byte_end":172885,"line_start":7,"line_end":7,"column_start":5,"column_end":10},"name":"Black","qualname":"::theme::color::BaseColor::Black","value":"BaseColor::Black","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Black color","sig":null,"attributes":[{"value":"/ Black color","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172835,"byte_end":172850,"line_start":4,"line_end":4,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172855,"byte_end":172858,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ Color #0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172863,"byte_end":172875,"line_start":6,"line_end":6,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5842},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172934,"byte_end":172937,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"Red","qualname":"::theme::color::BaseColor::Red","value":"BaseColor::Red","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Red color","sig":null,"attributes":[{"value":"/ Red color","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172891,"byte_end":172904,"line_start":8,"line_end":8,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172909,"byte_end":172912,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ Color #1","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172917,"byte_end":172929,"line_start":10,"line_end":10,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5844},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172988,"byte_end":172993,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Green","qualname":"::theme::color::BaseColor::Green","value":"BaseColor::Green","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Green color","sig":null,"attributes":[{"value":"/ Green color","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172943,"byte_end":172958,"line_start":12,"line_end":12,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172963,"byte_end":172966,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Color #2","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172971,"byte_end":172983,"line_start":14,"line_end":14,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5846},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173059,"byte_end":173065,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::theme::color::BaseColor::Yellow","value":"BaseColor::Yellow","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Yellow color (Red + Green)","sig":null,"attributes":[{"value":"/ Yellow color (Red + Green)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172999,"byte_end":173029,"line_start":16,"line_end":16,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173034,"byte_end":173037,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Color #3","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173042,"byte_end":173054,"line_start":18,"line_end":18,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5848},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173115,"byte_end":173119,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Blue","qualname":"::theme::color::BaseColor::Blue","value":"BaseColor::Blue","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Blue color","sig":null,"attributes":[{"value":"/ Blue color","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173071,"byte_end":173085,"line_start":20,"line_end":20,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173090,"byte_end":173093,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Color #4","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173098,"byte_end":173110,"line_start":22,"line_end":22,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5850},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173185,"byte_end":173192,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Magenta","qualname":"::theme::color::BaseColor::Magenta","value":"BaseColor::Magenta","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Magenta color (Red + Blue)","sig":null,"attributes":[{"value":"/ Magenta color (Red + Blue)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173125,"byte_end":173155,"line_start":24,"line_end":24,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173160,"byte_end":173163,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Color #5","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173168,"byte_end":173180,"line_start":26,"line_end":26,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5852},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173257,"byte_end":173261,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Cyan","qualname":"::theme::color::BaseColor::Cyan","value":"BaseColor::Cyan","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Cyan color (Green + Blue)","sig":null,"attributes":[{"value":"/ Cyan color (Green + Blue)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173198,"byte_end":173227,"line_start":28,"line_end":28,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173232,"byte_end":173235,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Color #6","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173240,"byte_end":173252,"line_start":30,"line_end":30,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5854},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173333,"byte_end":173338,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"White","qualname":"::theme::color::BaseColor::White","value":"BaseColor::White","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" White color (Red + Green + Blue)","sig":null,"attributes":[{"value":"/ White color (Red + Green + Blue)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173267,"byte_end":173303,"line_start":32,"line_end":32,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173308,"byte_end":173311,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Color #7","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173316,"byte_end":173328,"line_start":34,"line_end":34,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172819,"byte_end":172828,"line_start":3,"line_end":3,"column_start":10,"column_end":19},"name":"BaseColor","qualname":"::theme::color::BaseColor","value":"pub enum BaseColor { Black, Red, Green, Yellow, Blue, Magenta, Cyan, White, }","parent":null,"children":[{"krate":0,"index":5840},{"krate":0,"index":5842},{"krate":0,"index":5844},{"krate":0,"index":5846},{"krate":0,"index":5848},{"krate":0,"index":5850},{"krate":0,"index":5852},{"krate":0,"index":5854}],"decl_id":null,"docs":" One of the 8 base colors.\n","sig":null,"attributes":[{"value":"/ One of the 8 base colors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":172729,"byte_end":172758,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173434,"byte_end":173438,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"dark","qualname":"<BaseColor>::dark","value":"pub fn dark(Self) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Returns the regular (dark) version of this base color.\n","sig":null,"attributes":[{"value":"/ Returns the regular (dark) version of this base color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173364,"byte_end":173422,"line_start":39,"line_end":39,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173554,"byte_end":173559,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"light","qualname":"<BaseColor>::light","value":"pub fn light(Self) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Returns the light version of this base color.\n","sig":null,"attributes":[{"value":"/ Returns the light version of this base color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173493,"byte_end":173542,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5871},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174187,"byte_end":174202,"line_start":70,"line_end":70,"column_start":5,"column_end":20},"name":"TerminalDefault","qualname":"::theme::color::Color::TerminalDefault","value":"Color::TerminalDefault","parent":{"krate":0,"index":5870},"children":[],"decl_id":null,"docs":" Represents a color, preset by terminal.\n","sig":null,"attributes":[{"value":"/ Represents a color, preset by terminal.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174139,"byte_end":174182,"line_start":69,"line_end":69,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5873},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174326,"byte_end":174330,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"Dark","qualname":"::theme::color::Color::Dark","value":"Color::Dark(BaseColor)","parent":{"krate":0,"index":5870},"children":[],"decl_id":null,"docs":" One of the 8 base colors.","sig":null,"attributes":[{"value":"/ One of the 8 base colors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174209,"byte_end":174238,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174243,"byte_end":174246,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note: the actual color used depends on the terminal configuration.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174251,"byte_end":174321,"line_start":74,"line_end":74,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5876},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174472,"byte_end":174477,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"Light","qualname":"::theme::color::Color::Light","value":"Color::Light(BaseColor)","parent":{"krate":0,"index":5870},"children":[],"decl_id":null,"docs":" Lighter version of a base color.","sig":null,"attributes":[{"value":"/ Lighter version of a base color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174348,"byte_end":174384,"line_start":77,"line_end":77,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174389,"byte_end":174392,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note: the actual color used depends on the terminal configuration.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174397,"byte_end":174467,"line_start":79,"line_end":79,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174523,"byte_end":174526,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::theme::color::Color::Rgb","value":"Color::Rgb(u8, u8, u8)","parent":{"krate":0,"index":5870},"children":[],"decl_id":null,"docs":" True-color, 24-bit.\n","sig":null,"attributes":[{"value":"/ True-color, 24-bit.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174495,"byte_end":174518,"line_start":82,"line_end":82,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5884},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174724,"byte_end":174733,"line_start":90,"line_end":90,"column_start":5,"column_end":14},"name":"RgbLowRes","qualname":"::theme::color::Color::RgbLowRes","value":"Color::RgbLowRes(u8, u8, u8)","parent":{"krate":0,"index":5870},"children":[],"decl_id":null,"docs":" Low-resolution","sig":null,"attributes":[{"value":"/ Low-resolution","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174545,"byte_end":174563,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174568,"byte_end":174571,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Each value should be `<= 5` (you'll get panics otherwise).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174576,"byte_end":174638,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174643,"byte_end":174646,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ These 216 possible colors are part of the default color palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174651,"byte_end":174719,"line_start":89,"line_end":89,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174127,"byte_end":174132,"line_start":68,"line_end":68,"column_start":10,"column_end":15},"name":"Color","qualname":"::theme::color::Color","value":"pub enum Color {\n    TerminalDefault,\n    Dark(BaseColor),\n    Light(BaseColor),\n    Rgb(u8, u8, u8),\n    RgbLowRes(u8, u8, u8),\n}","parent":null,"children":[{"krate":0,"index":5871},{"krate":0,"index":5873},{"krate":0,"index":5876},{"krate":0,"index":5879},{"krate":0,"index":5884}],"decl_id":null,"docs":" Represents a color used by the theme.\n","sig":null,"attributes":[{"value":"/ Represents a color used by the theme.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174025,"byte_end":174066,"line_start":66,"line_end":66,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":175056,"byte_end":175070,"line_start":100,"line_end":100,"column_start":12,"column_end":26},"name":"from_256colors","qualname":"<Color>::from_256colors","value":"pub fn from_256colors(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a color from its ID in the 256 colors list.","sig":null,"attributes":[{"value":"/ Creates a color from its ID in the 256 colors list.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174767,"byte_end":174822,"line_start":94,"line_end":94,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174827,"byte_end":174830,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * Colors 0-7 are base dark colors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174835,"byte_end":174873,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/ * Colors 8-15 are base light colors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174878,"byte_end":174918,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/ * Colors 16-231 are rgb colors with 6 values per channel (216 colors).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174923,"byte_end":174997,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ * Colors 232-255 are grayscale colors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":175002,"byte_end":175044,"line_start":99,"line_end":99,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":176148,"byte_end":176153,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"parse","qualname":"<Color>::parse","value":"pub fn parse(&str) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a string into a color.","sig":null,"attributes":[{"value":"/ Parse a string into a color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":175839,"byte_end":175871,"line_start":129,"line_end":129,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":175876,"byte_end":175879,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Examples:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":175884,"byte_end":175897,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ * `\"red\"` becomes `Color::Dark(BaseColor::Red)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":175902,"byte_end":175953,"line_start":132,"line_end":132,"column_start":5,"column_end":56}},{"value":"/ * `\"light green\"` becomes `Color::Light(BaseColor::Green)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":175958,"byte_end":176020,"line_start":133,"line_end":133,"column_start":5,"column_end":67}},{"value":"/ * `\"default\"` becomes `Color::TerminalDefault`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":176025,"byte_end":176075,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ * `\"#123456\"` becomes `Color::Rgb(0x12, 0x34, 0x56)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":176080,"byte_end":176136,"line_start":135,"line_end":135,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5904},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179233,"byte_end":179242,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"name":"ColorPair","qualname":"::theme::color_pair::ColorPair","value":"ColorPair { front, back }","parent":null,"children":[{"krate":0,"index":5905},{"krate":0,"index":5906}],"decl_id":null,"docs":" Combines a front and back color.\n","sig":null,"attributes":[{"value":"/ Combines a front and back color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179134,"byte_end":179170,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5905},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179292,"byte_end":179297,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"front","qualname":"::theme::color_pair::ColorPair::front","value":"theme::color::Color","parent":{"krate":0,"index":5904},"children":[],"decl_id":null,"docs":" Color used for the foreground.\n","sig":null,"attributes":[{"value":"/ Color used for the foreground.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179249,"byte_end":179283,"line_start":6,"line_end":6,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5906},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179354,"byte_end":179358,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"back","qualname":"::theme::color_pair::ColorPair::back","value":"theme::color::Color","parent":{"krate":0,"index":5904},"children":[],"decl_id":null,"docs":" Color used for the background.\n","sig":null,"attributes":[{"value":"/ Color used for the background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179311,"byte_end":179345,"line_start":9,"line_end":9,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179488,"byte_end":179494,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"invert","qualname":"<ColorPair>::invert","value":"pub fn invert(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an inverted color pair.","sig":null,"attributes":[{"value":"/ Return an inverted color pair.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179391,"byte_end":179425,"line_start":14,"line_end":14,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179430,"byte_end":179433,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ With swapped front abd back color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179438,"byte_end":179476,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179668,"byte_end":179682,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"from_256colors","qualname":"<ColorPair>::from_256colors","value":"pub fn from_256colors(u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new color pair from color IDs.\n","sig":null,"attributes":[{"value":"/ Creates a new color pair from color IDs.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179612,"byte_end":179656,"line_start":24,"line_end":24,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5922},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180161,"byte_end":180171,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ColorStyle","qualname":"::theme::color_style::ColorStyle","value":"ColorStyle { front, back }","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924}],"decl_id":null,"docs":" Possible color style for a cell.","sig":null,"attributes":[{"value":"/ Possible color style for a cell.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":179910,"byte_end":179946,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":179947,"byte_end":179950,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Represents a color pair role to use when printing something.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":179951,"byte_end":180015,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180016,"byte_end":180019,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The current theme will assign each role a foreground and background color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180020,"byte_end":180098,"line_start":7,"line_end":7,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5923},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180239,"byte_end":180244,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"front","qualname":"::theme::color_style::ColorStyle::front","value":"theme::color_style::ColorType","parent":{"krate":0,"index":5922},"children":[],"decl_id":null,"docs":" Color used for the foreground (the text itself).\n","sig":null,"attributes":[{"value":"/ Color used for the foreground (the text itself).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180178,"byte_end":180230,"line_start":10,"line_end":10,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5924},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180305,"byte_end":180309,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"back","qualname":"::theme::color_style::ColorStyle::back","value":"theme::color_style::ColorType","parent":{"krate":0,"index":5922},"children":[],"decl_id":null,"docs":" Color used for the background.\n","sig":null,"attributes":[{"value":"/ Color used for the background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180262,"byte_end":180296,"line_start":13,"line_end":13,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180370,"byte_end":180373,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ColorStyle>::new","value":"pub fn new<F, B>(F, B) -> Self where F: Into<ColorType>, B: Into<ColorType>","parent":null,"children":[],"decl_id":null,"docs":" Creates\n","sig":null,"attributes":[{"value":"/ Creates","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180347,"byte_end":180358,"line_start":18,"line_end":18,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180657,"byte_end":180673,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"name":"terminal_default","qualname":"<ColorStyle>::terminal_default","value":"pub fn terminal_default() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Style set by terminal before entering a Cursive program.\n","sig":null,"attributes":[{"value":"/ Style set by terminal before entering a Cursive program.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180585,"byte_end":180645,"line_start":29,"line_end":29,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180828,"byte_end":180838,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"background","qualname":"<ColorStyle>::background","value":"pub fn background() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Application background, where no view is present.\n","sig":null,"attributes":[{"value":"/ Application background, where no view is present.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180763,"byte_end":180816,"line_start":34,"line_end":34,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181000,"byte_end":181006,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"shadow","qualname":"<ColorStyle>::shadow","value":"pub fn shadow() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Color used by view shadows. Only background matters.\n","sig":null,"attributes":[{"value":"/ Color used by view shadows. Only background matters.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180932,"byte_end":180988,"line_start":39,"line_end":39,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181142,"byte_end":181149,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"primary","qualname":"<ColorStyle>::primary","value":"pub fn primary() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Main text with default background.\n","sig":null,"attributes":[{"value":"/ Main text with default background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181092,"byte_end":181130,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181296,"byte_end":181305,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"secondary","qualname":"<ColorStyle>::secondary","value":"pub fn secondary() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Secondary text color, with default background.\n","sig":null,"attributes":[{"value":"/ Secondary text color, with default background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181234,"byte_end":181284,"line_start":49,"line_end":49,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181453,"byte_end":181461,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"tertiary","qualname":"<ColorStyle>::tertiary","value":"pub fn tertiary() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tertiary text color, with default background.\n","sig":null,"attributes":[{"value":"/ Tertiary text color, with default background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181392,"byte_end":181441,"line_start":54,"line_end":54,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181604,"byte_end":181617,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"title_primary","qualname":"<ColorStyle>::title_primary","value":"pub fn title_primary() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Title text color with default background.\n","sig":null,"attributes":[{"value":"/ Title text color with default background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181547,"byte_end":181592,"line_start":59,"line_end":59,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181753,"byte_end":181768,"line_start":65,"line_end":65,"column_start":12,"column_end":27},"name":"title_secondary","qualname":"<ColorStyle>::title_secondary","value":"pub fn title_secondary() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alternative color for a title.\n","sig":null,"attributes":[{"value":"/ Alternative color for a title.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181707,"byte_end":181741,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181917,"byte_end":181926,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"highlight","qualname":"<ColorStyle>::highlight","value":"pub fn highlight() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alternate text with highlight background.\n","sig":null,"attributes":[{"value":"/ Alternate text with highlight background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":181860,"byte_end":181905,"line_start":69,"line_end":69,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182079,"byte_end":182097,"line_start":75,"line_end":75,"column_start":12,"column_end":30},"name":"highlight_inactive","qualname":"<ColorStyle>::highlight_inactive","value":"pub fn highlight_inactive() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight color for inactive views (not in focus).\n","sig":null,"attributes":[{"value":"/ Highlight color for inactive views (not in focus).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182013,"byte_end":182067,"line_start":74,"line_end":74,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182257,"byte_end":182264,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ColorStyle>::resolve","value":"pub fn resolve(&Self, &Palette) -> ColorPair","parent":null,"children":[],"decl_id":null,"docs":" Return the color pair that this style represents.\n","sig":null,"attributes":[{"value":"/ Return the color pair that this style represents.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182192,"byte_end":182245,"line_start":79,"line_end":79,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183341,"byte_end":183348,"line_start":126,"line_end":126,"column_start":5,"column_end":12},"name":"Palette","qualname":"::theme::color_style::ColorType::Palette","value":"ColorType::Palette(PaletteColor)","parent":{"krate":0,"index":5940},"children":[],"decl_id":null,"docs":" Uses a color from the application palette.\n","sig":null,"attributes":[{"value":"/ Uses a color from the application palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183290,"byte_end":183336,"line_start":125,"line_end":125,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5944},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183434,"byte_end":183439,"line_start":129,"line_end":129,"column_start":5,"column_end":10},"name":"Color","qualname":"::theme::color_style::ColorType::Color","value":"ColorType::Color(Color)","parent":{"krate":0,"index":5940},"children":[],"decl_id":null,"docs":" Uses a direct color, independent of the current palette.\n","sig":null,"attributes":[{"value":"/ Uses a direct color, independent of the current palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183369,"byte_end":183429,"line_start":128,"line_end":128,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183274,"byte_end":183283,"line_start":124,"line_end":124,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::theme::color_style::ColorType","value":"pub enum ColorType { Palette(PaletteColor), Color(Color), }","parent":null,"children":[{"krate":0,"index":5941},{"krate":0,"index":5944}],"decl_id":null,"docs":" Either a color from the palette, or a direct color.\n","sig":null,"attributes":[{"value":"/ Either a color from the palette, or a direct color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183158,"byte_end":183213,"line_start":122,"line_end":122,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183540,"byte_end":183547,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ColorType>::resolve","value":"pub fn resolve(Self, &Palette) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Given a palette, resolve `self` to a concrete color.\n","sig":null,"attributes":[{"value":"/ Given a palette, resolve `self` to a concrete color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183472,"byte_end":183528,"line_start":133,"line_end":133,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184084,"byte_end":184090,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Simple","qualname":"::theme::effect::Effect::Simple","value":"Effect::Simple","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":" No effect\n","sig":null,"attributes":[{"value":"/ No effect","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184066,"byte_end":184079,"line_start":6,"line_end":6,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5965},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184146,"byte_end":184153,"line_start":9,"line_end":9,"column_start":5,"column_end":12},"name":"Reverse","qualname":"::theme::effect::Effect::Reverse","value":"Effect::Reverse","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":" Reverses foreground and background colors\n","sig":null,"attributes":[{"value":"/ Reverses foreground and background colors","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184096,"byte_end":184141,"line_start":8,"line_end":8,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5967},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184193,"byte_end":184197,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Bold","qualname":"::theme::effect::Effect::Bold","value":"Effect::Bold","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":" Prints foreground in bold\n","sig":null,"attributes":[{"value":"/ Prints foreground in bold","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184159,"byte_end":184188,"line_start":10,"line_end":10,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5969},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184239,"byte_end":184245,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Italic","qualname":"::theme::effect::Effect::Italic","value":"Effect::Italic","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":" Prints foreground in italic\n","sig":null,"attributes":[{"value":"/ Prints foreground in italic","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184203,"byte_end":184234,"line_start":12,"line_end":12,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5971},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184292,"byte_end":184301,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"Underline","qualname":"::theme::effect::Effect::Underline","value":"Effect::Underline","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":" Prints foreground with underline\n","sig":null,"attributes":[{"value":"/ Prints foreground with underline","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184251,"byte_end":184287,"line_start":14,"line_end":14,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":5962},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":184053,"byte_end":184059,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Effect","qualname":"::theme::effect::Effect","value":"pub enum Effect { Simple, Reverse, Bold, Italic, Underline, }","parent":null,"children":[{"krate":0,"index":5963},{"krate":0,"index":5965},{"krate":0,"index":5967},{"krate":0,"index":5969},{"krate":0,"index":5971}],"decl_id":null,"docs":" Text effect\n","sig":null,"attributes":[{"value":"/ Text effect","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\effect.rs","byte_start":183998,"byte_end":184013,"line_start":3,"line_end":3,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":6014},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184995,"byte_end":185002,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"Palette","qualname":"::theme::palette::Palette","value":"Palette {  }","parent":null,"children":[{"krate":0,"index":6015},{"krate":0,"index":6016}],"decl_id":null,"docs":" Color configuration for the application.","sig":null,"attributes":[{"value":"/ Color configuration for the application.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184449,"byte_end":184493,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184494,"byte_end":184497,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Assign each color role an actual color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184498,"byte_end":184541,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184542,"byte_end":184545,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It implements `Index` and `IndexMut` to access and modify this mapping:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184546,"byte_end":184621,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184622,"byte_end":184625,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184626,"byte_end":184639,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184640,"byte_end":184643,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184644,"byte_end":184655,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use cursive::theme::Palette;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184656,"byte_end":184690,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ use cursive::theme::PaletteColor::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184691,"byte_end":184731,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ use cursive::theme::Color::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184732,"byte_end":184765,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ use cursive::theme::BaseColor::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184766,"byte_end":184803,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184804,"byte_end":184807,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut palette = Palette::default();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184808,"byte_end":184849,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184850,"byte_end":184853,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(palette[Background], Dark(Blue));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184854,"byte_end":184902,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ palette[Shadow] = Light(Red);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184903,"byte_end":184936,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":184937,"byte_end":184944,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6029},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185369,"byte_end":185374,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Color","qualname":"::theme::palette::PaletteNode::Color","value":"PaletteNode::Color(Color)","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" A single color.\n","sig":null,"attributes":[{"value":"/ A single color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185345,"byte_end":185364,"line_start":41,"line_end":41,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185523,"byte_end":185532,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"Namespace","qualname":"::theme::palette::PaletteNode::Namespace","value":"PaletteNode::Namespace(HashMap<String, PaletteNode>)","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" A group of values bundled in the same namespace.","sig":null,"attributes":[{"value":"/ A group of values bundled in the same namespace.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185387,"byte_end":185439,"line_start":43,"line_end":43,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185444,"byte_end":185447,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Namespaces can be merged in the palette with `Palette::merge`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185452,"byte_end":185518,"line_start":45,"line_end":45,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":6028},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185327,"byte_end":185338,"line_start":40,"line_end":40,"column_start":10,"column_end":21},"name":"PaletteNode","qualname":"::theme::palette::PaletteNode","value":"pub enum PaletteNode {\n    Color(Color),\n    Namespace(HashMap<String, PaletteNode>),\n}","parent":null,"children":[{"krate":0,"index":6029},{"krate":0,"index":6032}],"decl_id":null,"docs":" A node in the palette tree.","sig":null,"attributes":[{"value":"/ A node in the palette tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185091,"byte_end":185122,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185123,"byte_end":185126,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This describes a value attached to a custom keyword in the palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185127,"byte_end":185198,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185199,"byte_end":185202,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This can either be a color, or a nested namespace with its own mapping.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185203,"byte_end":185278,"line_start":38,"line_end":38,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":186132,"byte_end":186138,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"custom","qualname":"<Palette>::custom","value":"pub fn custom<'a>(&'a Self, &str) -> Option<&'a Color>","parent":null,"children":[],"decl_id":null,"docs":" Returns a custom color from this palette.","sig":null,"attributes":[{"value":"/ Returns a custom color from this palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":186012,"byte_end":186057,"line_start":66,"line_end":66,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":186062,"byte_end":186065,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the given key was not found.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":186070,"byte_end":186120,"line_start":68,"line_end":68,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":186554,"byte_end":186559,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"merge","qualname":"<Palette>::merge","value":"pub fn merge(&Self, &str) -> Palette","parent":null,"children":[],"decl_id":null,"docs":" Returns a new palette where the given namespace has been merged.","sig":null,"attributes":[{"value":"/ Returns a new palette where the given namespace has been merged.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":186399,"byte_end":186467,"line_start":79,"line_end":79,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":186472,"byte_end":186475,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ All values in the namespace will override previous values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":186480,"byte_end":186542,"line_start":81,"line_end":81,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":187289,"byte_end":187298,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Palette>::set_color","value":"pub fn set_color(&mut Self, &str, Color)","parent":null,"children":[],"decl_id":null,"docs":" Sets the color for the given key.","sig":null,"attributes":[{"value":"/ Sets the color for the given key.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":187160,"byte_end":187197,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":187202,"byte_end":187205,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This will update either the basic palette or the custom values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":187210,"byte_end":187277,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":188212,"byte_end":188225,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"add_namespace","qualname":"<Palette>::add_namespace","value":"pub fn add_namespace(&mut Self, &str, HashMap<String, PaletteNode>)","parent":null,"children":[],"decl_id":null,"docs":" Adds a color namespace to this palette.\n","sig":null,"attributes":[{"value":"/ Adds a color namespace to this palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":188157,"byte_end":188200,"line_start":126,"line_end":126,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6048},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191775,"byte_end":191785,"line_start":233,"line_end":233,"column_start":5,"column_end":15},"name":"Background","qualname":"::theme::palette::PaletteColor::Background","value":"PaletteColor::Background","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Color used for the application background.\n","sig":null,"attributes":[{"value":"/ Color used for the application background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191724,"byte_end":191770,"line_start":232,"line_end":232,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6050},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191828,"byte_end":191834,"line_start":235,"line_end":235,"column_start":5,"column_end":11},"name":"Shadow","qualname":"::theme::palette::PaletteColor::Shadow","value":"PaletteColor::Shadow","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Color used for View shadows.\n","sig":null,"attributes":[{"value":"/ Color used for View shadows.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191791,"byte_end":191823,"line_start":234,"line_end":234,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6052},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191881,"byte_end":191885,"line_start":237,"line_end":237,"column_start":5,"column_end":9},"name":"View","qualname":"::theme::palette::PaletteColor::View","value":"PaletteColor::View","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Color used for View backgrounds.\n","sig":null,"attributes":[{"value":"/ Color used for View backgrounds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191840,"byte_end":191876,"line_start":236,"line_end":236,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6054},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191932,"byte_end":191939,"line_start":239,"line_end":239,"column_start":5,"column_end":12},"name":"Primary","qualname":"::theme::palette::PaletteColor::Primary","value":"PaletteColor::Primary","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Primary color used for the text.\n","sig":null,"attributes":[{"value":"/ Primary color used for the text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191891,"byte_end":191927,"line_start":238,"line_end":238,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6056},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191988,"byte_end":191997,"line_start":241,"line_end":241,"column_start":5,"column_end":14},"name":"Secondary","qualname":"::theme::palette::PaletteColor::Secondary","value":"PaletteColor::Secondary","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Secondary color used for the text.\n","sig":null,"attributes":[{"value":"/ Secondary color used for the text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191945,"byte_end":191983,"line_start":240,"line_end":240,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6058},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192045,"byte_end":192053,"line_start":243,"line_end":243,"column_start":5,"column_end":13},"name":"Tertiary","qualname":"::theme::palette::PaletteColor::Tertiary","value":"PaletteColor::Tertiary","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Tertiary color used for the text.\n","sig":null,"attributes":[{"value":"/ Tertiary color used for the text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192003,"byte_end":192040,"line_start":242,"line_end":242,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6060},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192102,"byte_end":192114,"line_start":245,"line_end":245,"column_start":5,"column_end":17},"name":"TitlePrimary","qualname":"::theme::palette::PaletteColor::TitlePrimary","value":"PaletteColor::TitlePrimary","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Primary color used for title text.\n","sig":null,"attributes":[{"value":"/ Primary color used for title text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192059,"byte_end":192097,"line_start":244,"line_end":244,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6062},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192165,"byte_end":192179,"line_start":247,"line_end":247,"column_start":5,"column_end":19},"name":"TitleSecondary","qualname":"::theme::palette::PaletteColor::TitleSecondary","value":"PaletteColor::TitleSecondary","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Secondary color used for title text.\n","sig":null,"attributes":[{"value":"/ Secondary color used for title text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192120,"byte_end":192160,"line_start":246,"line_end":246,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6064},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192227,"byte_end":192236,"line_start":249,"line_end":249,"column_start":5,"column_end":14},"name":"Highlight","qualname":"::theme::palette::PaletteColor::Highlight","value":"PaletteColor::Highlight","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Color used for highlighting text.\n","sig":null,"attributes":[{"value":"/ Color used for highlighting text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192185,"byte_end":192222,"line_start":248,"line_end":248,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6066},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192293,"byte_end":192310,"line_start":251,"line_end":251,"column_start":5,"column_end":22},"name":"HighlightInactive","qualname":"::theme::palette::PaletteColor::HighlightInactive","value":"PaletteColor::HighlightInactive","parent":{"krate":0,"index":6047},"children":[],"decl_id":null,"docs":" Color used for highlighting inactive text.\n","sig":null,"attributes":[{"value":"/ Color used for highlighting inactive text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192242,"byte_end":192288,"line_start":250,"line_end":250,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":6047},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191705,"byte_end":191717,"line_start":231,"line_end":231,"column_start":10,"column_end":22},"name":"PaletteColor","qualname":"::theme::palette::PaletteColor","value":"pub enum PaletteColor {\n    Background,\n    Shadow,\n    View,\n    Primary,\n    Secondary,\n    Tertiary,\n    TitlePrimary,\n    TitleSecondary,\n    Highlight,\n    HighlightInactive,\n}","parent":null,"children":[{"krate":0,"index":6048},{"krate":0,"index":6050},{"krate":0,"index":6052},{"krate":0,"index":6054},{"krate":0,"index":6056},{"krate":0,"index":6058},{"krate":0,"index":6060},{"krate":0,"index":6062},{"krate":0,"index":6064},{"krate":0,"index":6066}],"decl_id":null,"docs":" Color entry in a palette.","sig":null,"attributes":[{"value":"/ Color entry in a palette.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191527,"byte_end":191556,"line_start":227,"line_end":227,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191557,"byte_end":191560,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Each `PaletteColor` is used for a specific role in a default application.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":191561,"byte_end":191638,"line_start":229,"line_end":229,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192407,"byte_end":192414,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"resolve","qualname":"<PaletteColor>::resolve","value":"pub fn resolve(Self, &Palette) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Given a palette, resolve `self` to a concrete color.\n","sig":null,"attributes":[{"value":"/ Given a palette, resolve `self` to a concrete color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192339,"byte_end":192395,"line_start":255,"line_end":255,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6093},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192740,"byte_end":192745,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Style","qualname":"::theme::style::Style","value":"Style { effects, color }","parent":null,"children":[{"krate":0,"index":6094},{"krate":0,"index":6095}],"decl_id":null,"docs":" Combine a color and an effect.","sig":null,"attributes":[{"value":"/ Combine a color and an effect.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192582,"byte_end":192616,"line_start":4,"line_end":4,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192617,"byte_end":192620,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Represents any transformation that can be applied to text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192621,"byte_end":192683,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":6094},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192836,"byte_end":192843,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"effects","qualname":"::theme::style::Style::effects","value":"enumset::EnumSet<theme::effect::Effect>","parent":{"krate":0,"index":6093},"children":[],"decl_id":null,"docs":" Effect to apply.","sig":null,"attributes":[{"value":"/ Effect to apply.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192752,"byte_end":192772,"line_start":9,"line_end":9,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192777,"byte_end":192780,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ `None` to keep using previous effects.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192785,"byte_end":192827,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6095},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192959,"byte_end":192964,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"color","qualname":"::theme::style::Style::color","value":"std::option::Option<theme::color_style::ColorStyle>","parent":{"krate":0,"index":6093},"children":[],"decl_id":null,"docs":" Color style to apply.","sig":null,"attributes":[{"value":"/ Color style to apply.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192867,"byte_end":192892,"line_start":14,"line_end":14,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192897,"byte_end":192900,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ `None` to keep using the previous colors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":192905,"byte_end":192950,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193154,"byte_end":193158,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"none","qualname":"<Style>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Style` that doesn't apply anything.\n","sig":null,"attributes":[{"value":"/ Returns a new `Style` that doesn't apply anything.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193088,"byte_end":193142,"line_start":27,"line_end":27,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193418,"byte_end":193423,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"merge","qualname":"<Style>::merge","value":"pub fn merge(&[Style]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Style` by merging all given styles.","sig":null,"attributes":[{"value":"/ Returns a new `Style` by merging all given styles.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193270,"byte_end":193324,"line_start":35,"line_end":35,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193329,"byte_end":193332,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Will use the last non-`None` color, and will combine all effects.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193337,"byte_end":193406,"line_start":37,"line_end":37,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193808,"byte_end":193815,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"combine","qualname":"<Style>::combine","value":"pub fn combine<S>(Self, S) -> Self where S: Into<Style>","parent":null,"children":[],"decl_id":null,"docs":" Returns a combination of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns a combination of `self` and `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193748,"byte_end":193796,"line_start":53,"line_end":53,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6108},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170026,"byte_end":170031,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"Theme","qualname":"::theme::Theme","value":"Theme { shadow, borders, palette }","parent":null,"children":[{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6111}],"decl_id":null,"docs":" Represents the style a Cursive application will use.\n","sig":null,"attributes":[{"value":"/ Represents the style a Cursive application will use.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":169934,"byte_end":169990,"line_start":180,"line_end":180,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":6109},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170100,"byte_end":170106,"line_start":184,"line_end":184,"column_start":9,"column_end":15},"name":"shadow","qualname":"::theme::Theme::shadow","value":"bool","parent":{"krate":0,"index":6108},"children":[],"decl_id":null,"docs":" Whether views in a StackView should have shadows.\n","sig":null,"attributes":[{"value":"/ Whether views in a StackView should have shadows.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170038,"byte_end":170091,"line_start":183,"line_end":183,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6110},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170164,"byte_end":170171,"line_start":186,"line_end":186,"column_start":9,"column_end":16},"name":"borders","qualname":"::theme::Theme::borders","value":"theme::border_style::BorderStyle","parent":{"krate":0,"index":6108},"children":[],"decl_id":null,"docs":" How view borders should be drawn.\n","sig":null,"attributes":[{"value":"/ How view borders should be drawn.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170118,"byte_end":170155,"line_start":185,"line_end":185,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6111},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170254,"byte_end":170261,"line_start":188,"line_end":188,"column_start":9,"column_end":16},"name":"palette","qualname":"::theme::Theme::palette","value":"theme::palette::Palette","parent":{"krate":0,"index":6108},"children":[],"decl_id":null,"docs":" What colors should be used through the application?\n","sig":null,"attributes":[{"value":"/ What colors should be used through the application?","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170190,"byte_end":170245,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6117},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171097,"byte_end":171099,"line_start":221,"line_end":221,"column_start":5,"column_end":7},"name":"Io","qualname":"::theme::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":6116},"children":[],"decl_id":null,"docs":" An error occured when reading the file.\n","sig":null,"attributes":[{"value":"/ An error occured when reading the file.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171049,"byte_end":171092,"line_start":220,"line_end":220,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6120},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171172,"byte_end":171177,"line_start":223,"line_end":223,"column_start":5,"column_end":10},"name":"Parse","qualname":"::theme::Error::Parse","value":"Error::Parse(toml::de::Error)","parent":{"krate":0,"index":6116},"children":[],"decl_id":null,"docs":" An error occured when parsing the toml content.\n","sig":null,"attributes":[{"value":"/ An error occured when parsing the toml content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171116,"byte_end":171167,"line_start":222,"line_end":222,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171037,"byte_end":171042,"line_start":219,"line_end":219,"column_start":10,"column_end":15},"name":"Error","qualname":"::theme::Error","value":"pub enum Error { Io(io::Error), Parse(toml::de::Error), }","parent":null,"children":[{"krate":0,"index":6117},{"krate":0,"index":6120}],"decl_id":null,"docs":" Possible error returned when loading a theme.\n","sig":null,"attributes":[{"value":"/ Possible error returned when loading a theme.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170961,"byte_end":171010,"line_start":217,"line_end":217,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171478,"byte_end":171493,"line_start":239,"line_end":239,"column_start":8,"column_end":23},"name":"load_theme_file","qualname":"::theme::load_theme_file","value":"pub fn load_theme_file<P: AsRef<Path>>(P) -> Result<Theme, Error>","parent":null,"children":[],"decl_id":null,"docs":" Loads a theme from file and sets it as active.\n","sig":null,"attributes":[{"value":"/ Loads a theme from file and sets it as active.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171420,"byte_end":171470,"line_start":238,"line_end":238,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171806,"byte_end":171815,"line_start":251,"line_end":251,"column_start":8,"column_end":17},"name":"load_toml","qualname":"::theme::load_toml","value":"pub fn load_toml(&str) -> Result<Theme, Error>","parent":null,"children":[],"decl_id":null,"docs":" Loads a theme string and sets it as active.\n","sig":null,"attributes":[{"value":"/ Loads a theme string and sets it as active.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171751,"byte_end":171798,"line_start":250,"line_end":250,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":172057,"byte_end":172069,"line_start":261,"line_end":261,"column_start":8,"column_end":20},"name":"load_default","qualname":"::theme::load_default","value":"pub fn load_default() -> Theme","parent":null,"children":[],"decl_id":null,"docs":" Loads the default theme, and returns its representation.\n","sig":null,"attributes":[{"value":"/ Loads the default theme, and returns its representation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171989,"byte_end":172049,"line_start":260,"line_end":260,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":1625},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":1674},{"krate":0,"index":1694},{"krate":0,"index":1701},{"krate":0,"index":1706},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1726},{"krate":0,"index":1731},{"krate":0,"index":1736},{"krate":0,"index":1740},{"krate":0,"index":1745}],"decl_id":null,"docs":" Points on the 2D character grid.\n","sig":null,"attributes":[{"value":"/ Points on the 2D character grid.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":194651,"byte_end":194687,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195074,"byte_end":195078,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"name":"Vec2","qualname":"::vec::Vec2","value":"XY<usize>","parent":null,"children":[],"decl_id":null,"docs":" Simple 2D size, in cells.","sig":null,"attributes":[{"value":"/ Simple 2D size, in cells.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":194818,"byte_end":194847,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":194848,"byte_end":194851,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Note: due to a bug in rustdoc ([#32077]), the documentation for `Vec2` is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":194852,"byte_end":194929,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ currently shown on the [`XY`] page.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":194930,"byte_end":194969,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":194970,"byte_end":194973,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [#32077]: https://github.com/rust-lang/rust/issues/32077","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":194974,"byte_end":195034,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`XY`]: ../struct.XY.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195035,"byte_end":195064,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195791,"byte_end":195800,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"max_value","qualname":"<XY<usize>>::max_value","value":"pub fn max_value() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Vec2` with `usize::max_value()` in each axis.","sig":null,"attributes":[{"value":"/ Returns a `Vec2` with `usize::max_value()` in each axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195562,"byte_end":195622,"line_start":36,"line_end":36,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195627,"byte_end":195630,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195635,"byte_end":195649,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195654,"byte_end":195657,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195662,"byte_end":195673,"line_start":40,"line_end":40,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195678,"byte_end":195707,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ assert!(Vec2::new(9999, 9999) < Vec2::max_value());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195712,"byte_end":195767,"line_start":42,"line_end":42,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195772,"byte_end":195779,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196214,"byte_end":196228,"line_start":60,"line_end":60,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<XY<usize>>::saturating_sub","value":"pub fn saturating_sub<O: Into<Self>>(&Self, O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Saturating subtraction. Computes `self - other`, saturating at 0.","sig":null,"attributes":[{"value":"/ Saturating subtraction. Computes `self - other`, saturating at 0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195882,"byte_end":195951,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195956,"byte_end":195959,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Never panics.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195964,"byte_end":195981,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195986,"byte_end":195989,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195994,"byte_end":196008,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196013,"byte_end":196016,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196021,"byte_end":196032,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196037,"byte_end":196066,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/ let u = Vec2::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196071,"byte_end":196099,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/ let v = Vec2::new(2, 1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196104,"byte_end":196132,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(u.saturating_sub(v), Vec2::new(0, 1));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196137,"byte_end":196190,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196195,"byte_end":196202,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196725,"byte_end":196739,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<XY<usize>>::saturating_add","value":"pub fn saturating_add<O: Into<XY<isize>>>(&Self, O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Saturating addition with a signed vec.","sig":null,"attributes":[{"value":"/ Saturating addition with a signed vec.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196367,"byte_end":196409,"line_start":65,"line_end":65,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196414,"byte_end":196417,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Any coordinates saturates to 0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196422,"byte_end":196457,"line_start":67,"line_end":67,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196462,"byte_end":196465,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196470,"byte_end":196484,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196489,"byte_end":196492,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196497,"byte_end":196508,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196513,"byte_end":196542,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196547,"byte_end":196569,"line_start":73,"line_end":73,"column_start":5,"column_end":27}},{"value":"/ let u = Vec2::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196574,"byte_end":196602,"line_start":74,"line_end":74,"column_start":5,"column_end":33}},{"value":"/ let v = XY::<isize>::new(-2, 1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196607,"byte_end":196643,"line_start":75,"line_end":75,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(u.saturating_add(v), Vec2::new(0, 3));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196648,"byte_end":196701,"line_start":76,"line_end":76,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":196706,"byte_end":196713,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197306,"byte_end":197312,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"div_up","qualname":"<XY<usize>>::div_up","value":"pub fn div_up<O>(&Self, O) -> Self where O: Into<Self>","parent":null,"children":[],"decl_id":null,"docs":" Term-by-term integer division that rounds up.","sig":null,"attributes":[{"value":"/ Term-by-term integer division that rounds up.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197032,"byte_end":197081,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197086,"byte_end":197089,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197094,"byte_end":197108,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197113,"byte_end":197116,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197121,"byte_end":197132,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197137,"byte_end":197166,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/ let u = Vec2::new(1, 6);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197171,"byte_end":197199,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/ let v = Vec2::new(2, 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197204,"byte_end":197232,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(u.div_up(v), Vec2::new(1, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197237,"byte_end":197282,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197287,"byte_end":197294,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197864,"byte_end":197875,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<XY<usize>>::checked_sub","value":"pub fn checked_sub<O: Into<Self>>(&Self, O) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other` if possible.","sig":null,"attributes":[{"value":"/ Checked subtraction. Computes `self - other` if possible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197439,"byte_end":197500,"line_start":107,"line_end":107,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197505,"byte_end":197508,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self.x < other.x || self.y < other.y`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197513,"byte_end":197574,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197579,"byte_end":197582,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Never panics.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197587,"byte_end":197604,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197609,"byte_end":197612,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197617,"byte_end":197631,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197636,"byte_end":197639,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197644,"byte_end":197655,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197660,"byte_end":197689,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/ let xy = Vec2::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197694,"byte_end":197723,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(xy.checked_sub((1, 1)), Some(Vec2::new(0, 1)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197728,"byte_end":197790,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(xy.checked_sub((2, 2)), None);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197795,"byte_end":197840,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":197845,"byte_end":197852,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198458,"byte_end":198464,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"signed","qualname":"<XY<usize>>::signed","value":"pub fn signed(Self) -> XY<isize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `XY<isize>` from `self`.","sig":null,"attributes":[{"value":"/ Returns a `XY<isize>` from `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198077,"byte_end":198115,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198120,"byte_end":198123,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198128,"byte_end":198142,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198147,"byte_end":198150,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198155,"byte_end":198166,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198171,"byte_end":198200,"line_start":135,"line_end":135,"column_start":5,"column_end":34}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198205,"byte_end":198227,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/ let v: XY<isize> = Vec2::new(1, 2).signed().map(|i| i - 5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198232,"byte_end":198295,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(v, XY::new(-4, -3));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198300,"byte_end":198335,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198340,"byte_end":198343,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let u = Vec2::new(3, 4);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198348,"byte_end":198376,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(u.saturating_add(v), Vec2::new(0, 1));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198381,"byte_end":198434,"line_start":141,"line_end":141,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198439,"byte_end":198446,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198996,"byte_end":199003,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"fits_in","qualname":"<XY<T>>::fits_in","value":"pub fn fits_in<O: Into<Self>>(&Self, O) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` could fit inside `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` could fit inside `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198540,"byte_end":198594,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198599,"byte_end":198602,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.x <= other.x && self.y <= other.y`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198607,"byte_end":198665,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198670,"byte_end":198673,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If this returns `true`, then `other - self` will not underflow.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198678,"byte_end":198745,"line_start":153,"line_end":153,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198750,"byte_end":198753,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198758,"byte_end":198772,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198777,"byte_end":198780,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198785,"byte_end":198796,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198801,"byte_end":198830,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ let v = Vec2::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198835,"byte_end":198863,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ assert!(v.fits_in((1, 2)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198868,"byte_end":198899,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/ assert!(v.fits_in((3, 3)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198904,"byte_end":198935,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/ assert!(!v.fits_in((2, 1)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198940,"byte_end":198972,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198977,"byte_end":198984,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199585,"byte_end":199589,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"fits","qualname":"<XY<T>>::fits","value":"pub fn fits<O: Into<Self>>(&Self, O) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `other` could fit inside `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if `other` could fit inside `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199138,"byte_end":199192,"line_start":169,"line_end":169,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199197,"byte_end":199200,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.x >= other.x && self.y >= other.y`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199205,"byte_end":199263,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199268,"byte_end":199271,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If this returns `true`, then `self - other` will not underflow.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199276,"byte_end":199343,"line_start":173,"line_end":173,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199348,"byte_end":199351,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199356,"byte_end":199370,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199375,"byte_end":199378,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199383,"byte_end":199394,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199399,"byte_end":199428,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/ let v = Vec2::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199433,"byte_end":199461,"line_start":179,"line_end":179,"column_start":5,"column_end":33}},{"value":"/ assert!(v.fits((1, 2)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199466,"byte_end":199494,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ assert!(v.fits((0, 0)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199499,"byte_end":199527,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/ assert!(!v.fits((2, 1)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199532,"byte_end":199561,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199566,"byte_end":199573,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199808,"byte_end":199819,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"strictly_lt","qualname":"<XY<T>>::strictly_lt","value":"pub fn strictly_lt<O: Into<Self>>(&Self, O) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `other` is strictly less than `self` in each axis.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `other` is strictly less than `self` in each axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199724,"byte_end":199796,"line_start":189,"line_end":189,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200016,"byte_end":200027,"line_start":196,"line_end":196,"column_start":12,"column_end":23},"name":"strictly_gt","qualname":"<XY<T>>::strictly_gt","value":"pub fn strictly_gt<O: Into<Self>>(&Self, O) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `other` is strictly greater than `self` in each axis.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `other` is strictly greater than `self` in each axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":199929,"byte_end":200004,"line_start":195,"line_end":195,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200366,"byte_end":200369,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"max","qualname":"<XY<T>>::max","value":"pub fn max<A: Into<XY<T>>, B: Into<XY<T>>>(A, B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new Vec2 that is a maximum per coordinate.","sig":null,"attributes":[{"value":"/ Returns a new Vec2 that is a maximum per coordinate.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200137,"byte_end":200193,"line_start":201,"line_end":201,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200198,"byte_end":200201,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200206,"byte_end":200220,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200225,"byte_end":200228,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200233,"byte_end":200244,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200249,"byte_end":200278,"line_start":206,"line_end":206,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Vec2::max((1, 2), (3, 1)), Vec2::new(3, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200283,"byte_end":200342,"line_start":207,"line_end":207,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200347,"byte_end":200354,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200761,"byte_end":200764,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"min","qualname":"<XY<T>>::min","value":"pub fn min<A: Into<XY<T>>, B: Into<XY<T>>>(A, B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new Vec2 that is no larger than any input in both dimensions.","sig":null,"attributes":[{"value":"/ Returns a new Vec2 that is no larger than any input in both dimensions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200513,"byte_end":200588,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200593,"byte_end":200596,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200601,"byte_end":200615,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200620,"byte_end":200623,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200628,"byte_end":200639,"line_start":219,"line_end":219,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200644,"byte_end":200673,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Vec2::min((1, 2), (3, 1)), Vec2::new(1, 1));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200678,"byte_end":200737,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200742,"byte_end":200749,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201030,"byte_end":201036,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"or_min","qualname":"<XY<T>>::or_min","value":"pub fn or_min<O: Into<XY<T>>>(Self, O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum of `self` and `other`.","sig":null,"attributes":[{"value":"/ Returns the minimum of `self` and `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200908,"byte_end":200954,"line_start":229,"line_end":229,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200959,"byte_end":200962,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `Vec2::min(self, other)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":200967,"byte_end":201018,"line_start":231,"line_end":231,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201243,"byte_end":201249,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"or_max","qualname":"<XY<T>>::or_max","value":"pub fn or_max<O: Into<XY<T>>>(Self, O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum of `self` and `other`.","sig":null,"attributes":[{"value":"/ Returns the maximum of `self` and `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201121,"byte_end":201167,"line_start":236,"line_end":236,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201172,"byte_end":201175,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `Vec2::max(self, other)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201180,"byte_end":201231,"line_start":238,"line_end":238,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201444,"byte_end":201458,"line_start":246,"line_end":246,"column_start":12,"column_end":26},"name":"stack_vertical","qualname":"<XY<T>>::stack_vertical","value":"pub fn stack_vertical(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns (max(self.x,other.x), self.y+other.y)\n","sig":null,"attributes":[{"value":"/ Returns (max(self.x,other.x), self.y+other.y)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201383,"byte_end":201432,"line_start":245,"line_end":245,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201687,"byte_end":201703,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"stack_horizontal","qualname":"<XY<T>>::stack_horizontal","value":"pub fn stack_horizontal(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns (self.x+other.x, max(self.y,other.y))\n","sig":null,"attributes":[{"value":"/ Returns (self.x+other.x, max(self.y,other.y))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201626,"byte_end":201675,"line_start":253,"line_end":253,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201940,"byte_end":201952,"line_start":262,"line_end":262,"column_start":12,"column_end":24},"name":"fits_in_rect","qualname":"<XY<T>>::fits_in_rect","value":"pub fn fits_in_rect<O1, O2>(&Self, O1, O2) -> bool where O1: Into<Self>,\nO2: Into<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` fits in the given rectangle.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` fits in the given rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201871,"byte_end":201928,"line_start":261,"line_end":261,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202453,"byte_end":202459,"line_start":282,"line_end":282,"column_start":12,"column_end":18},"name":"keep_x","qualname":"<XY<T>>::keep_x","value":"pub fn keep_x(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector with the X component of self, and y=0.","sig":null,"attributes":[{"value":"/ Returns a vector with the X component of self, and y=0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202212,"byte_end":202271,"line_start":273,"line_end":273,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202276,"byte_end":202279,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202284,"byte_end":202298,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202303,"byte_end":202306,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202311,"byte_end":202322,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202327,"byte_end":202349,"line_start":278,"line_end":278,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202354,"byte_end":202381,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(xy.keep_x(), XY::new(1, 0));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202386,"byte_end":202429,"line_start":280,"line_end":280,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202434,"byte_end":202441,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202774,"byte_end":202780,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"keep_y","qualname":"<XY<T>>::keep_y","value":"pub fn keep_y(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector with the Y component of self, and x=0.","sig":null,"attributes":[{"value":"/ Returns a vector with the Y component of self, and x=0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202533,"byte_end":202592,"line_start":286,"line_end":286,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202597,"byte_end":202600,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202605,"byte_end":202619,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202624,"byte_end":202627,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202632,"byte_end":202643,"line_start":290,"line_end":290,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202648,"byte_end":202670,"line_start":291,"line_end":291,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202675,"byte_end":202702,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(xy.keep_y(), XY::new(0, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202707,"byte_end":202750,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202755,"byte_end":202762,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":203045,"byte_end":203049,"line_start":307,"line_end":307,"column_start":12,"column_end":16},"name":"zero","qualname":"<XY<T>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Self::new(0,0)`.","sig":null,"attributes":[{"value":"/ Alias for `Self::new(0,0)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202854,"byte_end":202885,"line_start":299,"line_end":299,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202890,"byte_end":202893,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202898,"byte_end":202912,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202917,"byte_end":202920,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202925,"byte_end":202936,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/ # use cursive::vec::Vec2;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202941,"byte_end":202970,"line_start":304,"line_end":304,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Vec2::zero(), Vec2::new(0, 0));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202975,"byte_end":203021,"line_start":305,"line_end":305,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":203026,"byte_end":203033,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"views","qualname":"::views","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1809},{"krate":0,"index":1878},{"krate":0,"index":2001},{"krate":0,"index":2071},{"krate":0,"index":2107},{"krate":0,"index":2137},{"krate":0,"index":2301},{"krate":0,"index":2313},{"krate":0,"index":2462},{"krate":0,"index":2495},{"krate":0,"index":2544},{"krate":0,"index":2609},{"krate":0,"index":2626},{"krate":0,"index":2770},{"krate":0,"index":2884},{"krate":0,"index":3008},{"krate":0,"index":3105},{"krate":0,"index":3194},{"krate":0,"index":3234},{"krate":0,"index":3291},{"krate":0,"index":3356},{"krate":0,"index":3451},{"krate":0,"index":3541},{"krate":0,"index":3769},{"krate":0,"index":3812},{"krate":0,"index":3832},{"krate":0,"index":3912},{"krate":0,"index":4098},{"krate":0,"index":4241},{"krate":0,"index":4367},{"krate":0,"index":4399},{"krate":0,"index":4437},{"krate":0,"index":4440},{"krate":0,"index":4443},{"krate":0,"index":4446},{"krate":0,"index":4449},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4465},{"krate":0,"index":4468},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4484},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4491},{"krate":0,"index":4494},{"krate":0,"index":4497},{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4506},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4516},{"krate":0,"index":4519},{"krate":0,"index":4522},{"krate":0,"index":4525},{"krate":0,"index":4528},{"krate":0,"index":4531},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4538},{"krate":0,"index":4541},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4548},{"krate":0,"index":4551},{"krate":0,"index":4554},{"krate":0,"index":4557}],"decl_id":null,"docs":" Various views to use when creating the layout.\n","sig":null,"attributes":[{"value":"/ Various views to use when creating the layout.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\mod.rs","byte_start":207557,"byte_end":207607,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210789,"byte_end":210796,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"BoxView","qualname":"::views::box_view::BoxView","value":"BoxView {  }","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777}],"decl_id":null,"docs":" Wrapper around another view, with a controlled size.","sig":null,"attributes":[{"value":"/ Wrapper around another view, with a controlled size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210289,"byte_end":210345,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210346,"byte_end":210349,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Each axis can independently be set to:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210350,"byte_end":210392,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210393,"byte_end":210396,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * Keep a **fixed** size","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210397,"byte_end":210424,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/ * Use **all** available size","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210425,"byte_end":210457,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/ * Use **at most** a given size","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210458,"byte_end":210492,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ * Use **at least** a given size","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210493,"byte_end":210528,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/ * Let the wrapped view decide.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210529,"byte_end":210563,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210564,"byte_end":210567,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210568,"byte_end":210582,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210583,"byte_end":210586,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210587,"byte_end":210594,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use cursive::views::{BoxView,TextView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210595,"byte_end":210640,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ // Creates a 20x4 BoxView with a TextView content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210641,"byte_end":210695,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/ let view = BoxView::with_fixed_size((20,4), TextView::new(\"Hello!\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210696,"byte_end":210769,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":210770,"byte_end":210777,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211503,"byte_end":211506,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxView<T>>::new","value":"pub fn new(SizeConstraint, SizeConstraint, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BoxView` with the given width and height requirements.","sig":null,"attributes":[{"value":"/ Creates a new `BoxView` with the given width and height requirements.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211347,"byte_end":211420,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211425,"byte_end":211428,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ `None` values will use the wrapped view's preferences.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211433,"byte_end":211491,"line_start":44,"line_end":44,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211805,"byte_end":211820,"line_start":57,"line_end":57,"column_start":12,"column_end":27},"name":"set_constraints","qualname":"<BoxView<T>>::set_constraints","value":"pub fn set_constraints(&mut Self, SizeConstraint, SizeConstraint)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size constraints for this view.\n","sig":null,"attributes":[{"value":"/ Sets the size constraints for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211749,"byte_end":211793,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212072,"byte_end":212081,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"set_width","qualname":"<BoxView<T>>::set_width","value":"pub fn set_width(&mut Self, SizeConstraint)","parent":null,"children":[],"decl_id":null,"docs":" Sets the width constraint for this view.","sig":null,"attributes":[{"value":"/ Sets the width constraint for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211971,"byte_end":212015,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212020,"byte_end":212023,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Leaves the height unchanged.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212028,"byte_end":212060,"line_start":66,"line_end":66,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212286,"byte_end":212296,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"set_height","qualname":"<BoxView<T>>::set_height","value":"pub fn set_height(&mut Self, SizeConstraint)","parent":null,"children":[],"decl_id":null,"docs":" Sets the height constraint for this view.","sig":null,"attributes":[{"value":"/ Sets the height constraint for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212185,"byte_end":212230,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212235,"byte_end":212238,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Leaves the width unchanged.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212243,"byte_end":212274,"line_start":74,"line_end":74,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212786,"byte_end":212796,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"squishable","qualname":"<BoxView<T>>::squishable","value":"pub fn squishable(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to be squishable.","sig":null,"attributes":[{"value":"/ Sets `self` to be squishable.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212402,"byte_end":212435,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212440,"byte_end":212443,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ A squishable `BoxView` will take a smaller size than it should when","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212448,"byte_end":212519,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ the available space is too small. In that case, it will allow the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212524,"byte_end":212593,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ child view to contract, if it can.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212598,"byte_end":212636,"line_start":84,"line_end":84,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212641,"byte_end":212644,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ More specifically, if the available space is less than the size we","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212649,"byte_end":212719,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ would normally ask for, return the child size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212724,"byte_end":212774,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212925,"byte_end":212939,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"set_squishable","qualname":"<BoxView<T>>::set_squishable","value":"pub fn set_squishable(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Controls the \"squishability\" of `self`.\n","sig":null,"attributes":[{"value":"/ Controls the \"squishability\" of `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":212870,"byte_end":212913,"line_start":92,"line_end":92,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213115,"byte_end":213130,"line_start":99,"line_end":99,"column_start":12,"column_end":27},"name":"with_fixed_size","qualname":"<BoxView<T>>::with_fixed_size","value":"pub fn with_fixed_size<S: Into<Vec2>>(S, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `BoxView` with the given size.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `BoxView` with the given size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213047,"byte_end":213103,"line_start":98,"line_end":98,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213419,"byte_end":213435,"line_start":110,"line_end":110,"column_start":12,"column_end":28},"name":"with_fixed_width","qualname":"<BoxView<T>>::with_fixed_width","value":"pub fn with_fixed_width(usize, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `BoxView` with fixed width.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `BoxView` with fixed width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213354,"byte_end":213407,"line_start":109,"line_end":109,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213625,"byte_end":213642,"line_start":115,"line_end":115,"column_start":12,"column_end":29},"name":"with_fixed_height","qualname":"<BoxView<T>>::with_fixed_height","value":"pub fn with_fixed_height(usize, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `BoxView` with fixed height.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `BoxView` with fixed height.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213559,"byte_end":213613,"line_start":114,"line_end":114,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213848,"byte_end":213864,"line_start":120,"line_end":120,"column_start":12,"column_end":28},"name":"with_full_screen","qualname":"<BoxView<T>>::with_full_screen","value":"pub fn with_full_screen(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will take all available space.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will take all available space.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213768,"byte_end":213836,"line_start":119,"line_end":119,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214046,"byte_end":214061,"line_start":125,"line_end":125,"column_start":12,"column_end":27},"name":"with_full_width","qualname":"<BoxView<T>>::with_full_width","value":"pub fn with_full_width(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will take all available width.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will take all available width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":213966,"byte_end":214034,"line_start":124,"line_end":124,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214244,"byte_end":214260,"line_start":130,"line_end":130,"column_start":12,"column_end":28},"name":"with_full_height","qualname":"<BoxView<T>>::with_full_height","value":"pub fn with_full_height(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will take all available height.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will take all available height.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214163,"byte_end":214232,"line_start":129,"line_end":129,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214445,"byte_end":214458,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"with_max_size","qualname":"<BoxView<T>>::with_max_size","value":"pub fn with_max_size<S: Into<Vec2>>(S, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will never be bigger than `size`.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will never be bigger than `size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214362,"byte_end":214433,"line_start":134,"line_end":134,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214836,"byte_end":214850,"line_start":148,"line_end":148,"column_start":12,"column_end":26},"name":"with_max_width","qualname":"<BoxView<T>>::with_max_width","value":"pub fn with_max_width(usize, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will enforce a maximum width.","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will enforce a maximum width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214684,"byte_end":214751,"line_start":145,"line_end":145,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214756,"byte_end":214759,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The resulting width will never be more than `max_width`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":214764,"byte_end":214824,"line_start":147,"line_end":147,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215185,"byte_end":215200,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"with_max_height","qualname":"<BoxView<T>>::with_max_height","value":"pub fn with_max_height(usize, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will enforce a maximum height.","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will enforce a maximum height.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215030,"byte_end":215098,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215103,"byte_end":215106,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The resulting height will never be more than `max_height`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215111,"byte_end":215173,"line_start":158,"line_end":158,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215466,"byte_end":215479,"line_start":168,"line_end":168,"column_start":12,"column_end":25},"name":"with_min_size","qualname":"<BoxView<T>>::with_min_size","value":"pub fn with_min_size<S: Into<Vec2>>(S, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will never be smaller than `size`.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will never be smaller than `size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215382,"byte_end":215454,"line_start":167,"line_end":167,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215859,"byte_end":215873,"line_start":181,"line_end":181,"column_start":12,"column_end":26},"name":"with_min_width","qualname":"<BoxView<T>>::with_min_width","value":"pub fn with_min_width(usize, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will enforce a minimum width.","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will enforce a minimum width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215707,"byte_end":215774,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215779,"byte_end":215782,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The resulting width will never be less than `min_width`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":215787,"byte_end":215847,"line_start":180,"line_end":180,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":216209,"byte_end":216224,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"with_min_height","qualname":"<BoxView<T>>::with_min_height","value":"pub fn with_min_height(usize, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will enforce a minimum height.","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will enforce a minimum height.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":216054,"byte_end":216122,"line_start":189,"line_end":189,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":216127,"byte_end":216130,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The resulting height will never be less than `min_height`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":216135,"byte_end":216197,"line_start":191,"line_end":191,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221787,"byte_end":221793,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Button","qualname":"::views::button::Button","value":"Button {  }","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847}],"decl_id":null,"docs":" Simple text label with a callback when <Enter> is pressed.","sig":null,"attributes":[{"value":"/ Simple text label with a callback when <Enter> is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221509,"byte_end":221571,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221572,"byte_end":221575,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A button shows its content in a single line and has a fixed size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221576,"byte_end":221645,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221646,"byte_end":221649,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221650,"byte_end":221664,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221665,"byte_end":221668,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221669,"byte_end":221676,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cursive::views::Button;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221677,"byte_end":221710,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ let quit_button = Button::new(\"Quit\", |s| s.quit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221711,"byte_end":221767,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221768,"byte_end":221775,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221997,"byte_end":222000,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Button>::new","value":"pub fn new<F, S>(S, F) -> Self where F: 'static + Fn(&mut Cursive) -> (),\nS: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new button with the given content and callback.\n","sig":null,"attributes":[{"value":"/ Creates a new button with the given content and callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221924,"byte_end":221985,"line_start":31,"line_end":31,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222267,"byte_end":222274,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"new_raw","qualname":"<Button>::new_raw","value":"pub fn new_raw<F, S: Into<String>>(S, F) -> Self where F: 'static +\nFn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates a new button without angle brackets.\n","sig":null,"attributes":[{"value":"/ Creates a new button without angle brackets.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222207,"byte_end":222255,"line_start":41,"line_end":41,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222708,"byte_end":222720,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"set_callback","qualname":"<Button>::set_callback","value":"pub fn set_callback<F>(&mut Self, F) where F: Fn(&mut Cursive) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the function to be called when the button is pressed.","sig":null,"attributes":[{"value":"/ Sets the function to be called when the button is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222586,"byte_end":222648,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222653,"byte_end":222656,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Replaces the previous callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222661,"byte_end":222696,"line_start":57,"line_end":57,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222942,"byte_end":222949,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"disable","qualname":"<Button>::disable","value":"pub fn disable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222855,"byte_end":222878,"line_start":65,"line_end":65,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222883,"byte_end":222886,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ A disabled view cannot be selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":222891,"byte_end":222930,"line_start":67,"line_end":67,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223074,"byte_end":223082,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"disabled","qualname":"<Button>::disabled","value":"pub fn disabled(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223004,"byte_end":223027,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223032,"byte_end":223035,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223040,"byte_end":223062,"line_start":74,"line_end":74,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223180,"byte_end":223186,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"enable","qualname":"<Button>::enable","value":"pub fn enable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.\n","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223143,"byte_end":223168,"line_start":79,"line_end":79,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223284,"byte_end":223295,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"set_enabled","qualname":"<Button>::set_enabled","value":"pub fn set_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable this view.\n","sig":null,"attributes":[{"value":"/ Enable or disable this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223240,"byte_end":223272,"line_start":84,"line_end":84,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223422,"byte_end":223432,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<Button>::is_enabled","value":"pub fn is_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view is enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223367,"byte_end":223410,"line_start":89,"line_end":89,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223770,"byte_end":223775,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"label","qualname":"<Button>::label","value":"pub fn label(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the label for this button.","sig":null,"attributes":[{"value":"/ Returns the label for this button.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223482,"byte_end":223520,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223525,"byte_end":223528,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Includes brackets.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223533,"byte_end":223555,"line_start":96,"line_end":96,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223560,"byte_end":223563,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223568,"byte_end":223582,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223587,"byte_end":223590,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223595,"byte_end":223606,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::Button;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223611,"byte_end":223644,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/ let button = Button::new(\"Quit\", |s| s.quit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223649,"byte_end":223700,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(button.label(), \"<Quit>\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223705,"byte_end":223746,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223751,"byte_end":223758,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223918,"byte_end":223927,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"set_label","qualname":"<Button>::set_label","value":"pub fn set_label<S>(&mut Self, S) where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Sets the label to the given value.","sig":null,"attributes":[{"value":"/ Sets the label to the given value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223824,"byte_end":223862,"line_start":109,"line_end":109,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223867,"byte_end":223870,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This will include brackets.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":223875,"byte_end":223906,"line_start":111,"line_end":111,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":224169,"byte_end":224182,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"set_label_raw","qualname":"<Button>::set_label_raw","value":"pub fn set_label_raw<S>(&mut Self, S) where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Sets the label exactly to the given value.","sig":null,"attributes":[{"value":"/ Sets the label exactly to the given value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":224063,"byte_end":224109,"line_start":119,"line_end":119,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":224114,"byte_end":224117,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This will not include brackets.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":224122,"byte_end":224157,"line_start":121,"line_end":121,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":226977,"byte_end":226983,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Canvas","qualname":"::views::canvas::Canvas","value":"Canvas {  }","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925}],"decl_id":null,"docs":" A blank view that forwards calls to closures.","sig":null,"attributes":[{"value":"/ A blank view that forwards calls to closures.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":226851,"byte_end":226900,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":226901,"byte_end":226904,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ You can use this view to easily draw your own interface.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":226905,"byte_end":226965,"line_start":14,"line_end":14,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":227623,"byte_end":227627,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"wrap","qualname":"<Canvas<T>>::wrap","value":"pub fn wrap(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Canvas around the given view.","sig":null,"attributes":[{"value":"/ Creates a new Canvas around the given view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":227498,"byte_end":227545,"line_start":30,"line_end":30,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":227550,"byte_end":227553,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ By default, forwards all calls to the inner view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":227558,"byte_end":227611,"line_start":32,"line_end":32,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228420,"byte_end":228423,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Canvas<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty Canvas.","sig":null,"attributes":[{"value":"/ Creates a new, empty Canvas.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228102,"byte_end":228134,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228139,"byte_end":228142,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228147,"byte_end":228161,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228166,"byte_end":228169,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228174,"byte_end":228185,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::Canvas;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228190,"byte_end":228223,"line_start":53,"line_end":53,"column_start":5,"column_end":38}},{"value":"/ let canvas = Canvas::new(())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228228,"byte_end":228260,"line_start":54,"line_end":54,"column_start":5,"column_end":37}},{"value":"/                     .with_draw(|printer, _| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228265,"byte_end":228314,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                         // Print the view","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228319,"byte_end":228364,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/                     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228369,"byte_end":228396,"line_start":57,"line_end":57,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228401,"byte_end":228408,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229072,"byte_end":229081,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"state_mut","qualname":"<Canvas<T>>::state_mut","value":"pub fn state_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner state.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner state.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229012,"byte_end":229060,"line_start":76,"line_end":76,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229194,"byte_end":229202,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"set_draw","qualname":"<Canvas<T>>::set_draw","value":"pub fn set_draw<F>(&mut Self, F) where F: 'static + Fn(&T, &Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `draw(&Printer)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `draw(&Printer)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229140,"byte_end":229182,"line_start":81,"line_end":81,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229419,"byte_end":229428,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"with_draw","qualname":"<Canvas<T>>::with_draw","value":"pub fn with_draw<F>(Self, F) -> Self where F: 'static + Fn(&T, &Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `draw(&Printer)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `draw(&Printer)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229330,"byte_end":229372,"line_start":89,"line_end":89,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229377,"byte_end":229380,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229385,"byte_end":229407,"line_start":91,"line_end":91,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229618,"byte_end":229630,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"set_on_event","qualname":"<Canvas<T>>::set_on_event","value":"pub fn set_on_event<F>(&mut Self, F) where F: 'static + FnMut(&mut T, Event)\n-> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `on_event(Event)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `on_event(Event)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229563,"byte_end":229606,"line_start":99,"line_end":99,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229863,"byte_end":229876,"line_start":110,"line_end":110,"column_start":12,"column_end":25},"name":"with_on_event","qualname":"<Canvas<T>>::with_on_event","value":"pub fn with_on_event<F>(Self, F) -> Self where F: 'static +\nFnMut(&mut T, Event) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `on_event(Event)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `on_event(Event)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229773,"byte_end":229816,"line_start":107,"line_end":107,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229821,"byte_end":229824,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":229829,"byte_end":229851,"line_start":109,"line_end":109,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230085,"byte_end":230102,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"set_required_size","qualname":"<Canvas<T>>::set_required_size","value":"pub fn set_required_size<F>(&mut Self, F) where F: 'static +\nFnMut(&mut T, Vec2) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `required_size(Vec2)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `required_size(Vec2)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230026,"byte_end":230073,"line_start":117,"line_end":117,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230336,"byte_end":230354,"line_start":128,"line_end":128,"column_start":12,"column_end":30},"name":"with_required_size","qualname":"<Canvas<T>>::with_required_size","value":"pub fn with_required_size<F>(Self, F) -> Self where F: 'static +\nFnMut(&mut T, Vec2) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `required_size(Vec2)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `required_size(Vec2)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230242,"byte_end":230289,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230294,"byte_end":230297,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230302,"byte_end":230324,"line_start":127,"line_end":127,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230553,"byte_end":230563,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"set_layout","qualname":"<Canvas<T>>::set_layout","value":"pub fn set_layout<F>(&mut Self, F) where F: 'static + FnMut(&mut T, Vec2) ->\n()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `layout(Vec2)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `layout(Vec2)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230501,"byte_end":230541,"line_start":135,"line_end":135,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230775,"byte_end":230786,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"with_layout","qualname":"<Canvas<T>>::with_layout","value":"pub fn with_layout<F>(Self, F) -> Self where F: 'static + FnMut(&mut T, Vec2)\n-> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `layout(Vec2)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `layout(Vec2)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230688,"byte_end":230728,"line_start":143,"line_end":143,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230733,"byte_end":230736,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230741,"byte_end":230763,"line_start":145,"line_end":145,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230979,"byte_end":230993,"line_start":154,"line_end":154,"column_start":12,"column_end":26},"name":"set_take_focus","qualname":"<Canvas<T>>::set_take_focus","value":"pub fn set_take_focus<F>(&mut Self, F) where F: 'static +\nFnMut(&mut T, Direction) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `take_focus(Direction)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `take_focus(Direction)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":230918,"byte_end":230967,"line_start":153,"line_end":153,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231231,"byte_end":231246,"line_start":164,"line_end":164,"column_start":12,"column_end":27},"name":"with_take_focus","qualname":"<Canvas<T>>::with_take_focus","value":"pub fn with_take_focus<F>(Self, F) -> Self where F: 'static +\nFnMut(&mut T, Direction) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `take_focus(Direction)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `take_focus(Direction)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231135,"byte_end":231184,"line_start":161,"line_end":161,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231189,"byte_end":231192,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231197,"byte_end":231219,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231451,"byte_end":231469,"line_start":172,"line_end":172,"column_start":12,"column_end":30},"name":"set_needs_relayout","qualname":"<Canvas<T>>::set_needs_relayout","value":"pub fn set_needs_relayout<F>(&mut Self, F) where F: 'static + Fn(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `needs_relayout()`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `needs_relayout()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231395,"byte_end":231439,"line_start":171,"line_end":171,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231688,"byte_end":231707,"line_start":182,"line_end":182,"column_start":12,"column_end":31},"name":"with_needs_relayout","qualname":"<Canvas<T>>::with_needs_relayout","value":"pub fn with_needs_relayout<F>(Self, F) -> Self where F: 'static + Fn(&T) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `needs_relayout()`.","sig":null,"attributes":[{"value":"/ Sets the closure for `needs_relayout()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231597,"byte_end":231641,"line_start":179,"line_end":179,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231646,"byte_end":231649,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231654,"byte_end":231676,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231895,"byte_end":231910,"line_start":190,"line_end":190,"column_start":12,"column_end":27},"name":"set_call_on_any","qualname":"<Canvas<T>>::set_call_on_any","value":"pub fn set_call_on_any<F>(&mut Self, F) where F: 'static +\nfor<'a> FnMut(&mut T, &Selector, AnyCb) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `call_on_any()`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `call_on_any()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":231842,"byte_end":231883,"line_start":189,"line_end":189,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232156,"byte_end":232172,"line_start":200,"line_end":200,"column_start":12,"column_end":28},"name":"with_call_on_any","qualname":"<Canvas<T>>::with_call_on_any","value":"pub fn with_call_on_any<F>(Self, F) -> Self where F: 'static +\nfor<'a> FnMut(&mut T, &Selector, AnyCb) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `call_on_any()`.","sig":null,"attributes":[{"value":"/ Sets the closure for `call_on_any()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232068,"byte_end":232109,"line_start":197,"line_end":197,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232114,"byte_end":232117,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232122,"byte_end":232144,"line_start":199,"line_end":199,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232393,"byte_end":232411,"line_start":208,"line_end":208,"column_start":12,"column_end":30},"name":"set_important_area","qualname":"<Canvas<T>>::set_important_area","value":"pub fn set_important_area<F>(&mut Self, F) where F: 'static + Fn(&T, Vec2) ->\nRect","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `important_area()`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `important_area()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232337,"byte_end":232381,"line_start":207,"line_end":207,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232636,"byte_end":232655,"line_start":218,"line_end":218,"column_start":12,"column_end":31},"name":"with_important_area","qualname":"<Canvas<T>>::with_important_area","value":"pub fn with_important_area<F>(Self, F) -> Self where F: 'static + Fn(&T, Vec2)\n-> Rect","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `important_area()`.","sig":null,"attributes":[{"value":"/ Sets the closure for `important_area()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232545,"byte_end":232589,"line_start":215,"line_end":215,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232594,"byte_end":232597,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232602,"byte_end":232624,"line_start":217,"line_end":217,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232848,"byte_end":232862,"line_start":226,"line_end":226,"column_start":12,"column_end":26},"name":"set_focus_view","qualname":"<Canvas<T>>::set_focus_view","value":"pub fn set_focus_view<F>(&mut Self, F) where F: 'static +\nFnMut(&mut T, &Selector) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `focus_view()`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `focus_view()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":232796,"byte_end":232836,"line_start":225,"line_end":225,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":233105,"byte_end":233120,"line_start":236,"line_end":236,"column_start":12,"column_end":27},"name":"with_focus_view","qualname":"<Canvas<T>>::with_focus_view","value":"pub fn with_focus_view<F>(Self, F) -> Self where F: 'static +\nFnMut(&mut T, &Selector) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `focus_view()`.","sig":null,"attributes":[{"value":"/ Sets the closure for `focus_view()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":233018,"byte_end":233058,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":233063,"byte_end":233066,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":233071,"byte_end":233093,"line_start":235,"line_end":235,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":234630,"byte_end":234638,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"Checkbox","qualname":"::views::checkbox::Checkbox","value":"Checkbox {  }","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045}],"decl_id":null,"docs":" Checkable box.\n","sig":null,"attributes":[{"value":"/ Checkable box.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":234600,"byte_end":234618,"line_start":11,"line_end":11,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":234867,"byte_end":234870,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Checkbox>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, unchecked checkbox.\n","sig":null,"attributes":[{"value":"/ Creates a new, unchecked checkbox.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":234817,"byte_end":234855,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235073,"byte_end":235086,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"set_on_change","qualname":"<Checkbox>::set_on_change","value":"pub fn set_on_change<F: 'static + Fn(&mut Cursive, bool) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when the state changes.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be used when the state changes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235007,"byte_end":235061,"line_start":33,"line_end":33,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235329,"byte_end":235338,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"on_change","qualname":"<Checkbox>::on_change","value":"pub fn on_change<F: 'static + Fn(&mut Cursive, bool) -> ()>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when the state changes.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when the state changes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235228,"byte_end":235282,"line_start":40,"line_end":40,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235287,"byte_end":235290,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235295,"byte_end":235317,"line_start":42,"line_end":42,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235525,"byte_end":235531,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"toggle","qualname":"<Checkbox>::toggle","value":"pub fn toggle(&mut Self) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Toggles the checkbox state.\n","sig":null,"attributes":[{"value":"/ Toggles the checkbox state.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235482,"byte_end":235513,"line_start":49,"line_end":49,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235677,"byte_end":235682,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"check","qualname":"<Checkbox>::check","value":"pub fn check(&mut Self) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Check the checkbox.\n","sig":null,"attributes":[{"value":"/ Check the checkbox.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235642,"byte_end":235665,"line_start":55,"line_end":55,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235823,"byte_end":235830,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"checked","qualname":"<Checkbox>::checked","value":"pub fn checked(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Check the checkbox.","sig":null,"attributes":[{"value":"/ Check the checkbox.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235753,"byte_end":235776,"line_start":60,"line_end":60,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235781,"byte_end":235784,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235789,"byte_end":235811,"line_start":62,"line_end":62,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235974,"byte_end":235984,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"is_checked","qualname":"<Checkbox>::is_checked","value":"pub fn is_checked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the checkbox is checked.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the checkbox is checked.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":235916,"byte_end":235962,"line_start":69,"line_end":69,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236071,"byte_end":236078,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"uncheck","qualname":"<Checkbox>::uncheck","value":"pub fn uncheck(&mut Self) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Uncheck the checkbox.\n","sig":null,"attributes":[{"value":"/ Uncheck the checkbox.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236034,"byte_end":236059,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236222,"byte_end":236231,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"unchecked","qualname":"<Checkbox>::unchecked","value":"pub fn unchecked(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Uncheck the checkbox.","sig":null,"attributes":[{"value":"/ Uncheck the checkbox.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236150,"byte_end":236175,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236180,"byte_end":236183,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236188,"byte_end":236210,"line_start":81,"line_end":81,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236359,"byte_end":236370,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"set_checked","qualname":"<Checkbox>::set_checked","value":"pub fn set_checked(&mut Self, bool) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the checkbox state.\n","sig":null,"attributes":[{"value":"/ Sets the checkbox state.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236319,"byte_end":236347,"line_start":88,"line_end":88,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238251,"byte_end":238264,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"CircularFocus","qualname":"::views::circular_focus::CircularFocus","value":"CircularFocus {  }","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096}],"decl_id":null,"docs":" Adds circular focus to a wrapped view.","sig":null,"attributes":[{"value":"/ Adds circular focus to a wrapped view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":237976,"byte_end":238018,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238019,"byte_end":238022,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Wrap a view in `CircularFocus` to enable wrap-around focus","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238023,"byte_end":238085,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/ (when the focus exits this view, it will come back the other side).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238086,"byte_end":238157,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238158,"byte_end":238161,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It can be configured to wrap Tab (and Shift+Tab) keys, and/or Arrow keys.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238162,"byte_end":238239,"line_start":10,"line_end":10,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238599,"byte_end":238602,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<CircularFocus<T>>::new","value":"pub fn new(T, bool, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CircularFocus` around the given view.","sig":null,"attributes":[{"value":"/ Creates a new `CircularFocus` around the given view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238372,"byte_end":238428,"line_start":18,"line_end":18,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238433,"byte_end":238436,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ If `wrap_tab` is true, Tab keys will cause focus to wrap around.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238441,"byte_end":238509,"line_start":20,"line_end":20,"column_start":5,"column_end":73}},{"value":"/ If `wrap_arrows` is true, Arrow keys will cause focus to wrap around.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238514,"byte_end":238587,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239007,"byte_end":239015,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"wrap_tab","qualname":"<CircularFocus<T>>::wrap_tab","value":"pub fn wrap_tab(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CircularFocus` view which will wrap around Tab-based\n focus changes.","sig":null,"attributes":[{"value":"/ Creates a new `CircularFocus` view which will wrap around Tab-based","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238767,"byte_end":238838,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ focus changes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238843,"byte_end":238861,"line_start":31,"line_end":31,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238866,"byte_end":238869,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Whenever `Tab` would leave focus from this view, the focus will be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238874,"byte_end":238944,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ brought back to the beginning of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238949,"byte_end":238995,"line_start":34,"line_end":34,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239236,"byte_end":239247,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"wrap_arrows","qualname":"<CircularFocus<T>>::wrap_arrows","value":"pub fn wrap_arrows(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CircularFocus` view which will wrap around Tab-based\n focus changes.","sig":null,"attributes":[{"value":"/ Creates a new `CircularFocus` view which will wrap around Tab-based","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239092,"byte_end":239163,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/ focus changes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239168,"byte_end":239186,"line_start":40,"line_end":40,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239191,"byte_end":239194,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Whenever an arrow key","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239199,"byte_end":239224,"line_start":42,"line_end":42,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239393,"byte_end":239402,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"wraps_tab","qualname":"<CircularFocus<T>>::wraps_tab","value":"pub fn wraps_tab(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if Tab key cause focus to wrap around.\n","sig":null,"attributes":[{"value":"/ Returns `true` if Tab key cause focus to wrap around.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239324,"byte_end":239381,"line_start":47,"line_end":47,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239525,"byte_end":239537,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"wraps_arrows","qualname":"<CircularFocus<T>>::wraps_arrows","value":"pub fn wraps_arrows(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if Arrow keys cause focus to wrap around.\n","sig":null,"attributes":[{"value":"/ Returns `true` if Arrow keys cause focus to wrap around.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239453,"byte_end":239513,"line_start":52,"line_end":52,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242167,"byte_end":242176,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"DebugView","qualname":"::views::debug_view::DebugView","value":"DebugView {  }","parent":null,"children":[],"decl_id":null,"docs":" View used for debugging, showing logs.\n","sig":null,"attributes":[{"value":"/ View used for debugging, showing logs.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242113,"byte_end":242155,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242313,"byte_end":242316,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugView>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DebugView.\n","sig":null,"attributes":[{"value":"/ Creates a new DebugView.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242273,"byte_end":242301,"line_start":15,"line_end":15,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6153},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":244994,"byte_end":245001,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Content","qualname":"::views::dialog::DialogFocus::Content","value":"DialogFocus::Content","parent":{"krate":0,"index":6152},"children":[],"decl_id":null,"docs":" Content element focused\n","sig":null,"attributes":[{"value":"/ Content element focused","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":244962,"byte_end":244989,"line_start":21,"line_end":21,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6155},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245038,"byte_end":245044,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Button","qualname":"::views::dialog::DialogFocus::Button","value":"DialogFocus::Button(usize)","parent":{"krate":0,"index":6152},"children":[],"decl_id":null,"docs":" One of buttons focused\n","sig":null,"attributes":[{"value":"/ One of buttons focused","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245007,"byte_end":245033,"line_start":23,"line_end":23,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":6152},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":244944,"byte_end":244955,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"DialogFocus","qualname":"::views::dialog::DialogFocus","value":"pub enum DialogFocus { Content, Button(usize), }","parent":null,"children":[{"krate":0,"index":6153},{"krate":0,"index":6155}],"decl_id":null,"docs":" Identifies currently focused element in [`Dialog`].","sig":null,"attributes":[{"value":"/ Identifies currently focused element in [`Dialog`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":244795,"byte_end":244850,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":244851,"byte_end":244854,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Dialog`]: struct.Dialog.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":244855,"byte_end":244889,"line_start":18,"line_end":18,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245692,"byte_end":245698,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Dialog","qualname":"::views::dialog::Dialog","value":"Dialog {  }","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231}],"decl_id":null,"docs":" Popup-like view with a main content, and optional buttons under it.","sig":null,"attributes":[{"value":"/ Popup-like view with a main content, and optional buttons under it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245415,"byte_end":245486,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245487,"byte_end":245490,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245491,"byte_end":245505,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245506,"byte_end":245509,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245510,"byte_end":245517,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ # use cursive::views::{Dialog,TextView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245518,"byte_end":245562,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ let dialog = Dialog::around(TextView::new(\"Hello!\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245563,"byte_end":245619,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/                     .button(\"Ok\", |s| s.quit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245620,"byte_end":245672,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245673,"byte_end":245680,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":246473,"byte_end":246476,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<Dialog>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Dialog` with empty content.","sig":null,"attributes":[{"value":"/ Creates a new `Dialog` with empty content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":246356,"byte_end":246402,"line_start":86,"line_end":86,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":246407,"byte_end":246410,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ You should probably call `content()` next.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":246415,"byte_end":246461,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":246594,"byte_end":246600,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"around","qualname":"<Dialog>::around","value":"pub fn around<V: View + 'static>(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Dialog` with the given content.\n","sig":null,"attributes":[{"value":"/ Creates a new `Dialog` with the given content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":246532,"byte_end":246582,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247136,"byte_end":247143,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"content","qualname":"<Dialog>::content","value":"pub fn content<V: View + 'static>(Self, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the content for this dialog.","sig":null,"attributes":[{"value":"/ Sets the content for this dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247052,"byte_end":247089,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247094,"byte_end":247097,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247102,"byte_end":247124,"line_start":110,"line_end":110,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247650,"byte_end":247661,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"get_content","qualname":"<Dialog>::get_content","value":"pub fn get_content(&Self) -> &dyn View","parent":null,"children":[],"decl_id":null,"docs":" Gets the content of this dialog.","sig":null,"attributes":[{"value":"/ Gets the content of this dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247242,"byte_end":247278,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247283,"byte_end":247286,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247291,"byte_end":247298,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use cursive::views::{Dialog, TextView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247303,"byte_end":247346,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/ let dialog = Dialog::around(TextView::new(\"Hello!\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247351,"byte_end":247408,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ let text_view: &TextView = dialog","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247413,"byte_end":247450,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/     .get_content()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247455,"byte_end":247477,"line_start":121,"line_end":121,"column_start":5,"column_end":27}},{"value":"/     .as_any()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247482,"byte_end":247499,"line_start":122,"line_end":122,"column_start":5,"column_end":22}},{"value":"/     .downcast_ref::<TextView>()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247504,"byte_end":247539,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247544,"byte_end":247562,"line_start":124,"line_end":124,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(text_view.get_content().source(), \"Hello!\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247567,"byte_end":247626,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247631,"byte_end":247638,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247774,"byte_end":247789,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"get_content_mut","qualname":"<Dialog>::get_content_mut","value":"pub fn get_content_mut(&mut Self) -> &mut dyn View","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable access to the content.\n","sig":null,"attributes":[{"value":"/ Gets mutable access to the content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247723,"byte_end":247762,"line_start":131,"line_end":131,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247989,"byte_end":248000,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"set_content","qualname":"<Dialog>::set_content","value":"pub fn set_content<V: View + 'static>(&mut Self, V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the content for this dialog.","sig":null,"attributes":[{"value":"/ Sets the content for this dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247890,"byte_end":247927,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247932,"byte_end":247935,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Previous content will be dropped.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":247940,"byte_end":247977,"line_start":139,"line_end":139,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248221,"byte_end":248225,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"text","qualname":"<Dialog>::text","value":"pub fn text<S: Into<String>>(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to create a dialog with a simple text content.\n","sig":null,"attributes":[{"value":"/ Convenient method to create a dialog with a simple text content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248141,"byte_end":248209,"line_start":145,"line_end":145,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248444,"byte_end":248448,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"info","qualname":"<Dialog>::info","value":"pub fn info<S: Into<String>>(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to create an infobox.","sig":null,"attributes":[{"value":"/ Convenient method to create an infobox.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248315,"byte_end":248358,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248363,"byte_end":248366,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ It will contain the given text and a `Ok` dismiss button.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248371,"byte_end":248432,"line_start":152,"line_end":152,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248683,"byte_end":248689,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"button","qualname":"<Dialog>::button","value":"pub fn button<F, S: Into<String>>(Self, S, F) -> Self where F: 'static +\nFn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a button to the dialog with the given label and callback.","sig":null,"attributes":[{"value":"/ Adds a button to the dialog with the given label and callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248544,"byte_end":248610,"line_start":157,"line_end":157,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248615,"byte_end":248618,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Consumes and returns self for easy chaining.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248623,"byte_end":248671,"line_start":159,"line_end":159,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248932,"byte_end":248942,"line_start":168,"line_end":168,"column_start":12,"column_end":22},"name":"add_button","qualname":"<Dialog>::add_button","value":"pub fn add_button<F, S: Into<String>>(&mut Self, S, F) where F: 'static +\nFn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a button to the dialog with the given label and callback.\n","sig":null,"attributes":[{"value":"/ Adds a button to the dialog with the given label and callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":248854,"byte_end":248920,"line_start":167,"line_end":167,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249201,"byte_end":249212,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"buttons_len","qualname":"<Dialog>::buttons_len","value":"pub fn buttons_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of buttons on this dialog.\n","sig":null,"attributes":[{"value":"/ Returns the number of buttons on this dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249140,"byte_end":249189,"line_start":176,"line_end":176,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249316,"byte_end":249329,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"clear_buttons","qualname":"<Dialog>::clear_buttons","value":"pub fn clear_buttons(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes any button from `self`.\n","sig":null,"attributes":[{"value":"/ Removes any button from `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249269,"byte_end":249304,"line_start":181,"line_end":181,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249539,"byte_end":249552,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"remove_button","qualname":"<Dialog>::remove_button","value":"pub fn remove_button(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Removes a button from this dialog.","sig":null,"attributes":[{"value":"/ Removes a button from this dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249411,"byte_end":249449,"line_start":187,"line_end":187,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249454,"byte_end":249457,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249462,"byte_end":249474,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249479,"byte_end":249482,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Panics if `i >= self.buttons_len()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249487,"byte_end":249527,"line_start":191,"line_end":191,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249800,"byte_end":249807,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"h_align","qualname":"<Dialog>::h_align","value":"pub fn h_align(Self, HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal alignment for the buttons, if any.","sig":null,"attributes":[{"value":"/ Sets the horizontal alignment for the buttons, if any.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249646,"byte_end":249704,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249709,"byte_end":249712,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Only works if the buttons are as a row at the bottom of the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":249717,"byte_end":249788,"line_start":199,"line_end":199,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250287,"byte_end":250301,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"dismiss_button","qualname":"<Dialog>::dismiss_button","value":"pub fn dismiss_button<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut method to add a button that will dismiss the dialog.\n","sig":null,"attributes":[{"value":"/ Shortcut method to add a button that will dismiss the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250210,"byte_end":250275,"line_start":219,"line_end":219,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250533,"byte_end":250538,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"title","qualname":"<Dialog>::title","value":"pub fn title<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the dialog.","sig":null,"attributes":[{"value":"/ Sets the title of the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250427,"byte_end":250460,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250465,"byte_end":250468,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If not empty, it will be visible at the top.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250473,"byte_end":250521,"line_start":228,"line_end":228,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250680,"byte_end":250689,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"set_title","qualname":"<Dialog>::set_title","value":"pub fn set_title<S: Into<String>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the dialog.\n","sig":null,"attributes":[{"value":"/ Sets the title of the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250635,"byte_end":250668,"line_start":233,"line_end":233,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250924,"byte_end":250938,"line_start":241,"line_end":241,"column_start":12,"column_end":26},"name":"title_position","qualname":"<Dialog>::title_position","value":"pub fn title_position(Self, HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal position of the title in the dialog.\n The default position is `HAlign::Center`\n","sig":null,"attributes":[{"value":"/ Sets the horizontal position of the title in the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250803,"byte_end":250863,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/ The default position is `HAlign::Center`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":250868,"byte_end":250912,"line_start":240,"line_end":240,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251153,"byte_end":251171,"line_start":247,"line_end":247,"column_start":12,"column_end":30},"name":"set_title_position","qualname":"<Dialog>::set_title_position","value":"pub fn set_title_position(&mut Self, HAlign)","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal position of the title in the dialog.\n The default position is `HAlign::Center`\n","sig":null,"attributes":[{"value":"/ Sets the horizontal position of the title in the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251032,"byte_end":251092,"line_start":245,"line_end":245,"column_start":5,"column_end":65}},{"value":"/ The default position is `HAlign::Center`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251097,"byte_end":251141,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251324,"byte_end":251331,"line_start":252,"line_end":252,"column_start":12,"column_end":19},"name":"padding","qualname":"<Dialog>::padding","value":"pub fn padding<T: Into<Margins>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the padding in the dialog (around content and buttons).\n","sig":null,"attributes":[{"value":"/ Sets the padding in the dialog (around content and buttons).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251248,"byte_end":251312,"line_start":251,"line_end":251,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251515,"byte_end":251526,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"padding_top","qualname":"<Dialog>::padding_top","value":"pub fn padding_top(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the top padding in the dialog (under the title).\n","sig":null,"attributes":[{"value":"/ Sets the top padding in the dialog (under the title).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251446,"byte_end":251503,"line_start":258,"line_end":258,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251693,"byte_end":251707,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"padding_bottom","qualname":"<Dialog>::padding_bottom","value":"pub fn padding_bottom(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the bottom padding in the dialog (under buttons).\n","sig":null,"attributes":[{"value":"/ Sets the bottom padding in the dialog (under buttons).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251623,"byte_end":251681,"line_start":264,"line_end":264,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251859,"byte_end":251871,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"padding_left","qualname":"<Dialog>::padding_left","value":"pub fn padding_left(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the left padding in the dialog.\n","sig":null,"attributes":[{"value":"/ Sets the left padding in the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251807,"byte_end":251847,"line_start":270,"line_end":270,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":252022,"byte_end":252035,"line_start":277,"line_end":277,"column_start":12,"column_end":25},"name":"padding_right","qualname":"<Dialog>::padding_right","value":"pub fn padding_right(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the right padding in the dialog.\n","sig":null,"attributes":[{"value":"/ Sets the right padding in the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":251969,"byte_end":252010,"line_start":276,"line_end":276,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":252202,"byte_end":252213,"line_start":283,"line_end":283,"column_start":12,"column_end":23},"name":"buttons_mut","qualname":"<Dialog>::buttons_mut","value":"pub fn buttons_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator on this buttons for this dialog.\n","sig":null,"attributes":[{"value":"/ Returns an iterator on this buttons for this dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":252134,"byte_end":252190,"line_start":282,"line_end":282,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":252411,"byte_end":252416,"line_start":289,"line_end":289,"column_start":12,"column_end":17},"name":"focus","qualname":"<Dialog>::focus","value":"pub fn focus(&Self) -> DialogFocus","parent":null,"children":[],"decl_id":null,"docs":" Returns currently focused element\n","sig":null,"attributes":[{"value":"/ Returns currently focused element","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":252362,"byte_end":252399,"line_start":288,"line_end":288,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dummy.rs","byte_start":266228,"byte_end":266237,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"DummyView","qualname":"::views::dummy::DummyView","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy view.","sig":null,"attributes":[{"value":"/ Dummy view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dummy.rs","byte_start":266146,"byte_end":266161,"line_start":4,"line_end":4,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dummy.rs","byte_start":266162,"byte_end":266165,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Doesn't print anything. Minimal size is (1,1).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dummy.rs","byte_start":266166,"byte_end":266216,"line_start":6,"line_end":6,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268698,"byte_end":268706,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"EditView","qualname":"::views::edit_view::EditView","value":"EditView {  }","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395}],"decl_id":null,"docs":" Input box where the user can enter and edit text.","sig":null,"attributes":[{"value":"/ Input box where the user can enter and edit text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267201,"byte_end":267254,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267255,"byte_end":267258,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267259,"byte_end":267273,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267274,"byte_end":267277,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ From the [edit example][1].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267278,"byte_end":267309,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267310,"byte_end":267313,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/gyscos/Cursive/blob/master/examples/edit.rs","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267314,"byte_end":267385,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267386,"byte_end":267389,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267390,"byte_end":267401,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267402,"byte_end":267429,"line_start":34,"line_end":34,"column_start":1,"column_end":28}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267430,"byte_end":267457,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/ # use cursive::traits::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267458,"byte_end":267487,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ # use cursive::views::{Dialog, EditView, TextView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267488,"byte_end":267543,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267544,"byte_end":267561,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267562,"byte_end":267597,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267598,"byte_end":267601,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Create a dialog with an edit text and a button.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267602,"byte_end":267656,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/ // The user can either hit the <Ok> button,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267657,"byte_end":267704,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ // or press Enter on the edit text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267705,"byte_end":267744,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ siv.add_layer(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267745,"byte_end":267763,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/     Dialog::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267764,"byte_end":267785,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/         .title(\"Enter your name\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267786,"byte_end":267823,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/         .padding((1, 1, 1, 0))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267824,"byte_end":267858,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/         .content(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267859,"byte_end":267880,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/             EditView::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267881,"byte_end":267912,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/                 .on_submit(show_popup)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267913,"byte_end":267955,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/                 .with_id(\"name\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267956,"byte_end":267992,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/                 .fixed_width(20),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":267993,"byte_end":268030,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/         )","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268031,"byte_end":268044,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/         .button(\"Ok\", |s| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268045,"byte_end":268076,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/             let name = s.call_on_id(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268077,"byte_end":268117,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/                 \"name\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268118,"byte_end":268145,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/                 |view: &mut EditView| view.get_content(),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268146,"byte_end":268207,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/             ).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268208,"byte_end":268235,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/             show_popup(s, &name);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268236,"byte_end":268273,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         }),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268274,"byte_end":268289,"line_start":60,"line_end":60,"column_start":1,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268290,"byte_end":268296,"line_start":61,"line_end":61,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268297,"byte_end":268300,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn show_popup(s: &mut Cursive, name: &str) {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268301,"byte_end":268349,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/     if name.is_empty() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268350,"byte_end":268378,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         s.add_layer(Dialog::info(\"Please enter a name!\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268379,"byte_end":268441,"line_start":65,"line_end":65,"column_start":1,"column_end":63}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268442,"byte_end":268458,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/         let content = format!(\"Hello {}!\", name);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268459,"byte_end":268512,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/         s.pop_layer();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268513,"byte_end":268539,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/         s.add_layer(Dialog::around(TextView::new(content))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268540,"byte_end":268602,"line_start":69,"line_end":69,"column_start":1,"column_end":63}},{"value":"/             .button(\"Quit\", |s| s.quit()));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268603,"byte_end":268650,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268651,"byte_end":268660,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268661,"byte_end":268666,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268667,"byte_end":268670,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268671,"byte_end":268678,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":268679,"byte_end":268686,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":269780,"byte_end":269783,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<EditView>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty edit view.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty edit view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":269733,"byte_end":269768,"line_start":118,"line_end":118,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270410,"byte_end":270431,"line_start":140,"line_end":140,"column_start":12,"column_end":33},"name":"set_max_content_width","qualname":"<EditView>::set_max_content_width","value":"pub fn set_max_content_width(&mut Self, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets a maximum width for the content.","sig":null,"attributes":[{"value":"/ Sets a maximum width for the content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270205,"byte_end":270246,"line_start":135,"line_end":135,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270251,"byte_end":270254,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Input will be rejected if it would make the content exceed this width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270259,"byte_end":270333,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270338,"byte_end":270341,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Giving `None` means no maximum width is applied.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270346,"byte_end":270398,"line_start":139,"line_end":139,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270693,"byte_end":270710,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"max_content_width","qualname":"<EditView>::max_content_width","value":"pub fn max_content_width(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a maximum width for the content.","sig":null,"attributes":[{"value":"/ Sets a maximum width for the content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270518,"byte_end":270559,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270564,"byte_end":270567,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Input will be rejected if it would make the content exceed this width.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270572,"byte_end":270646,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270651,"byte_end":270654,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270659,"byte_end":270681,"line_start":148,"line_end":148,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270931,"byte_end":270941,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"set_secret","qualname":"<EditView>::set_secret","value":"pub fn set_secret(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" If `secret` is `true`, the content won't be displayed in clear.","sig":null,"attributes":[{"value":"/ If `secret` is `true`, the content won't be displayed in clear.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270812,"byte_end":270879,"line_start":153,"line_end":153,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270884,"byte_end":270887,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Only `*` will be shown.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":270892,"byte_end":270919,"line_start":155,"line_end":155,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271096,"byte_end":271102,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"secret","qualname":"<EditView>::secret","value":"pub fn secret(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Hides the content of the view.","sig":null,"attributes":[{"value":"/ Hides the content of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271010,"byte_end":271044,"line_start":160,"line_end":160,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271049,"byte_end":271052,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Only `*` will be shown.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271057,"byte_end":271084,"line_start":162,"line_end":162,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271263,"byte_end":271273,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"set_filler","qualname":"<EditView>::set_filler","value":"pub fn set_filler<S: Into<String>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Sets the character to fill in blank space.","sig":null,"attributes":[{"value":"/ Sets the character to fill in blank space.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271172,"byte_end":271218,"line_start":167,"line_end":167,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271223,"byte_end":271226,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Defaults to \"_\".","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271231,"byte_end":271251,"line_start":169,"line_end":169,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271607,"byte_end":271613,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"filler","qualname":"<EditView>::filler","value":"pub fn filler<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the character to fill in blank space.","sig":null,"attributes":[{"value":"/ Sets the character to fill in blank space.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271363,"byte_end":271409,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271414,"byte_end":271417,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271422,"byte_end":271444,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271449,"byte_end":271452,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271457,"byte_end":271471,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271476,"byte_end":271479,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271484,"byte_end":271495,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::EditView;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271500,"byte_end":271535,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/ let edit = EditView::new().filler(\" \");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271540,"byte_end":271583,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271588,"byte_end":271595,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271800,"byte_end":271807,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"disable","qualname":"<EditView>::disable","value":"pub fn disable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271713,"byte_end":271736,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271741,"byte_end":271744,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ A disabled view cannot be selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271749,"byte_end":271788,"line_start":190,"line_end":190,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271932,"byte_end":271940,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"disabled","qualname":"<EditView>::disabled","value":"pub fn disabled(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271862,"byte_end":271885,"line_start":195,"line_end":195,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271890,"byte_end":271893,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":271898,"byte_end":271920,"line_start":197,"line_end":197,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272038,"byte_end":272044,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"enable","qualname":"<EditView>::enable","value":"pub fn enable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.\n","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272001,"byte_end":272026,"line_start":202,"line_end":202,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272271,"byte_end":272280,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"set_style","qualname":"<EditView>::set_style","value":"pub fn set_style(&mut Self, ColorStyle)","parent":null,"children":[],"decl_id":null,"docs":" Sets the style used for this view.","sig":null,"attributes":[{"value":"/ Sets the style used for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272098,"byte_end":272136,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272141,"byte_end":272144,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ When the view is enabled, the style will be reversed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272149,"byte_end":272206,"line_start":209,"line_end":209,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272211,"byte_end":272214,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Defaults to `ColorStyle::Secondary`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272219,"byte_end":272259,"line_start":211,"line_end":211,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272507,"byte_end":272512,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"style","qualname":"<EditView>::style","value":"pub fn style(Self, ColorStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the style used for this view.","sig":null,"attributes":[{"value":"/ Sets the style used for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272352,"byte_end":272390,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272395,"byte_end":272398,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ When the view is enabled, the style will be reversed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272403,"byte_end":272460,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272465,"byte_end":272468,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272473,"byte_end":272495,"line_start":220,"line_end":220,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273103,"byte_end":273118,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"set_on_edit_mut","qualname":"<EditView>::set_on_edit_mut","value":"pub fn set_on_edit_mut<F>(&mut Self, F) where\nF: FnMut(&mut Cursive, &str, usize) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a mutable callback to be called whenever the content is modified.","sig":null,"attributes":[{"value":"/ Sets a mutable callback to be called whenever the content is modified.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272601,"byte_end":272675,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272680,"byte_end":272683,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ `callback` will be called with the view","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272688,"byte_end":272731,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/ content and the current cursor position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272736,"byte_end":272780,"line_start":228,"line_end":228,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272785,"byte_end":272788,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ *Warning*: this callback cannot be called recursively. If you somehow","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272793,"byte_end":272866,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ trigger this callback again in the given closure, it will be ignored.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272871,"byte_end":272944,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272949,"byte_end":272952,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ If you don't need a mutable closure but want the possibility of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":272957,"byte_end":273024,"line_start":233,"line_end":233,"column_start":5,"column_end":72}},{"value":"/ recursive calls, see [`set_on_edit`](#method.set_on_edit).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273029,"byte_end":273091,"line_start":234,"line_end":234,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273759,"byte_end":273770,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"set_on_edit","qualname":"<EditView>::set_on_edit","value":"pub fn set_on_edit<F>(&mut Self, F) where F: Fn(&mut Cursive, &str, usize) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called whenever the content is modified.","sig":null,"attributes":[{"value":"/ Sets a callback to be called whenever the content is modified.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273273,"byte_end":273339,"line_start":242,"line_end":242,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273344,"byte_end":273347,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ `callback` will be called with the view","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273352,"byte_end":273395,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/ content and the current cursor position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273400,"byte_end":273444,"line_start":245,"line_end":245,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273449,"byte_end":273452,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This callback can safely trigger itself recursively if needed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273457,"byte_end":273522,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ (for instance if you call `on_event` on this view from the callback).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273527,"byte_end":273600,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273605,"byte_end":273608,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If you need a mutable closure and don't care about the recursive","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273613,"byte_end":273681,"line_start":250,"line_end":250,"column_start":5,"column_end":73}},{"value":"/ aspect, see [`set_on_edit_mut`](#method.set_on_edit_mut).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273686,"byte_end":273747,"line_start":251,"line_end":251,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274096,"byte_end":274107,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"on_edit_mut","qualname":"<EditView>::on_edit_mut","value":"pub fn on_edit_mut<F>(Self, F) -> Self where\nF: FnMut(&mut Cursive, &str, usize) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a mutable callback to be called whenever the content is modified.","sig":null,"attributes":[{"value":"/ Sets a mutable callback to be called whenever the content is modified.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":273925,"byte_end":273999,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274004,"byte_end":274007,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Chainable variant. See [`set_on_edit_mut`](#method.set_on_edit_mut).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274012,"byte_end":274084,"line_start":261,"line_end":261,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274426,"byte_end":274433,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"on_edit","qualname":"<EditView>::on_edit","value":"pub fn on_edit<F>(Self, F) -> Self where F: Fn(&mut Cursive, &str, usize) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called whenever the content is modified.","sig":null,"attributes":[{"value":"/ Sets a callback to be called whenever the content is modified.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274271,"byte_end":274337,"line_start":269,"line_end":269,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274342,"byte_end":274345,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Chainable variant. See [`set_on_edit`](#method.set_on_edit).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274350,"byte_end":274414,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275050,"byte_end":275067,"line_start":288,"line_end":288,"column_start":12,"column_end":29},"name":"set_on_submit_mut","qualname":"<EditView>::set_on_submit_mut","value":"pub fn set_on_submit_mut<F>(&mut Self, F) where F: FnMut(&mut Cursive, &str)\n-> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a mutable callback to be called when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a mutable callback to be called when `<Enter>` is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274590,"byte_end":274657,"line_start":279,"line_end":279,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274662,"byte_end":274665,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ `callback` will be given the content of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274670,"byte_end":274723,"line_start":281,"line_end":281,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274728,"byte_end":274731,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ *Warning*: this callback cannot be called recursively. If you somehow","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274736,"byte_end":274809,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ trigger this callback again in the given closure, it will be ignored.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274814,"byte_end":274887,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274892,"byte_end":274895,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ If you don't need a mutable closure but want the possibility of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274900,"byte_end":274967,"line_start":286,"line_end":286,"column_start":5,"column_end":72}},{"value":"/ recursive calls, see [`set_on_submit`](#method.set_on_submit).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":274972,"byte_end":275038,"line_start":287,"line_end":287,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275988,"byte_end":276001,"line_start":312,"line_end":312,"column_start":12,"column_end":25},"name":"set_on_submit","qualname":"<EditView>::set_on_submit","value":"pub fn set_on_submit<F>(&mut Self, F) where F: Fn(&mut Cursive, &str) -> () +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a callback to be called when `<Enter>` is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275544,"byte_end":275603,"line_start":303,"line_end":303,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275608,"byte_end":275611,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ `callback` will be given the content of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275616,"byte_end":275669,"line_start":305,"line_end":305,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275674,"byte_end":275677,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This callback can safely trigger itself recursively if needed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275682,"byte_end":275747,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/ (for instance if you call `on_event` on this view from the callback).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275752,"byte_end":275825,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275830,"byte_end":275833,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ If you need a mutable closure and don't care about the recursive","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275838,"byte_end":275906,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ aspect, see [`set_on_submit_mut`](#method.set_on_submit_mut).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":275911,"byte_end":275976,"line_start":311,"line_end":311,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276265,"byte_end":276278,"line_start":322,"line_end":322,"column_start":12,"column_end":25},"name":"on_submit_mut","qualname":"<EditView>::on_submit_mut","value":"pub fn on_submit_mut<F>(Self, F) -> Self where F: FnMut(&mut Cursive, &str) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a mutable callback to be called when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a mutable callback to be called when `<Enter>` is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276151,"byte_end":276218,"line_start":319,"line_end":319,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276223,"byte_end":276226,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276231,"byte_end":276253,"line_start":321,"line_end":321,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276543,"byte_end":276552,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"on_submit","qualname":"<EditView>::on_submit","value":"pub fn on_submit<F>(Self, F) -> Self where F: Fn(&mut Cursive, &str) -> () +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a callback to be called when `<Enter>` is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276437,"byte_end":276496,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276501,"byte_end":276504,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276509,"byte_end":276531,"line_start":331,"line_end":331,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276748,"byte_end":276759,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"set_enabled","qualname":"<EditView>::set_enabled","value":"pub fn set_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable this view.\n","sig":null,"attributes":[{"value":"/ Enable or disable this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276704,"byte_end":276736,"line_start":339,"line_end":339,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276886,"byte_end":276896,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<EditView>::is_enabled","value":"pub fn is_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view is enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276831,"byte_end":276874,"line_start":344,"line_end":344,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277154,"byte_end":277165,"line_start":354,"line_end":354,"column_start":12,"column_end":23},"name":"set_content","qualname":"<EditView>::set_content","value":"pub fn set_content<S: Into<String>>(&mut Self, S) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Replace the entire content of the view with the given one.","sig":null,"attributes":[{"value":"/ Replace the entire content of the view with the given one.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":276946,"byte_end":277008,"line_start":349,"line_end":349,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277013,"byte_end":277016,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to content change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277021,"byte_end":277074,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277079,"byte_end":277082,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277087,"byte_end":277142,"line_start":353,"line_end":353,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277497,"byte_end":277508,"line_start":366,"line_end":366,"column_start":12,"column_end":23},"name":"get_content","qualname":"<EditView>::get_content","value":"pub fn get_content(&Self) -> Rc<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the current text.\n","sig":null,"attributes":[{"value":"/ Get the current text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277460,"byte_end":277485,"line_start":365,"line_end":365,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277734,"byte_end":277741,"line_start":375,"line_end":375,"column_start":12,"column_end":19},"name":"content","qualname":"<EditView>::content","value":"pub fn content<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the current content to the given value.","sig":null,"attributes":[{"value":"/ Sets the current content to the given value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277576,"byte_end":277624,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277629,"byte_end":277632,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Convenient chainable method.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277637,"byte_end":277669,"line_start":372,"line_end":372,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277674,"byte_end":277677,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Does not run the `on_edit` callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277682,"byte_end":277722,"line_start":374,"line_end":374,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277891,"byte_end":277901,"line_start":381,"line_end":381,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<EditView>::set_cursor","value":"pub fn set_cursor(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the cursor position.\n","sig":null,"attributes":[{"value":"/ Sets the cursor position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":277850,"byte_end":277879,"line_start":380,"line_end":380,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":278201,"byte_end":278207,"line_start":392,"line_end":392,"column_start":12,"column_end":18},"name":"insert","qualname":"<EditView>::insert","value":"pub fn insert(&mut Self, char) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Insert `ch` at the current cursor position.","sig":null,"attributes":[{"value":"/ Insert `ch` at the current cursor position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":278008,"byte_end":278055,"line_start":387,"line_end":387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":278060,"byte_end":278063,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to content change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":278068,"byte_end":278121,"line_start":389,"line_end":389,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":278126,"byte_end":278129,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":278134,"byte_end":278189,"line_start":391,"line_end":391,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":279397,"byte_end":279403,"line_start":422,"line_end":422,"column_start":12,"column_end":18},"name":"remove","qualname":"<EditView>::remove","value":"pub fn remove(&mut Self, usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Remove the character at the current cursor position.","sig":null,"attributes":[{"value":"/ Remove the character at the current cursor position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":279195,"byte_end":279251,"line_start":417,"line_end":417,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":279256,"byte_end":279259,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to content change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":279264,"byte_end":279317,"line_start":419,"line_end":419,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":279322,"byte_end":279325,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":279330,"byte_end":279385,"line_start":421,"line_end":421,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289669,"byte_end":289683,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"EnableableView","qualname":"::views::enableable_view::EnableableView","value":"EnableableView {  }","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2487}],"decl_id":null,"docs":" Wrapper around another view that can be enabled/disabled at will.","sig":null,"attributes":[{"value":"/ Wrapper around another view that can be enabled/disabled at will.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289500,"byte_end":289569,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289570,"byte_end":289573,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When disabled, all child views will be disabled and will stop receiving events.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289574,"byte_end":289657,"line_start":7,"line_end":7,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289864,"byte_end":289867,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<EnableableView<V>>::new","value":"pub fn new(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EnableableView` around `view`.","sig":null,"attributes":[{"value":"/ Creates a new `EnableableView` around `view`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289756,"byte_end":289805,"line_start":14,"line_end":14,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289810,"byte_end":289813,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ It will be enabled by default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289818,"byte_end":289852,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290867,"byte_end":290879,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"HideableView","qualname":"::views::hideable_view::HideableView","value":"HideableView {  }","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519}],"decl_id":null,"docs":" Wrapper around another view that can be hidden at will.","sig":null,"attributes":[{"value":"/ Wrapper around another view that can be hidden at will.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290511,"byte_end":290570,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290571,"byte_end":290574,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ By default, it simply forwards all calls to the inner view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290575,"byte_end":290638,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290639,"byte_end":290642,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When hidden (with `HideableView::hide()`), it will appear as a zero-sized","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290643,"byte_end":290720,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ invisible view, will not take focus and will not accept input.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290721,"byte_end":290787,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290788,"byte_end":290791,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It can be made visible again with `HideableView::unhide()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290792,"byte_end":290855,"line_start":14,"line_end":14,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291077,"byte_end":291080,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<HideableView<V>>::new","value":"pub fn new(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new HideableView around `view`.","sig":null,"attributes":[{"value":"/ Creates a new HideableView around `view`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290973,"byte_end":291018,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291023,"byte_end":291026,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ It will be visible by default.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291031,"byte_end":291065,"line_start":24,"line_end":24,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291270,"byte_end":291281,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"set_visible","qualname":"<HideableView<V>>::set_visible","value":"pub fn set_visible(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the visibility for this view.\n","sig":null,"attributes":[{"value":"/ Sets the visibility for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291220,"byte_end":291258,"line_start":33,"line_end":33,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291441,"byte_end":291445,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"hide","qualname":"<HideableView<V>>::hide","value":"pub fn hide(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets the visibility for this view to `false`.\n","sig":null,"attributes":[{"value":"/ Sets the visibility for this view to `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291380,"byte_end":291429,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291563,"byte_end":291569,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"unhide","qualname":"<HideableView<V>>::unhide","value":"pub fn unhide(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets the visibility for this view to `true`.\n","sig":null,"attributes":[{"value":"/ Sets the visibility for this view to `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291503,"byte_end":291551,"line_start":44,"line_end":44,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291722,"byte_end":291728,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"hidden","qualname":"<HideableView<V>>::hidden","value":"pub fn hidden(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the visibility for this view to `false`.","sig":null,"attributes":[{"value":"/ Sets the visibility for this view to `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291626,"byte_end":291675,"line_start":49,"line_end":49,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291680,"byte_end":291683,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291688,"byte_end":291710,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291860,"byte_end":291870,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"is_visible","qualname":"<HideableView<V>>::is_visible","value":"pub fn is_visible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the wrapped view is going to be visible.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the wrapped view is going to be visible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":291786,"byte_end":291848,"line_start":56,"line_end":56,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293414,"byte_end":293420,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"IdView","qualname":"::views::id_view::IdView","value":"IdView {  }","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581}],"decl_id":null,"docs":" Wrapper around a view to provide interior mutability.\n","sig":null,"attributes":[{"value":"/ Wrapper around a view to provide interior mutability.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293345,"byte_end":293402,"line_start":8,"line_end":8,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293671,"byte_end":293678,"line_start":19,"line_end":19,"column_start":10,"column_end":17},"name":"ViewRef","qualname":"::views::id_view::ViewRef","value":"OwningHandle<RcRef<RefCell<V>>, RefMut>","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to a view.","sig":null,"attributes":[{"value":"/ Mutable reference to a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293477,"byte_end":293509,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293510,"byte_end":293513,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This behaves like a [`RefMut`], but without being tied to a lifetime.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293514,"byte_end":293587,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293588,"byte_end":293591,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`RefMut`]: https://doc.rust-lang.org/std/cell/struct.RefMut.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293592,"byte_end":293661,"line_start":18,"line_end":18,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293815,"byte_end":293818,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<IdView<V>>::new","value":"pub fn new<S: Into<String>>(S, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `IdView`.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `IdView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293768,"byte_end":293803,"line_start":22,"line_end":22,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294212,"byte_end":294219,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IdView<V>>::get_mut","value":"pub fn get_mut(&mut Self) -> ViewRef<V>","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable access to the inner view.","sig":null,"attributes":[{"value":"/ Gets mutable access to the inner view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293974,"byte_end":294016,"line_start":30,"line_end":30,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294021,"byte_end":294024,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This returns a `ViewRef<V>`, which implement `DerefMut<Target = V>`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294029,"byte_end":294101,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294106,"byte_end":294109,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294114,"byte_end":294126,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294131,"byte_end":294134,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Panics if another reference for this view already exists.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294139,"byte_end":294200,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6190},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296281,"byte_end":296286,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Layer","qualname":"::views::layer::Layer","value":"Layer {  }","parent":null,"children":[{"krate":0,"index":6192}],"decl_id":null,"docs":" Wrapper view that fills the background.","sig":null,"attributes":[{"value":"/ Wrapper view that fills the background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296120,"byte_end":296163,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296164,"byte_end":296167,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Used as layer in the [`StackView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296168,"byte_end":296207,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296208,"byte_end":296211,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`StackView`]: struct.StackView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296212,"byte_end":296252,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296380,"byte_end":296383,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Layer<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given view.\n","sig":null,"attributes":[{"value":"/ Wraps the given view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296343,"byte_end":296368,"line_start":15,"line_end":15,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":297096,"byte_end":297108,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"LinearLayout","qualname":"::views::linear_layout::LinearLayout","value":"LinearLayout {  }","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681}],"decl_id":null,"docs":" Arranges its children linearly according to its orientation.\n","sig":null,"attributes":[{"value":"/ Arranges its children linearly according to its orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":297020,"byte_end":297084,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299285,"byte_end":299288,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<LinearLayout>::new","value":"pub fn new(direction::Orientation) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new layout with the given orientation.\n","sig":null,"attributes":[{"value":"/ Creates a new layout with the given orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299221,"byte_end":299273,"line_start":113,"line_end":113,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299607,"byte_end":299617,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"set_weight","qualname":"<LinearLayout>::set_weight","value":"pub fn set_weight(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the weight of the given child.","sig":null,"attributes":[{"value":"/ Sets the weight of the given child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299486,"byte_end":299525,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299530,"byte_end":299533,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299538,"byte_end":299550,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299555,"byte_end":299558,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Panics if `i >= self.len()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299563,"byte_end":299595,"line_start":127,"line_end":127,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299856,"byte_end":299862,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"weight","qualname":"<LinearLayout>::weight","value":"pub fn weight(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the weight of the last child added.","sig":null,"attributes":[{"value":"/ Modifies the weight of the last child added.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299709,"byte_end":299757,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299762,"byte_end":299765,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this before adding a child (and it will panic).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299770,"byte_end":299844,"line_start":134,"line_end":134,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300060,"byte_end":300065,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"child","qualname":"<LinearLayout>::child","value":"pub fn child<V: View + 'static>(Self, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a child to the layout.","sig":null,"attributes":[{"value":"/ Adds a child to the layout.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299982,"byte_end":300013,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300018,"byte_end":300021,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300026,"byte_end":300048,"line_start":143,"line_end":143,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300205,"byte_end":300214,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"add_child","qualname":"<LinearLayout>::add_child","value":"pub fn add_child<V: View + 'static>(&mut Self, V)","parent":null,"children":[],"decl_id":null,"docs":" Adds a child to the layout.\n","sig":null,"attributes":[{"value":"/ Adds a child to the layout.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300162,"byte_end":300193,"line_start":148,"line_end":148,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300553,"byte_end":300565,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"insert_child","qualname":"<LinearLayout>::insert_child","value":"pub fn insert_child<V: View + 'static>(&mut Self, usize, V)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a child at the given position.","sig":null,"attributes":[{"value":"/ Inserts a child at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300430,"byte_end":300472,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300477,"byte_end":300480,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300485,"byte_end":300497,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300502,"byte_end":300505,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Panics if `i > self.len()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300510,"byte_end":300541,"line_start":162,"line_end":162,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300882,"byte_end":300895,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"swap_children","qualname":"<LinearLayout>::swap_children","value":"pub fn swap_children(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two children.\n","sig":null,"attributes":[{"value":"/ Swaps two children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":300847,"byte_end":300870,"line_start":175,"line_end":175,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301086,"byte_end":301089,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"len","qualname":"<LinearLayout>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of children.\n","sig":null,"attributes":[{"value":"/ Returns the number of children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301039,"byte_end":301074,"line_start":181,"line_end":181,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301207,"byte_end":301215,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LinearLayout>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view has no children.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view has no children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301147,"byte_end":301195,"line_start":186,"line_end":186,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301328,"byte_end":301343,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"get_focus_index","qualname":"<LinearLayout>::get_focus_index","value":"pub fn get_focus_index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns index of focused inner view\n","sig":null,"attributes":[{"value":"/ Returns index of focused inner view","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301277,"byte_end":301316,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301561,"byte_end":301569,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"vertical","qualname":"<LinearLayout>::vertical","value":"pub fn vertical() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new vertical layout.\n","sig":null,"attributes":[{"value":"/ Creates a new vertical layout.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301515,"byte_end":301549,"line_start":201,"line_end":201,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301701,"byte_end":301711,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<LinearLayout>::horizontal","value":"pub fn horizontal() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new horizontal layout.\n","sig":null,"attributes":[{"value":"/ Creates a new horizontal layout.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301653,"byte_end":301689,"line_start":206,"line_end":206,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301844,"byte_end":301853,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"get_child","qualname":"<LinearLayout>::get_child","value":"pub fn get_child(&Self, usize) -> Option<&dyn View>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a child.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301797,"byte_end":301832,"line_start":211,"line_end":211,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":302015,"byte_end":302028,"line_start":217,"line_end":217,"column_start":12,"column_end":25},"name":"get_child_mut","qualname":"<LinearLayout>::get_child_mut","value":"pub fn get_child_mut(&mut Self, usize) -> Option<&mut dyn View>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to a child.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to a child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":301960,"byte_end":302003,"line_start":216,"line_end":216,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":302358,"byte_end":302370,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"remove_child","qualname":"<LinearLayout>::remove_child","value":"pub fn remove_child(&mut Self, usize) -> Option<Box<dyn View>>","parent":null,"children":[],"decl_id":null,"docs":" Removes a child.","sig":null,"attributes":[{"value":"/ Removes a child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":302249,"byte_end":302269,"line_start":223,"line_end":223,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":302274,"byte_end":302277,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If `i` is within bounds, the removed child will be returned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":302282,"byte_end":302346,"line_start":225,"line_end":225,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318335,"byte_end":318338,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"Row","qualname":"::views::list_view::ListChild::Row","value":"ListChild::Row(String, Box<dyn View>)","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" A single row, with a label and a view.\n","sig":null,"attributes":[{"value":"/ A single row, with a label and a view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318288,"byte_end":318330,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318403,"byte_end":318412,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"Delimiter","qualname":"::views::list_view::ListChild::Delimiter","value":"ListChild::Delimiter","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":" A delimiter between groups.\n","sig":null,"attributes":[{"value":"/ A delimiter between groups.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318367,"byte_end":318398,"line_start":19,"line_end":19,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318272,"byte_end":318281,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"ListChild","qualname":"::views::list_view::ListChild","value":"pub enum ListChild { Row(String, Box<dyn View>), Delimiter, }","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2826}],"decl_id":null,"docs":" Represents a child from a [`ListView`].","sig":null,"attributes":[{"value":"/ Represents a child from a [`ListView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318176,"byte_end":318219,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318220,"byte_end":318223,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`ListView`]: struct.ListView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318224,"byte_end":318262,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318801,"byte_end":318809,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"ListView","qualname":"::views::list_view::ListView","value":"ListView {  }","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835}],"decl_id":null,"docs":" Displays a list of elements.\n","sig":null,"attributes":[{"value":"/ Displays a list of elements.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318757,"byte_end":318789,"line_start":39,"line_end":39,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319097,"byte_end":319100,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<ListView>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `ListView`.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty `ListView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319049,"byte_end":319085,"line_start":51,"line_end":51,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319344,"byte_end":319347,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"len","qualname":"<ListView>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of children, including delimiters.\n","sig":null,"attributes":[{"value":"/ Returns the number of children, including delimiters.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319275,"byte_end":319332,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319548,"byte_end":319556,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ListView>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view contains no children.","sig":null,"attributes":[{"value":"/ Returns `true` if this view contains no children.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319405,"byte_end":319458,"line_start":66,"line_end":66,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319463,"byte_end":319466,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if at least a delimiter or a view is present.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319471,"byte_end":319536,"line_start":68,"line_end":68,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319669,"byte_end":319677,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"children","qualname":"<ListView>::children","value":"pub fn children(&Self) -> &[ListChild]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the children\n","sig":null,"attributes":[{"value":"/ Returns a reference to the children","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319618,"byte_end":319657,"line_start":73,"line_end":73,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319812,"byte_end":319819,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_row","qualname":"<ListView>::get_row","value":"pub fn get_row(&Self, usize) -> &ListChild","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the child at the given position.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the child at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319741,"byte_end":319800,"line_start":78,"line_end":78,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320035,"byte_end":320042,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"row_mut","qualname":"<ListView>::row_mut","value":"pub fn row_mut(&mut Self, usize) -> &mut ListChild","parent":null,"children":[],"decl_id":null,"docs":" Gives mutable access to the child at the given position.","sig":null,"attributes":[{"value":"/ Gives mutable access to the child at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319892,"byte_end":319952,"line_start":83,"line_end":83,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319957,"byte_end":319960,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319965,"byte_end":319977,"line_start":85,"line_end":85,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319982,"byte_end":319985,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Panics if `id >= self.len()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319990,"byte_end":320023,"line_start":87,"line_end":87,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320178,"byte_end":320187,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"add_child","qualname":"<ListView>::add_child","value":"pub fn add_child<V: View + 'static>(&mut Self, &str, V)","parent":null,"children":[],"decl_id":null,"docs":" Adds a view to the end of the list.\n","sig":null,"attributes":[{"value":"/ Adds a view to the end of the list.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320127,"byte_end":320166,"line_start":92,"line_end":92,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320456,"byte_end":320461,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"clear","qualname":"<ListView>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all children from this view.\n","sig":null,"attributes":[{"value":"/ Removes all children from this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320404,"byte_end":320444,"line_start":99,"line_end":99,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320627,"byte_end":320632,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"child","qualname":"<ListView>::child","value":"pub fn child<V: View + 'static>(Self, &str, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a view to the end of the list.","sig":null,"attributes":[{"value":"/ Adds a view to the end of the list.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320541,"byte_end":320580,"line_start":105,"line_end":105,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320585,"byte_end":320588,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320593,"byte_end":320615,"line_start":107,"line_end":107,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320805,"byte_end":320818,"line_start":113,"line_end":113,"column_start":12,"column_end":25},"name":"add_delimiter","qualname":"<ListView>::add_delimiter","value":"pub fn add_delimiter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the end of the list.\n","sig":null,"attributes":[{"value":"/ Adds a delimiter to the end of the list.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320749,"byte_end":320793,"line_start":112,"line_end":112,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320984,"byte_end":320993,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<ListView>::delimiter","value":"pub fn delimiter(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the end of the list.","sig":null,"attributes":[{"value":"/ Adds a delimiter to the end of the list.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320893,"byte_end":320937,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320942,"byte_end":320945,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":320950,"byte_end":320972,"line_start":119,"line_end":119,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321128,"byte_end":321141,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"set_on_select","qualname":"<ListView>::set_on_select","value":"pub fn set_on_select<F>(&mut Self, F) where F: Fn(&mut Cursive, &String) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when an item is selected.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be used when an item is selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321060,"byte_end":321116,"line_start":124,"line_end":124,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321385,"byte_end":321394,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"on_select","qualname":"<ListView>::on_select","value":"pub fn on_select<F>(Self, F) -> Self where F: Fn(&mut Cursive, &String) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when an item is selected.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when an item is selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321282,"byte_end":321338,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321343,"byte_end":321346,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321351,"byte_end":321373,"line_start":134,"line_end":134,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321646,"byte_end":321651,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"focus","qualname":"<ListView>::focus","value":"pub fn focus(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the currently focused item.","sig":null,"attributes":[{"value":"/ Returns the index of the currently focused item.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321537,"byte_end":321589,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321594,"byte_end":321597,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Panics if the list is empty.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":321602,"byte_end":321634,"line_start":144,"line_end":144,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":330761,"byte_end":330770,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"MenuPopup","qualname":"::views::menu_popup::MenuPopup","value":"MenuPopup {  }","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957}],"decl_id":null,"docs":" Popup that shows a list of items.\n","sig":null,"attributes":[{"value":"/ Popup that shows a list of items.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":330712,"byte_end":330749,"line_start":18,"line_end":18,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331355,"byte_end":331358,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<MenuPopup>::new","value":"pub fn new(Rc<MenuTree>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MenuPopup` using the given menu tree.\n","sig":null,"attributes":[{"value":"/ Creates a new `MenuPopup` using the given menu tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331287,"byte_end":331343,"line_start":42,"line_end":42,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331664,"byte_end":331673,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"set_focus","qualname":"<MenuPopup>::set_focus","value":"pub fn set_focus(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the currently focused element.\n","sig":null,"attributes":[{"value":"/ Sets the currently focused element.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331613,"byte_end":331652,"line_start":54,"line_end":54,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331848,"byte_end":331853,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"focus","qualname":"<MenuPopup>::focus","value":"pub fn focus(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the currently focused element.","sig":null,"attributes":[{"value":"/ Sets the currently focused element.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331762,"byte_end":331801,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331806,"byte_end":331809,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331814,"byte_end":331836,"line_start":61,"line_end":61,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332005,"byte_end":332014,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"get_focus","qualname":"<MenuPopup>::get_focus","value":"pub fn get_focus(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the currently focused child.\n","sig":null,"attributes":[{"value":"/ Returns the position of the currently focused child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331937,"byte_end":331993,"line_start":66,"line_end":66,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332395,"byte_end":332400,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"align","qualname":"<MenuPopup>::align","value":"pub fn align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the alignment for this view.","sig":null,"attributes":[{"value":"/ Sets the alignment for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332311,"byte_end":332348,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332353,"byte_end":332356,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332361,"byte_end":332383,"line_start":81,"line_end":81,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332533,"byte_end":332542,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"set_align","qualname":"<MenuPopup>::set_align","value":"pub fn set_align(&mut Self, Align)","parent":null,"children":[],"decl_id":null,"docs":" Sets the alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the alignment for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332484,"byte_end":332521,"line_start":86,"line_end":86,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332767,"byte_end":332777,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"on_dismiss","qualname":"<MenuPopup>::on_dismiss","value":"pub fn on_dismiss<F: 'static + Fn(&mut Cursive) -> ()>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when this view is actively dismissed.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when this view is actively dismissed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332609,"byte_end":332677,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332682,"byte_end":332685,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ (When the user hits <ESC>)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332690,"byte_end":332720,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332725,"byte_end":332728,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332733,"byte_end":332755,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333008,"byte_end":333022,"line_start":103,"line_end":103,"column_start":12,"column_end":26},"name":"set_on_dismiss","qualname":"<MenuPopup>::set_on_dismiss","value":"pub fn set_on_dismiss<F: 'static + Fn(&mut Cursive) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when this view is actively dismissed.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when this view is actively dismissed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332885,"byte_end":332953,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332958,"byte_end":332961,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ (When the user hits <ESC>)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":332966,"byte_end":332996,"line_start":102,"line_end":102,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333370,"byte_end":333379,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"on_action","qualname":"<MenuPopup>::on_action","value":"pub fn on_action<F: 'static + Fn(&mut Cursive) -> ()>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when a leaf is activated.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when a leaf is activated.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333138,"byte_end":333194,"line_start":107,"line_end":107,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333199,"byte_end":333202,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Will also be called if a leaf from a subtree is activated.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333207,"byte_end":333269,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333274,"byte_end":333277,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Usually used to hide the parent view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333282,"byte_end":333323,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333328,"byte_end":333331,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333336,"byte_end":333358,"line_start":113,"line_end":113,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333683,"byte_end":333696,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"set_on_action","qualname":"<MenuPopup>::set_on_action","value":"pub fn set_on_action<F: 'static + Fn(&mut Cursive) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when a leaf is activated.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when a leaf is activated.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333486,"byte_end":333542,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333547,"byte_end":333550,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Will also be called if a leaf from a subtree is activated.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333555,"byte_end":333617,"line_start":120,"line_end":120,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333622,"byte_end":333625,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Usually used to hide the parent view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":333630,"byte_end":333671,"line_start":122,"line_end":122,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":344970,"byte_end":344977,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Menubar","qualname":"::views::menubar::Menubar","value":"Menubar { autohide }","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059}],"decl_id":null,"docs":" Shows a single-line list of items, with pop-up menus when one is selected.","sig":null,"attributes":[{"value":"/ Shows a single-line list of items, with pop-up menus when one is selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":344728,"byte_end":344806,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":344807,"byte_end":344810,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`Cursive`] root already includes a menubar","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":344811,"byte_end":344862,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ that you just need to configure.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":344863,"byte_end":344899,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":344900,"byte_end":344903,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`Cursive`]: ../struct.Cursive.html#method.menubar","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":344904,"byte_end":344958,"line_start":34,"line_end":34,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345087,"byte_end":345095,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"name":"autohide","qualname":"::views::menubar::Menubar::autohide","value":"bool","parent":{"krate":0,"index":3055},"children":[],"decl_id":null,"docs":" TODO: move this out of this view.\n","sig":null,"attributes":[{"value":"/ TODO: move this out of this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345041,"byte_end":345078,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345301,"byte_end":345304,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Menubar>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty menubar.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345256,"byte_end":345289,"line_start":50,"line_end":50,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345628,"byte_end":345642,"line_start":66,"line_end":66,"column_start":12,"column_end":26},"name":"receive_events","qualname":"<Menubar>::receive_events","value":"pub fn receive_events(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if we should be receiving events.\n","sig":null,"attributes":[{"value":"/ True if we should be receiving events.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345574,"byte_end":345616,"line_start":65,"line_end":65,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345759,"byte_end":345770,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"has_submenu","qualname":"<Menubar>::has_submenu","value":"pub fn has_submenu(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if some submenus are visible.\n","sig":null,"attributes":[{"value":"/ True if some submenus are visible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345709,"byte_end":345747,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345889,"byte_end":345896,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"visible","qualname":"<Menubar>::visible","value":"pub fn visible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if we should be drawn.\n","sig":null,"attributes":[{"value":"/ Returns `true` if we should be drawn.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345836,"byte_end":345877,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346154,"byte_end":346165,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"add_subtree","qualname":"<Menubar>::add_subtree","value":"pub fn add_subtree<S>(&mut Self, S, MenuTree) -> &mut Self where\nS: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new item to the menubar.","sig":null,"attributes":[{"value":"/ Adds a new item to the menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345981,"byte_end":346016,"line_start":80,"line_end":80,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346021,"byte_end":346024,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The item will use the given title, and on selection, will open a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346029,"byte_end":346097,"line_start":82,"line_end":82,"column_start":5,"column_end":73}},{"value":"/ popup-menu with the given menu tree.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346102,"byte_end":346142,"line_start":83,"line_end":83,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346396,"byte_end":346409,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"add_delimiter","qualname":"<Menubar>::add_delimiter","value":"pub fn add_delimiter(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the menubar.\n","sig":null,"attributes":[{"value":"/ Adds a delimiter to the menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346348,"byte_end":346384,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346561,"byte_end":346569,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"add_leaf","qualname":"<Menubar>::add_leaf","value":"pub fn add_leaf<S, F>(&mut Self, S, F) -> &mut Self where S: Into<String>,\nF: 'static + Fn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a leaf node to the menubar.\n","sig":null,"attributes":[{"value":"/ Adds a leaf node to the menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346513,"byte_end":346549,"line_start":98,"line_end":98,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346836,"byte_end":346850,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"insert_subtree","qualname":"<Menubar>::insert_subtree","value":"pub fn insert_subtree<S>(&mut Self, usize, S, MenuTree) -> &mut Self where\nS: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Insert a new item at the given position.\n","sig":null,"attributes":[{"value":"/ Insert a new item at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":346780,"byte_end":346824,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347146,"byte_end":347162,"line_start":122,"line_end":122,"column_start":12,"column_end":28},"name":"insert_delimiter","qualname":"<Menubar>::insert_delimiter","value":"pub fn insert_delimiter(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new delimiter at the given position.","sig":null,"attributes":[{"value":"/ Inserts a new delimiter at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347044,"byte_end":347094,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347099,"byte_end":347102,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ It will show up as `|`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347107,"byte_end":347134,"line_start":121,"line_end":121,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347372,"byte_end":347383,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"insert_leaf","qualname":"<Menubar>::insert_leaf","value":"pub fn insert_leaf<S, F>(&mut Self, usize, S, F) -> &mut Self where\nS: Into<String>, F: 'static + Fn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new leaf node at the given position.","sig":null,"attributes":[{"value":"/ Inserts a new leaf node at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347262,"byte_end":347312,"line_start":127,"line_end":127,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347317,"byte_end":347320,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ It will be directly actionable.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347325,"byte_end":347360,"line_start":129,"line_end":129,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347647,"byte_end":347652,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"clear","qualname":"<Menubar>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all menu items from this menubar.\n","sig":null,"attributes":[{"value":"/ Removes all menu items from this menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347590,"byte_end":347635,"line_start":139,"line_end":139,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347788,"byte_end":347791,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"len","qualname":"<Menubar>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in this menubar.\n","sig":null,"attributes":[{"value":"/ Returns the number of items in this menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347728,"byte_end":347776,"line_start":145,"line_end":145,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347901,"byte_end":347909,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Menubar>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this menubar is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this menubar is empty.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347845,"byte_end":347889,"line_start":150,"line_end":150,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348073,"byte_end":348084,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"get_subtree","qualname":"<Menubar>::get_subtree","value":"pub fn get_subtree(&mut Self, usize) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item at the given position.","sig":null,"attributes":[{"value":"/ Returns the item at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":347967,"byte_end":348010,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348015,"byte_end":348018,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `i > self.len()`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348023,"byte_end":348061,"line_start":157,"line_end":157,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348232,"byte_end":348244,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"find_subtree","qualname":"<Menubar>::find_subtree","value":"pub fn find_subtree(&mut Self, &str) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Looks for an item with the given label.\n","sig":null,"attributes":[{"value":"/ Looks for an item with the given label.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348177,"byte_end":348220,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348474,"byte_end":348487,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"find_position","qualname":"<Menubar>::find_position","value":"pub fn find_position(&mut Self, &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the item with the given label.","sig":null,"attributes":[{"value":"/ Returns the position of the item with the given label.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348345,"byte_end":348403,"line_start":167,"line_end":167,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348408,"byte_end":348411,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no such label was found.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348416,"byte_end":348462,"line_start":169,"line_end":169,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348635,"byte_end":348641,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"remove","qualname":"<Menubar>::remove","value":"pub fn remove(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Remove the item at the given position.\n","sig":null,"attributes":[{"value":"/ Remove the item at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":348581,"byte_end":348623,"line_start":174,"line_end":174,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358032,"byte_end":358043,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"OnEventView","qualname":"::views::on_event_view::OnEventView","value":"OnEventView {  }","parent":null,"children":[{"krate":0,"index":3137},{"krate":0,"index":3138}],"decl_id":null,"docs":" A wrapper view that can react to events.","sig":null,"attributes":[{"value":"/ A wrapper view that can react to events.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356563,"byte_end":356607,"line_start":7,"line_end":7,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356608,"byte_end":356611,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This view registers a set of callbacks tied to specific events, to be run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356612,"byte_end":356689,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ in certain conditions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356690,"byte_end":356716,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356717,"byte_end":356720,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * Some callbacks are called only for events ignored by the wrapped view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356721,"byte_end":356797,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356798,"byte_end":356801,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/   (those registered by [`on_event`] or [`on_event_inner`])","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356802,"byte_end":356864,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ * Others are processed first, and can control whether the child view should","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356865,"byte_end":356944,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   be given the event (those registered by [`on_pre_event`] or","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":356945,"byte_end":357010,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/   [`on_pre_event_inner`]).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357011,"byte_end":357041,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357042,"byte_end":357045,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ \"Inner\" callbacks ([`on_event_inner`] and [`on_pre_event_inner`]) are given","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357046,"byte_end":357125,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ a reference to the inner wrapped view (but not to the `Cursive` root). They","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357126,"byte_end":357205,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ can then return another callback, taking only a `&mut Cursive` root as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357206,"byte_end":357280,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ argument.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357281,"byte_end":357294,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357295,"byte_end":357298,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ \"Simple\" callbacks ([`on_event`] and [`on_pre_event`]) skip this first","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357299,"byte_end":357373,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ phase and are only called with a `&mut Cursive`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357374,"byte_end":357426,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357427,"byte_end":357430,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`on_event`]: struct.OnEventView.html#method.on_event","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357431,"byte_end":357488,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ [`on_pre_event`]: struct.OnEventView.html#method.on_pre_event","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357489,"byte_end":357554,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`on_event_inner`]: struct.OnEventView.html#method.on_event_inner","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357555,"byte_end":357624,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ [`on_pre_event_inner`]: struct.OnEventView.html#method.on_pre_event_inner","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357625,"byte_end":357702,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357703,"byte_end":357706,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357707,"byte_end":357721,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357722,"byte_end":357725,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357726,"byte_end":357733,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # use cursive::event;;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357734,"byte_end":357760,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ # use cursive::views::{OnEventView, TextView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357761,"byte_end":357811,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/ let view = OnEventView::new(TextView::new(\"This view has an event!\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357812,"byte_end":357885,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/                         .on_event('q', |s| s.quit())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357886,"byte_end":357942,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/                         .on_event(event::Key::Esc, |s| s.quit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":357943,"byte_end":358012,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358013,"byte_end":358020,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3150},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358639,"byte_end":358642,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<OnEventView<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given view in a new OnEventView.\n","sig":null,"attributes":[{"value":"/ Wraps the given view in a new OnEventView.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358581,"byte_end":358627,"line_start":69,"line_end":69,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359332,"byte_end":359340,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"on_event","qualname":"<OnEventView<T>>::on_event","value":"pub fn on_event<F, E>(Self, E, F) -> Self where E: Into<EventTrigger>,\nF: 'static + Fn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is ignored by the child.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is ignored by the child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358758,"byte_end":358828,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358833,"byte_end":358836,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358841,"byte_end":358863,"line_start":79,"line_end":79,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358868,"byte_end":358871,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358876,"byte_end":358890,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358895,"byte_end":358898,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358903,"byte_end":358906,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358911,"byte_end":358922,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::{OnEventView, DummyView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358927,"byte_end":358978,"line_start":85,"line_end":85,"column_start":5,"column_end":56}},{"value":"/ # use cursive::event::{Key, EventTrigger};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358983,"byte_end":359029,"line_start":86,"line_end":86,"column_start":5,"column_end":51}},{"value":"/ let view = OnEventView::new(DummyView)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359034,"byte_end":359076,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/     .on_event('q', |s| s.quit())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359081,"byte_end":359117,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/     .on_event(Key::Esc, |s| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359122,"byte_end":359155,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/         s.pop_layer();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359160,"byte_end":359186,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/     })","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359191,"byte_end":359201,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/     .on_event(EventTrigger::mouse(), |s| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359206,"byte_end":359252,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/         s.add_layer(DummyView);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359257,"byte_end":359292,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359297,"byte_end":359308,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359313,"byte_end":359320,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359690,"byte_end":359702,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"on_pre_event","qualname":"<OnEventView<T>>::on_pre_event","value":"pub fn on_pre_event<F, E>(Self, E, F) -> Self where E: Into<EventTrigger>,\nF: 'static + Fn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is received.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359528,"byte_end":359586,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359591,"byte_end":359594,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The child will never receive this event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359599,"byte_end":359643,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359648,"byte_end":359651,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359656,"byte_end":359678,"line_start":108,"line_end":108,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360279,"byte_end":360297,"line_start":127,"line_end":127,"column_start":12,"column_end":30},"name":"on_pre_event_inner","qualname":"<OnEventView<T>>::on_pre_event_inner","value":"pub fn on_pre_event_inner<F, E>(Self, E, F) -> Self where\nE: Into<EventTrigger>, F: Fn(&mut T, &Event) -> Option<EventResult> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is received.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359894,"byte_end":359952,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359957,"byte_end":359960,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The given callback will be run before the child view sees the event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":359965,"byte_end":360037,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360042,"byte_end":360045,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ * If the result is `None`, then the child view is given the event as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360050,"byte_end":360122,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/   usual.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360127,"byte_end":360139,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/ * Otherwise, it bypasses the child view and directly processes the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360144,"byte_end":360214,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/   result.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360219,"byte_end":360232,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360237,"byte_end":360240,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360245,"byte_end":360267,"line_start":126,"line_end":126,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361774,"byte_end":361788,"line_start":169,"line_end":169,"column_start":12,"column_end":26},"name":"on_event_inner","qualname":"<OnEventView<T>>::on_event_inner","value":"pub fn on_event_inner<F, E>(Self, E, F) -> Self where E: Into<EventTrigger>,\nF: Fn(&mut T, &Event) -> Option<EventResult> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is ignored by the child.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is ignored by the child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360520,"byte_end":360590,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360595,"byte_end":360598,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This is an advanced method to get more control.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360603,"byte_end":360654,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/ [`on_event`] may be easier to use.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360659,"byte_end":360697,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360702,"byte_end":360705,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If the child view ignores the event, `cb` will be called with the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360710,"byte_end":360779,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ child view as argument.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360784,"byte_end":360811,"line_start":141,"line_end":141,"column_start":5,"column_end":32}},{"value":"/ If the result is not `None`, it will be processed as well.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360816,"byte_end":360878,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360883,"byte_end":360886,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360891,"byte_end":360913,"line_start":144,"line_end":144,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360918,"byte_end":360921,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`on_event`]: OnEventView::on_event()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360926,"byte_end":360967,"line_start":146,"line_end":146,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360972,"byte_end":360975,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360980,"byte_end":360994,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":360999,"byte_end":361002,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361007,"byte_end":361018,"line_start":150,"line_end":150,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::{DummyView, OnEventView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361023,"byte_end":361074,"line_start":151,"line_end":151,"column_start":5,"column_end":56}},{"value":"/ # use cursive::event::{Event, EventTrigger, MouseEvent, EventResult};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361079,"byte_end":361152,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ let view = OnEventView::new(DummyView)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361157,"byte_end":361199,"line_start":153,"line_end":153,"column_start":5,"column_end":47}},{"value":"/     .on_event_inner(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361204,"byte_end":361228,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/         EventTrigger::mouse(),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361233,"byte_end":361267,"line_start":155,"line_end":155,"column_start":5,"column_end":39}},{"value":"/         |d: &mut DummyView, e: &Event| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361272,"byte_end":361316,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/             if let &Event::Mouse { event: MouseEvent::Press(_), .. } = e {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361321,"byte_end":361399,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/                 // Do something on mouse press","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361404,"byte_end":361454,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/                 Some(EventResult::with_cb(|s| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361459,"byte_end":361510,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/                     s.pop_layer();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361515,"byte_end":361553,"line_start":160,"line_end":160,"column_start":5,"column_end":43}},{"value":"/                 }))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361558,"byte_end":361581,"line_start":161,"line_end":161,"column_start":5,"column_end":28}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361586,"byte_end":361610,"line_start":162,"line_end":162,"column_start":5,"column_end":29}},{"value":"/                 // Otherwise, don't do anything","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361615,"byte_end":361666,"line_start":163,"line_end":163,"column_start":5,"column_end":56}},{"value":"/                 None","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361671,"byte_end":361695,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/             }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361700,"byte_end":361717,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361722,"byte_end":361735,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/     );","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361740,"byte_end":361750,"line_start":167,"line_end":167,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":361755,"byte_end":361762,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":362089,"byte_end":362101,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"set_on_event","qualname":"<OnEventView<T>>::set_on_event","value":"pub fn set_on_event<F, E>(&mut Self, E, F) where E: Into<EventTrigger>,\nF: Fn(&mut Cursive) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is ignored by the child.\n","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is ignored by the child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":362007,"byte_end":362077,"line_start":177,"line_end":177,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":362573,"byte_end":362589,"line_start":194,"line_end":194,"column_start":12,"column_end":28},"name":"set_on_pre_event","qualname":"<OnEventView<T>>::set_on_pre_event","value":"pub fn set_on_pre_event<F, E>(&mut Self, E, F) where E: Into<EventTrigger>,\nF: 'static + Fn(&mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is received.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":362446,"byte_end":362504,"line_start":191,"line_end":191,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":362509,"byte_end":362512,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The child will never receive this event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":362517,"byte_end":362561,"line_start":193,"line_end":193,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363360,"byte_end":363382,"line_start":216,"line_end":216,"column_start":12,"column_end":34},"name":"set_on_pre_event_inner","qualname":"<OnEventView<T>>::set_on_pre_event_inner","value":"pub fn set_on_pre_event_inner<F, E>(&mut Self, E, F) where\nE: Into<EventTrigger>, F: Fn(&mut T, &Event) -> Option<EventResult> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is received.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is received.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363010,"byte_end":363068,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363073,"byte_end":363076,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The given callback will be run before the child view sees the event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363081,"byte_end":363153,"line_start":210,"line_end":210,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363158,"byte_end":363161,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ * If the result is `None`, then the child view is given the event as","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363166,"byte_end":363238,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/   usual.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363243,"byte_end":363255,"line_start":213,"line_end":213,"column_start":5,"column_end":17}},{"value":"/ * Otherwise, it bypasses the child view and directly processes the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363260,"byte_end":363330,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/   result.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363335,"byte_end":363348,"line_start":215,"line_end":215,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":364009,"byte_end":364027,"line_start":235,"line_end":235,"column_start":12,"column_end":30},"name":"set_on_event_inner","qualname":"<OnEventView<T>>::set_on_event_inner","value":"pub fn set_on_event_inner<F, E>(&mut Self, E, F) where E: Into<EventTrigger>,\nF: Fn(&mut T, &Event) -> Option<EventResult> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is ignored by the child.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is ignored by the child.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363746,"byte_end":363816,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363821,"byte_end":363824,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If the child view ignores the event, `cb` will be called with the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363829,"byte_end":363898,"line_start":232,"line_end":232,"column_start":5,"column_end":74}},{"value":"/ child view as argument.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363903,"byte_end":363930,"line_start":233,"line_end":233,"column_start":5,"column_end":32}},{"value":"/ If the result is not `None`, it will be processed as well.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":363935,"byte_end":363997,"line_start":234,"line_end":234,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":364449,"byte_end":364464,"line_start":250,"line_end":250,"column_start":12,"column_end":27},"name":"clear_callbacks","qualname":"<OnEventView<T>>::clear_callbacks","value":"pub fn clear_callbacks(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove any callbacks defined for this view.\n","sig":null,"attributes":[{"value":"/ Remove any callbacks defined for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":364390,"byte_end":364437,"line_start":249,"line_end":249,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367109,"byte_end":367119,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"PaddedView","qualname":"::views::padded_view::PaddedView","value":"PaddedView {  }","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3221}],"decl_id":null,"docs":" Adds padding to another view.","sig":null,"attributes":[{"value":"/ Adds padding to another view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366653,"byte_end":366686,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366687,"byte_end":366690,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This view wraps another view and adds some padding.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366691,"byte_end":366746,"line_start":8,"line_end":8,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366747,"byte_end":366750,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The wrapped view will see a reduced space available.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366751,"byte_end":366807,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366808,"byte_end":366811,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366812,"byte_end":366826,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366827,"byte_end":366830,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366831,"byte_end":366842,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # use cursive::views::{TextView, PaddedView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366843,"byte_end":366892,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/ // Adds 2 columns of padding to the left and to the right.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366893,"byte_end":366955,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ let view = PaddedView::new(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366956,"byte_end":366987,"line_start":17,"line_end":17,"column_start":1,"column_end":32}},{"value":"/     ((2,2), (0,0)), // ((left, right), (top, bottom))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":366988,"byte_end":367045,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/     TextView::new(\"Padded text\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367046,"byte_end":367082,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ );","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367083,"byte_end":367089,"line_start":20,"line_end":20,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367090,"byte_end":367097,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367271,"byte_end":367274,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<PaddedView<V>>::new","value":"pub fn new<M: Into<Margins>>(M, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `PaddedView` with the given margins.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `PaddedView` with the given margins.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367197,"byte_end":367259,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367457,"byte_end":367468,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"set_margins","qualname":"<PaddedView<V>>::set_margins","value":"pub fn set_margins<M: Into<Margins>>(&mut Self, M)","parent":null,"children":[],"decl_id":null,"docs":" Sets the margins for this view.\n","sig":null,"attributes":[{"value":"/ Sets the margins for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367410,"byte_end":367445,"line_start":34,"line_end":34,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6250},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":368755,"byte_end":368760,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Panel","qualname":"::views::panel::Panel","value":"Panel {  }","parent":null,"children":[{"krate":0,"index":6252},{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6255}],"decl_id":null,"docs":" Draws a border around a wrapped view.\n","sig":null,"attributes":[{"value":"/ Draws a border around a wrapped view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":368685,"byte_end":368726,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369074,"byte_end":369077,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Panel<V>>::new","value":"pub fn new(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new panel around the given view.\n","sig":null,"attributes":[{"value":"/ Creates a new panel around the given view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369016,"byte_end":369062,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369402,"byte_end":369407,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"title","qualname":"<Panel<V>>::title","value":"pub fn title<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the dialog.","sig":null,"attributes":[{"value":"/ Sets the title of the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369296,"byte_end":369329,"line_start":40,"line_end":40,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369334,"byte_end":369337,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If not empty, it will be visible at the top.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369342,"byte_end":369390,"line_start":42,"line_end":42,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369549,"byte_end":369558,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"set_title","qualname":"<Panel<V>>::set_title","value":"pub fn set_title<S: Into<String>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the dialog.\n","sig":null,"attributes":[{"value":"/ Sets the title of the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369504,"byte_end":369537,"line_start":47,"line_end":47,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369793,"byte_end":369807,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"title_position","qualname":"<Panel<V>>::title_position","value":"pub fn title_position(Self, HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal position of the title in the dialog.\n The default position is `HAlign::Center`\n","sig":null,"attributes":[{"value":"/ Sets the horizontal position of the title in the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369672,"byte_end":369732,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/ The default position is `HAlign::Center`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369737,"byte_end":369781,"line_start":54,"line_end":54,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":370022,"byte_end":370040,"line_start":61,"line_end":61,"column_start":12,"column_end":30},"name":"set_title_position","qualname":"<Panel<V>>::set_title_position","value":"pub fn set_title_position(&mut Self, HAlign)","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal position of the title in the dialog.\n The default position is `HAlign::Center`\n","sig":null,"attributes":[{"value":"/ Sets the horizontal position of the title in the dialog.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369901,"byte_end":369961,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/ The default position is `HAlign::Center`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369966,"byte_end":370010,"line_start":60,"line_end":60,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":373246,"byte_end":373257,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"ProgressBar","qualname":"::views::progress_bar::ProgressBar","value":"ProgressBar {  }","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329}],"decl_id":null,"docs":" Animated bar showing a progress value.","sig":null,"attributes":[{"value":"/ Animated bar showing a progress value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372284,"byte_end":372326,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372327,"byte_end":372330,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This bar has an internal counter, and adapts the length of the displayed","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372331,"byte_end":372407,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ bar to the relative position of the counter between a minimum and maximum","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372408,"byte_end":372485,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372486,"byte_end":372497,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372498,"byte_end":372501,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ It also prints a customizable text in the center of the bar, which","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372502,"byte_end":372572,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ defaults to the progression percentage.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372573,"byte_end":372616,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372617,"byte_end":372620,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The bar defaults to the current theme's highlight color,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372621,"byte_end":372681,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/ but that can be customized.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372682,"byte_end":372713,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372714,"byte_end":372717,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372718,"byte_end":372731,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372732,"byte_end":372735,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372736,"byte_end":372743,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # use cursive::views::ProgressBar;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372744,"byte_end":372782,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ let bar = ProgressBar::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372783,"byte_end":372815,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/                       .with_task(|counter| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372816,"byte_end":372864,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/                           // This closure is called in parallel.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372865,"byte_end":372933,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/                           for _ in 0..100 {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372934,"byte_end":372981,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/                               // Here we can communicate some","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":372982,"byte_end":373047,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/                               // advancement back to the bar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":373048,"byte_end":373113,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/                               counter.tick(1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":373114,"byte_end":373164,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/                           }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":373165,"byte_end":373196,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/                       });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":373197,"byte_end":373226,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":373227,"byte_end":373234,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374494,"byte_end":374497,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressBar>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new progress bar.","sig":null,"attributes":[{"value":"/ Creates a new progress bar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374350,"byte_end":374381,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374386,"byte_end":374389,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Default values:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374394,"byte_end":374413,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374418,"byte_end":374421,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ * `min`: 0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374426,"byte_end":374440,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/ * `max`: 100","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374445,"byte_end":374461,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/ * `value`: 0","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374466,"byte_end":374482,"line_start":86,"line_end":86,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374905,"byte_end":374915,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"with_value","qualname":"<ProgressBar>::with_value","value":"pub fn with_value(Self, Counter) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the value to follow.","sig":null,"attributes":[{"value":"/ Sets the value to follow.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374732,"byte_end":374761,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374766,"byte_end":374769,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Use this to manually control the progress to display","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374774,"byte_end":374830,"line_start":99,"line_end":99,"column_start":5,"column_end":61}},{"value":"/ by directly modifying the value pointed to by `value`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374835,"byte_end":374893,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375299,"byte_end":375304,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"start","qualname":"<ProgressBar>::start","value":"pub fn start<F: FnOnce(Counter) -> () + Send + 'static>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Starts a function in a separate thread, and monitor the progress.","sig":null,"attributes":[{"value":"/ Starts a function in a separate thread, and monitor the progress.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375004,"byte_end":375073,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375078,"byte_end":375081,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ `f` will be given a `Counter` to increment the bar's progress.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375086,"byte_end":375152,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375157,"byte_end":375160,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This does not reset the value, so it can be called several times","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375165,"byte_end":375233,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ to advance the progress in multiple sessions.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375238,"byte_end":375287,"line_start":111,"line_end":111,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375608,"byte_end":375617,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"with_task","qualname":"<ProgressBar>::with_task","value":"pub fn with_task<F: FnOnce(Counter) -> () + Send + 'static>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Starts a function in a separate thread, and monitor the progress.","sig":null,"attributes":[{"value":"/ Starts a function in a separate thread, and monitor the progress.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375492,"byte_end":375561,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375566,"byte_end":375569,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375574,"byte_end":375596,"line_start":122,"line_end":122,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376231,"byte_end":376241,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"with_label","qualname":"<ProgressBar>::with_label","value":"pub fn with_label<F: Fn(usize, (usize, usize)) -> String + 'static>(Self, F)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the label generator.","sig":null,"attributes":[{"value":"/ Sets the label generator.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375749,"byte_end":375778,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375783,"byte_end":375786,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The given function will be called with `(value, (min, max))`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375791,"byte_end":375856,"line_start":132,"line_end":132,"column_start":5,"column_end":70}},{"value":"/ Its output will be used as the label to print inside the progress bar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375861,"byte_end":375935,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375940,"byte_end":375943,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The default one shows a percentage progress:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":375948,"byte_end":375996,"line_start":135,"line_end":135,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376001,"byte_end":376004,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376009,"byte_end":376016,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ fn make_progress(value: usize, (min, max): (usize, usize)) -> String {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376021,"byte_end":376095,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/     let percent = 101 * (value - min) / (1 + max - min);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376100,"byte_end":376160,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/     format!(\"{} %\", percent)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376165,"byte_end":376197,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376202,"byte_end":376207,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376212,"byte_end":376219,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376597,"byte_end":376600,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"min","qualname":"<ProgressBar>::min","value":"pub fn min(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the minimum value.","sig":null,"attributes":[{"value":"/ Sets the minimum value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376417,"byte_end":376444,"line_start":150,"line_end":150,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376449,"byte_end":376452,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ When `value` equals `min`, the bar is at the minimum level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376457,"byte_end":376520,"line_start":152,"line_end":152,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376525,"byte_end":376528,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ If `self.min > max`, `self.min` is set to `max`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376533,"byte_end":376585,"line_start":154,"line_end":154,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376911,"byte_end":376914,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"max","qualname":"<ProgressBar>::max","value":"pub fn max(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum value.","sig":null,"attributes":[{"value":"/ Sets the maximum value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376731,"byte_end":376758,"line_start":162,"line_end":162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376763,"byte_end":376766,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ When `value` equals `max`, the bar is at the maximum level.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376771,"byte_end":376834,"line_start":164,"line_end":164,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376839,"byte_end":376842,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If `min > self.max`, `self.max` is set to `min`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":376847,"byte_end":376899,"line_start":166,"line_end":166,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377159,"byte_end":377164,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"range","qualname":"<ProgressBar>::range","value":"pub fn range(Self, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `min` and `max` range for the value.","sig":null,"attributes":[{"value":"/ Sets the `min` and `max` range for the value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377045,"byte_end":377094,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377099,"byte_end":377102,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If `min > max`, swap the two values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377107,"byte_end":377147,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377433,"byte_end":377442,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"set_value","qualname":"<ProgressBar>::set_value","value":"pub fn set_value(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the current value.","sig":null,"attributes":[{"value":"/ Sets the current value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377336,"byte_end":377363,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377368,"byte_end":377371,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Value is clamped between `min` and `max`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377376,"byte_end":377421,"line_start":187,"line_end":187,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377613,"byte_end":377622,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"set_color","qualname":"<ProgressBar>::set_color","value":"pub fn set_color<C>(&mut Self, C) where C: Into<ColorType>","parent":null,"children":[],"decl_id":null,"docs":" Sets the color style.","sig":null,"attributes":[{"value":"/ Sets the color style.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377512,"byte_end":377537,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377542,"byte_end":377545,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The default color is `PaletteColor::Highlight`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377550,"byte_end":377601,"line_start":194,"line_end":194,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377824,"byte_end":377834,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"with_color","qualname":"<ProgressBar>::with_color","value":"pub fn with_color<C>(Self, C) -> Self where C: Into<ColorType>","parent":null,"children":[],"decl_id":null,"docs":" Sets the color style.","sig":null,"attributes":[{"value":"/ Sets the color style.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377737,"byte_end":377762,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377767,"byte_end":377770,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Chainable variant of `set_color`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":377775,"byte_end":377812,"line_start":204,"line_end":204,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6271},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380347,"byte_end":380357,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"RadioGroup","qualname":"::views::radio::RadioGroup","value":"RadioGroup {  }","parent":null,"children":[{"krate":0,"index":6273}],"decl_id":null,"docs":" Group to coordinate multiple radio buttons.","sig":null,"attributes":[{"value":"/ Group to coordinate multiple radio buttons.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380073,"byte_end":380120,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380121,"byte_end":380124,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A `RadioGroup` is used to create and manage [`RadioButton`]s.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380125,"byte_end":380190,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380191,"byte_end":380194,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A `RadioGroup` can be cloned; it will keep pointing to the same group.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380195,"byte_end":380269,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380270,"byte_end":380273,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`RadioButton`]: struct.RadioButton.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380274,"byte_end":380318,"line_start":30,"line_end":30,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380636,"byte_end":380639,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<RadioGroup<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty group for radio buttons.\n","sig":null,"attributes":[{"value":"/ Creates an empty group for radio buttons.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380579,"byte_end":380624,"line_start":44,"line_end":44,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380995,"byte_end":381001,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"button","qualname":"<RadioGroup<T>>::button","value":"pub fn button<S: Into<String>>(&mut Self, T, S) -> RadioButton<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new button to the group.","sig":null,"attributes":[{"value":"/ Adds a new button to the group.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380864,"byte_end":380899,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380904,"byte_end":380907,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The button will display `label` next to it, and will embed `value`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380912,"byte_end":380983,"line_start":57,"line_end":57,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381419,"byte_end":381430,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"selected_id","qualname":"<RadioGroup<T>>::selected_id","value":"pub fn selected_id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the selected button.","sig":null,"attributes":[{"value":"/ Returns the id of the selected button.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381281,"byte_end":381323,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381328,"byte_end":381331,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Buttons are indexed in the order they are created, starting from 0.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381336,"byte_end":381407,"line_start":68,"line_end":68,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381568,"byte_end":381577,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"selection","qualname":"<RadioGroup<T>>::selection","value":"pub fn selection(&Self) -> Rc<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value associated with the selected button.\n","sig":null,"attributes":[{"value":"/ Returns the value associated with the selected button.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381498,"byte_end":381556,"line_start":73,"line_end":73,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381717,"byte_end":381730,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"set_on_change","qualname":"<RadioGroup<T>>::set_on_change","value":"pub fn set_on_change<F: 'static + Fn(&mut Cursive, &T) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when the selection changes.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be used when the selection changes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381647,"byte_end":381705,"line_start":78,"line_end":78,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381994,"byte_end":382003,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"on_change","qualname":"<RadioGroup<T>>::on_change","value":"pub fn on_change<F: 'static + Fn(&mut Cursive, &T) -> ()>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when the selection changes.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when the selection changes.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381889,"byte_end":381947,"line_start":85,"line_end":85,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381952,"byte_end":381955,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":381960,"byte_end":381982,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382236,"byte_end":382246,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"button_str","qualname":"<RadioGroup<String>>::button_str","value":"pub fn button_str<S: Into<String>>(&mut Self, S) -> RadioButton<String>","parent":null,"children":[],"decl_id":null,"docs":" Adds a button, using the label itself as value.\n","sig":null,"attributes":[{"value":"/ Adds a button, using the label itself as value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382173,"byte_end":382224,"line_start":96,"line_end":96,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382835,"byte_end":382846,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"RadioButton","qualname":"::views::radio::RadioButton","value":"RadioButton {  }","parent":null,"children":[{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432}],"decl_id":null,"docs":" Variant of `Checkbox` arranged in group.","sig":null,"attributes":[{"value":"/ Variant of `Checkbox` arranged in group.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382405,"byte_end":382449,"line_start":105,"line_end":105,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382450,"byte_end":382453,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `RadioButton`s are managed by a [`RadioGroup`]. A single group can contain","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382454,"byte_end":382532,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ several radio buttons, but only one button per group can be active at a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382533,"byte_end":382608,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ time.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382609,"byte_end":382618,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382619,"byte_end":382622,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ `RadioButton`s are not created directly, but through","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382623,"byte_end":382679,"line_start":111,"line_end":111,"column_start":1,"column_end":57}},{"value":"/ [`RadioGroup::button()`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382680,"byte_end":382709,"line_start":112,"line_end":112,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382710,"byte_end":382713,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`RadioGroup`]: struct.RadioGroup.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382714,"byte_end":382756,"line_start":114,"line_end":114,"column_start":1,"column_end":43}},{"value":"/ [`RadioGroup::button()`]: struct.RadioGroup.html#method.button","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382757,"byte_end":382823,"line_start":115,"line_end":115,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":383296,"byte_end":383307,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"is_selected","qualname":"<RadioButton<T>>::is_selected","value":"pub fn is_selected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this button is selected.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this button is selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":383238,"byte_end":383284,"line_start":137,"line_end":137,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":383463,"byte_end":383469,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"select","qualname":"<RadioButton<T>>::select","value":"pub fn select(&mut Self) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Selects this button, un-selecting any other in the same group.\n","sig":null,"attributes":[{"value":"/ Selects this button, un-selecting any other in the same group.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":383385,"byte_end":383451,"line_start":142,"line_end":142,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":383985,"byte_end":383993,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"selected","qualname":"<RadioButton<T>>::selected","value":"pub fn selected(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Selects this button, un-selecting any other in the same group.","sig":null,"attributes":[{"value":"/ Selects this button, un-selecting any other in the same group.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":383872,"byte_end":383938,"line_start":155,"line_end":155,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":383943,"byte_end":383946,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":383951,"byte_end":383973,"line_start":157,"line_end":157,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":385968,"byte_end":385978,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"ScrollView","qualname":"::views::scroll_view::ScrollView","value":"ScrollView {  }","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3494}],"decl_id":null,"docs":" Wraps a view in a scrollable area.\n","sig":null,"attributes":[{"value":"/ Wraps a view in a scrollable area.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":385918,"byte_end":385956,"line_start":6,"line_end":6,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386379,"byte_end":386382,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<ScrollView<V>>::new","value":"pub fn new(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ScrollView around `view`.\n","sig":null,"attributes":[{"value":"/ Creates a new ScrollView around `view`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386324,"byte_end":386367,"line_start":30,"line_end":30,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386561,"byte_end":386577,"line_start":39,"line_end":39,"column_start":12,"column_end":28},"name":"content_viewport","qualname":"<ScrollView<V>>::content_viewport","value":"pub fn content_viewport(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the viewport in the inner content.\n","sig":null,"attributes":[{"value":"/ Returns the viewport in the inner content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386503,"byte_end":386549,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386964,"byte_end":386983,"line_start":50,"line_end":50,"column_start":12,"column_end":31},"name":"set_scroll_strategy","qualname":"<ScrollView<V>>::set_scroll_strategy","value":"pub fn set_scroll_strategy(&mut Self, ScrollStrategy)","parent":null,"children":[],"decl_id":null,"docs":" Defines the way scrolling is adjusted on content or size change.","sig":null,"attributes":[{"value":"/ Defines the way scrolling is adjusted on content or size change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386643,"byte_end":386711,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386716,"byte_end":386719,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The scroll strategy defines how the scrolling position is adjusted","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386724,"byte_end":386794,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ when the size of the view or the content change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386799,"byte_end":386851,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386856,"byte_end":386859,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ It is reset to `ScrollStrategy::KeepRow` whenever the user scrolls","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386864,"byte_end":386934,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ manually.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386939,"byte_end":386952,"line_start":49,"line_end":49,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387198,"byte_end":387213,"line_start":57,"line_end":57,"column_start":12,"column_end":27},"name":"scroll_strategy","qualname":"<ScrollView<V>>::scroll_strategy","value":"pub fn scroll_strategy(Self, ScrollStrategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Defines the way scrolling is adjusted on content or size change.","sig":null,"attributes":[{"value":"/ Defines the way scrolling is adjusted on content or size change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387083,"byte_end":387151,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387156,"byte_end":387159,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387164,"byte_end":387186,"line_start":56,"line_end":56,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387415,"byte_end":387434,"line_start":64,"line_end":64,"column_start":12,"column_end":31},"name":"set_show_scrollbars","qualname":"<ScrollView<V>>::set_show_scrollbars","value":"pub fn set_show_scrollbars(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Control whether scroll bars are visibile.","sig":null,"attributes":[{"value":"/ Control whether scroll bars are visibile.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387322,"byte_end":387367,"line_start":61,"line_end":61,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387372,"byte_end":387375,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387380,"byte_end":387403,"line_start":63,"line_end":63,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387629,"byte_end":387644,"line_start":71,"line_end":71,"column_start":12,"column_end":27},"name":"show_scrollbars","qualname":"<ScrollView<V>>::show_scrollbars","value":"pub fn show_scrollbars(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Control whether scroll bars are visibile.","sig":null,"attributes":[{"value":"/ Control whether scroll bars are visibile.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387538,"byte_end":387583,"line_start":68,"line_end":68,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387588,"byte_end":387591,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Chainable variant","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387596,"byte_end":387617,"line_start":70,"line_end":70,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387814,"byte_end":387824,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<ScrollView<V>>::set_offset","value":"pub fn set_offset<S>(&mut Self, S) where S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scroll offset to the given value\n","sig":null,"attributes":[{"value":"/ Sets the scroll offset to the given value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387757,"byte_end":387802,"line_start":75,"line_end":75,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388039,"byte_end":388051,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"set_scroll_y","qualname":"<ScrollView<V>>::set_scroll_y","value":"pub fn set_scroll_y(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Controls whether this view can scroll vertically.","sig":null,"attributes":[{"value":"/ Controls whether this view can scroll vertically.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387938,"byte_end":387991,"line_start":83,"line_end":83,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":387996,"byte_end":387999,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388004,"byte_end":388027,"line_start":85,"line_end":85,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388236,"byte_end":388248,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"set_scroll_x","qualname":"<ScrollView<V>>::set_scroll_x","value":"pub fn set_scroll_x(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Controls whether this view can scroll horizontally.","sig":null,"attributes":[{"value":"/ Controls whether this view can scroll horizontally.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388132,"byte_end":388187,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388192,"byte_end":388195,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388200,"byte_end":388224,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388465,"byte_end":388473,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"scroll_y","qualname":"<ScrollView<V>>::scroll_y","value":"pub fn scroll_y(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Controls whether this view can scroll vertically.","sig":null,"attributes":[{"value":"/ Controls whether this view can scroll vertically.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388329,"byte_end":388382,"line_start":97,"line_end":97,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388387,"byte_end":388390,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388395,"byte_end":388418,"line_start":99,"line_end":99,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388423,"byte_end":388426,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388431,"byte_end":388453,"line_start":101,"line_end":101,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388702,"byte_end":388710,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"scroll_x","qualname":"<ScrollView<V>>::scroll_x","value":"pub fn scroll_x(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Controls whether this view can scroll horizontally.","sig":null,"attributes":[{"value":"/ Controls whether this view can scroll horizontally.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388563,"byte_end":388618,"line_start":106,"line_end":106,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388623,"byte_end":388626,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388631,"byte_end":388655,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388660,"byte_end":388663,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388668,"byte_end":388690,"line_start":110,"line_end":110,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388863,"byte_end":388876,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"scroll_to_top","qualname":"<ScrollView<V>>::scroll_to_top","value":"pub fn scroll_to_top(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Programmatically scroll to the top of the view.\n","sig":null,"attributes":[{"value":"/ Programmatically scroll to the top of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388800,"byte_end":388851,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389002,"byte_end":389018,"line_start":121,"line_end":121,"column_start":12,"column_end":28},"name":"scroll_to_bottom","qualname":"<ScrollView<V>>::scroll_to_bottom","value":"pub fn scroll_to_bottom(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Programmatically scroll to the bottom of the view.\n","sig":null,"attributes":[{"value":"/ Programmatically scroll to the bottom of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":388936,"byte_end":388990,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389154,"byte_end":389168,"line_start":126,"line_end":126,"column_start":12,"column_end":26},"name":"scroll_to_left","qualname":"<ScrollView<V>>::scroll_to_left","value":"pub fn scroll_to_left(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Programmatically scroll to the leftmost side of the view.\n","sig":null,"attributes":[{"value":"/ Programmatically scroll to the leftmost side of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389081,"byte_end":389142,"line_start":125,"line_end":125,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389303,"byte_end":389318,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"scroll_to_right","qualname":"<ScrollView<V>>::scroll_to_right","value":"pub fn scroll_to_right(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Programmatically scroll to the rightmost side of the view.\n","sig":null,"attributes":[{"value":"/ Programmatically scroll to the rightmost side of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389229,"byte_end":389291,"line_start":130,"line_end":130,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389421,"byte_end":389431,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ScrollView<V>>::into_inner","value":"pub fn into_inner(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped view.\n","sig":null,"attributes":[{"value":"/ Returns the wrapped view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389380,"byte_end":389409,"line_start":135,"line_end":135,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392473,"byte_end":392483,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"SelectView","qualname":"::views::select_view::SelectView","value":"SelectView {  }","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635}],"decl_id":null,"docs":" View to select an item among a list.","sig":null,"attributes":[{"value":"/ View to select an item among a list.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391540,"byte_end":391580,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391581,"byte_end":391584,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ It contains a list of values of type T, with associated labels.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391585,"byte_end":391652,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391653,"byte_end":391656,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391657,"byte_end":391671,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391672,"byte_end":391675,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391676,"byte_end":391687,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391688,"byte_end":391715,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391716,"byte_end":391743,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ # use cursive::views::{SelectView, Dialog, TextView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391744,"byte_end":391801,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/ # use cursive::align::HAlign;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391802,"byte_end":391835,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391836,"byte_end":391853,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ let mut time_select = SelectView::new().h_align(HAlign::Center);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391854,"byte_end":391922,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ time_select.add_item(\"Short\", 1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391923,"byte_end":391960,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ time_select.add_item(\"Medium\", 5);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":391961,"byte_end":391999,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ time_select.add_item(\"Long\", 10);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392000,"byte_end":392037,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392038,"byte_end":392041,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ time_select.set_on_submit(|s, time| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392042,"byte_end":392083,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/     s.pop_layer();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392084,"byte_end":392106,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     let text = format!(\"You will wait for {} minutes...\", time);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392107,"byte_end":392175,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/     s.add_layer(Dialog::around(TextView::new(text))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392176,"byte_end":392231,"line_start":41,"line_end":41,"column_start":1,"column_end":56}},{"value":"/                     .button(\"Quit\", |s| s.quit()));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392232,"byte_end":392287,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392288,"byte_end":392295,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392296,"byte_end":392299,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392300,"byte_end":392335,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/ siv.add_layer(Dialog::around(time_select)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392336,"byte_end":392381,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/                      .title(\"How long is your wait?\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392382,"byte_end":392441,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392442,"byte_end":392449,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392450,"byte_end":392453,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":392454,"byte_end":392461,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":393750,"byte_end":393753,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectView<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty SelectView.\n","sig":null,"attributes":[{"value":"/ Creates a new empty SelectView.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":393703,"byte_end":393738,"line_start":92,"line_end":92,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394341,"byte_end":394353,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"set_autojump","qualname":"<SelectView<T>>::set_autojump","value":"pub fn set_autojump(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the \"auto-jump\" property for this view.","sig":null,"attributes":[{"value":"/ Sets the \"auto-jump\" property for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394146,"byte_end":394194,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394199,"byte_end":394202,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If enabled, when a key is pressed, the selection will jump to the next","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394207,"byte_end":394281,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ item beginning with the pressed letter.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394286,"byte_end":394329,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394658,"byte_end":394666,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"autojump","qualname":"<SelectView<T>>::autojump","value":"pub fn autojump(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the \"auto-jump\" property for this view.","sig":null,"attributes":[{"value":"/ Sets the \"auto-jump\" property for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394428,"byte_end":394476,"line_start":116,"line_end":116,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394481,"byte_end":394484,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ If enabled, when a key is pressed, the selection will jump to the next","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394489,"byte_end":394563,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ item beginning with the pressed letter.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394568,"byte_end":394611,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394616,"byte_end":394619,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394624,"byte_end":394646,"line_start":121,"line_end":121,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394827,"byte_end":394832,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"popup","qualname":"<SelectView<T>>::popup","value":"pub fn popup(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns `self` into a popup select view.","sig":null,"attributes":[{"value":"/ Turns `self` into a popup select view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394738,"byte_end":394780,"line_start":126,"line_end":126,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394785,"byte_end":394788,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394793,"byte_end":394815,"line_start":128,"line_end":128,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394955,"byte_end":394964,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"set_popup","qualname":"<SelectView<T>>::set_popup","value":"pub fn set_popup(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Turns `self` into a popup select view.\n","sig":null,"attributes":[{"value":"/ Turns `self` into a popup select view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":394901,"byte_end":394943,"line_start":133,"line_end":133,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395117,"byte_end":395124,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"disable","qualname":"<SelectView<T>>::disable","value":"pub fn disable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395030,"byte_end":395053,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395058,"byte_end":395061,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ A disabled view cannot be selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395066,"byte_end":395105,"line_start":140,"line_end":140,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395249,"byte_end":395257,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"disabled","qualname":"<SelectView<T>>::disabled","value":"pub fn disabled(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395179,"byte_end":395202,"line_start":145,"line_end":145,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395207,"byte_end":395210,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395215,"byte_end":395237,"line_start":147,"line_end":147,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395355,"byte_end":395361,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"enable","qualname":"<SelectView<T>>::enable","value":"pub fn enable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.\n","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395318,"byte_end":395343,"line_start":152,"line_end":152,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395459,"byte_end":395470,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"set_enabled","qualname":"<SelectView<T>>::set_enabled","value":"pub fn set_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable this view.\n","sig":null,"attributes":[{"value":"/ Enable or disable this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395415,"byte_end":395447,"line_start":157,"line_end":157,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395597,"byte_end":395607,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<SelectView<T>>::is_enabled","value":"pub fn is_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view is enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395542,"byte_end":395585,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395725,"byte_end":395738,"line_start":168,"line_end":168,"column_start":12,"column_end":25},"name":"set_on_select","qualname":"<SelectView<T>>::set_on_select","value":"pub fn set_on_select<F>(&mut Self, F) where F: Fn(&mut Cursive, &T) -> () +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when an item is selected.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be used when an item is selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395657,"byte_end":395713,"line_start":167,"line_end":167,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395977,"byte_end":395986,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"on_select","qualname":"<SelectView<T>>::on_select","value":"pub fn on_select<F>(Self, F) -> Self where F: Fn(&mut Cursive, &T) -> () +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when an item is selected.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when an item is selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395874,"byte_end":395930,"line_start":175,"line_end":175,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395935,"byte_end":395938,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":395943,"byte_end":395965,"line_start":177,"line_end":177,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396411,"byte_end":396424,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"set_on_submit","qualname":"<SelectView<T>>::set_on_submit","value":"pub fn set_on_submit<F, R, V: ?Sized>(&mut Self, F) where F: 'static +\nFn(&mut Cursive, &V) -> R, T: Borrow<V>","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when `<Enter>` is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396124,"byte_end":396181,"line_start":185,"line_end":185,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396186,"byte_end":396189,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Also happens if the user clicks an item.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396194,"byte_end":396238,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396243,"byte_end":396246,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The item currently selected will be given to the callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396251,"byte_end":396313,"line_start":189,"line_end":189,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396318,"byte_end":396321,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Here, `V` can be `T` itself, or a type that can be borrowed from `T`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396326,"byte_end":396399,"line_start":191,"line_end":191,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396889,"byte_end":396898,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"on_submit","qualname":"<SelectView<T>>::on_submit","value":"pub fn on_submit<F, V: ?Sized>(Self, F) -> Self where F: Fn(&mut Cursive, &V)\n-> () + 'static, T: Borrow<V>","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when `<Enter>` is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396653,"byte_end":396710,"line_start":202,"line_end":202,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396715,"byte_end":396718,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Also happens if the user clicks an item.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396723,"byte_end":396767,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396772,"byte_end":396775,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The item currently selected will be given to the callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396780,"byte_end":396842,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396847,"byte_end":396850,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":396855,"byte_end":396877,"line_start":208,"line_end":208,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3667},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397118,"byte_end":397123,"line_start":218,"line_end":218,"column_start":12,"column_end":17},"name":"align","qualname":"<SelectView<T>>::align","value":"pub fn align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the alignment for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397069,"byte_end":397106,"line_start":217,"line_end":217,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397327,"byte_end":397334,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"v_align","qualname":"<SelectView<T>>::v_align","value":"pub fn v_align(Self, VAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the vertical alignment for this view.\n (If the view is given too much space vertically.)\n","sig":null,"attributes":[{"value":"/ Sets the vertical alignment for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397211,"byte_end":397257,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/ (If the view is given too much space vertically.)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397262,"byte_end":397315,"line_start":225,"line_end":225,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397477,"byte_end":397484,"line_start":233,"line_end":233,"column_start":12,"column_end":19},"name":"h_align","qualname":"<SelectView<T>>::h_align","value":"pub fn h_align(Self, HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the horizontal alignment for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397417,"byte_end":397465,"line_start":232,"line_end":232,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397685,"byte_end":397694,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"selection","qualname":"<SelectView<T>>::selection","value":"pub fn selection(&Self) -> Option<Rc<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the currently selected item.","sig":null,"attributes":[{"value":"/ Returns the value of the currently selected item.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397567,"byte_end":397620,"line_start":239,"line_end":239,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397625,"byte_end":397628,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the list is empty.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397633,"byte_end":397673,"line_start":241,"line_end":241,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397946,"byte_end":397951,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectView<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all items from this view.\n","sig":null,"attributes":[{"value":"/ Removes all items from this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":397897,"byte_end":397934,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398099,"byte_end":398107,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"add_item","qualname":"<SelectView<T>>::add_item","value":"pub fn add_item<S: Into<StyledString>>(&mut Self, S, T)","parent":null,"children":[],"decl_id":null,"docs":" Adds a item to the list, with given label and value.\n","sig":null,"attributes":[{"value":"/ Adds a item to the list, with given label and value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398031,"byte_end":398087,"line_start":257,"line_end":257,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398527,"byte_end":398535,"line_start":271,"line_end":271,"column_start":12,"column_end":20},"name":"get_item","qualname":"<SelectView<T>>::get_item","value":"pub fn get_item(&Self, usize) -> Option<(&str, &T)>","parent":null,"children":[],"decl_id":null,"docs":" Gets an item at given idx or None.","sig":null,"attributes":[{"value":"/ Gets an item at given idx or None.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398232,"byte_end":398270,"line_start":262,"line_end":262,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398275,"byte_end":398278,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398283,"byte_end":398290,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398295,"byte_end":398320,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/ use cursive::views::{SelectView, TextView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398325,"byte_end":398372,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/ let select = SelectView::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398377,"byte_end":398411,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/     .item(\"Short\", 1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398416,"byte_end":398442,"line_start":268,"line_end":268,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(select.get_item(0), Some((\"Short\", &1)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398447,"byte_end":398503,"line_start":269,"line_end":269,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398508,"byte_end":398515,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398668,"byte_end":398680,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"get_item_mut","qualname":"<SelectView<T>>::get_item_mut","value":"pub fn get_item_mut(&mut Self, usize) -> Option<(&mut StyledString, &mut T)>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mut item at given idx or None.\n","sig":null,"attributes":[{"value":"/ Gets a mut item at given idx or None.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":398615,"byte_end":398656,"line_start":275,"line_end":275,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399204,"byte_end":399208,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectView<T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate on the items in this view.","sig":null,"attributes":[{"value":"/ Iterate on the items in this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399085,"byte_end":399123,"line_start":292,"line_end":292,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399128,"byte_end":399131,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator with each item and their labels.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399136,"byte_end":399192,"line_start":294,"line_end":294,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399551,"byte_end":399562,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"remove_item","qualname":"<SelectView<T>>::remove_item","value":"pub fn remove_item(&mut Self, usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Removes an item from the list.","sig":null,"attributes":[{"value":"/ Removes an item from the list.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399365,"byte_end":399399,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399404,"byte_end":399407,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to the selection change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399412,"byte_end":399471,"line_start":303,"line_end":303,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399476,"byte_end":399479,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399484,"byte_end":399539,"line_start":305,"line_end":305,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399930,"byte_end":399941,"line_start":318,"line_end":318,"column_start":12,"column_end":23},"name":"insert_item","qualname":"<SelectView<T>>::insert_item","value":"pub fn insert_item<S>(&mut Self, usize, S, T) where S: Into<StyledString>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at position `index`, shifting all elements after it to\n the right.\n","sig":null,"attributes":[{"value":"/ Inserts an item at position `index`, shifting all elements after it to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399825,"byte_end":399899,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ the right.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":399904,"byte_end":399918,"line_start":317,"line_end":317,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":400159,"byte_end":400163,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"item","qualname":"<SelectView<T>>::item","value":"pub fn item<S: Into<String>>(Self, S, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Chainable variant of add_item\n","sig":null,"attributes":[{"value":"/ Chainable variant of add_item","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":400114,"byte_end":400147,"line_start":325,"line_end":325,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3685},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":400329,"byte_end":400336,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"add_all","qualname":"<SelectView<T>>::add_all","value":"pub fn add_all<S, I>(&mut Self, I) where S: Into<StyledString>,\nI: IntoIterator<Item = (S, T)>","parent":null,"children":[],"decl_id":null,"docs":" Adds all items from from an iterator.\n","sig":null,"attributes":[{"value":"/ Adds all items from from an iterator.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":400276,"byte_end":400317,"line_start":330,"line_end":330,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3688},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":400621,"byte_end":400629,"line_start":344,"line_end":344,"column_start":12,"column_end":20},"name":"with_all","qualname":"<SelectView<T>>::with_all","value":"pub fn with_all<S, I>(Self, I) -> Self where S: Into<String>,\nI: IntoIterator<Item = (S, T)>","parent":null,"children":[],"decl_id":null,"docs":" Adds all items from from an iterator.","sig":null,"attributes":[{"value":"/ Adds all items from from an iterator.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":400533,"byte_end":400574,"line_start":341,"line_end":341,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":400579,"byte_end":400582,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":400587,"byte_end":400609,"line_start":343,"line_end":343,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401360,"byte_end":401371,"line_start":366,"line_end":366,"column_start":12,"column_end":23},"name":"selected_id","qualname":"<SelectView<T>>::selected_id","value":"pub fn selected_id(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the item currently selected.","sig":null,"attributes":[{"value":"/ Returns the id of the item currently selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401245,"byte_end":401295,"line_start":363,"line_end":363,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401300,"byte_end":401303,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the list is empty.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401308,"byte_end":401348,"line_start":365,"line_end":365,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401576,"byte_end":401579,"line_start":375,"line_end":375,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectView<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in this list.\n","sig":null,"attributes":[{"value":"/ Returns the number of items in this list.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401519,"byte_end":401564,"line_start":374,"line_end":374,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3695},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401690,"byte_end":401698,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectView<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this list has no item.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this list has no item.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401634,"byte_end":401678,"line_start":379,"line_end":379,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402121,"byte_end":402134,"line_start":392,"line_end":392,"column_start":12,"column_end":25},"name":"sort_by_label","qualname":"<SelectView<T>>::sort_by_label","value":"pub fn sort_by_label(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sort the current items lexicographically by their label.\n Note that this does not change the current focus index, which means that the current\n selection will likely be changed by the sorting.\n This sort is stable: items with identical label will not be reordered.\n","sig":null,"attributes":[{"value":"/ Sort the current items lexicographically by their label.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401820,"byte_end":401880,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/ Note that this does not change the current focus index, which means that the current","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401885,"byte_end":401973,"line_start":389,"line_end":389,"column_start":5,"column_end":93}},{"value":"/ selection will likely be changed by the sorting.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":401978,"byte_end":402030,"line_start":390,"line_end":390,"column_start":5,"column_end":57}},{"value":"/ This sort is stable: items with identical label will not be reordered.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402035,"byte_end":402109,"line_start":391,"line_end":391,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402734,"byte_end":402741,"line_start":404,"line_end":404,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<SelectView<T>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the current items with the given comparator function.\n Note that this does not change the current focus index, which means that the current\n selection will likely be changed by the sorting.\n The given comparator function must define a total order for the items.\n If the comparator function does not define a total order, then the order after the sort is\n unspecified.\n This sort is stable: equal items will not be reordered.\n","sig":null,"attributes":[{"value":"/ Sort the current items with the given comparator function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402247,"byte_end":402309,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/ Note that this does not change the current focus index, which means that the current","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402314,"byte_end":402402,"line_start":398,"line_end":398,"column_start":5,"column_end":93}},{"value":"/ selection will likely be changed by the sorting.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402407,"byte_end":402459,"line_start":399,"line_end":399,"column_start":5,"column_end":57}},{"value":"/ The given comparator function must define a total order for the items.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402464,"byte_end":402538,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ If the comparator function does not define a total order, then the order after the sort is","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402543,"byte_end":402637,"line_start":401,"line_end":401,"column_start":5,"column_end":99}},{"value":"/ unspecified.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402642,"byte_end":402658,"line_start":402,"line_end":402,"column_start":5,"column_end":21}},{"value":"/ This sort is stable: equal items will not be reordered.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402663,"byte_end":402722,"line_start":403,"line_end":403,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403203,"byte_end":403214,"line_start":415,"line_end":415,"column_start":12,"column_end":23},"name":"sort_by_key","qualname":"<SelectView<T>>::sort_by_key","value":"pub fn sort_by_key<K, F>(&mut Self, F) where F: FnMut(&T) -> K, K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the current items with the given key extraction function.\n Note that this does not change the current focus index, which means that the current\n selection will likely be changed by the sorting.\n This sort is stable: items with equal keys will not be reordered.\n","sig":null,"attributes":[{"value":"/ Sort the current items with the given key extraction function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402901,"byte_end":402967,"line_start":411,"line_end":411,"column_start":5,"column_end":71}},{"value":"/ Note that this does not change the current focus index, which means that the current","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":402972,"byte_end":403060,"line_start":412,"line_end":412,"column_start":5,"column_end":93}},{"value":"/ selection will likely be changed by the sorting.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403065,"byte_end":403117,"line_start":413,"line_end":413,"column_start":5,"column_end":57}},{"value":"/ This sort is stable: items with equal keys will not be reordered.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403122,"byte_end":403191,"line_start":414,"line_end":414,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403575,"byte_end":403588,"line_start":428,"line_end":428,"column_start":12,"column_end":25},"name":"set_selection","qualname":"<SelectView<T>>::set_selection","value":"pub fn set_selection(&mut Self, usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Moves the selection to the given position.","sig":null,"attributes":[{"value":"/ Moves the selection to the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403377,"byte_end":403423,"line_start":423,"line_end":423,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403428,"byte_end":403431,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to the selection change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403436,"byte_end":403495,"line_start":425,"line_end":425,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403500,"byte_end":403503,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403508,"byte_end":403563,"line_start":427,"line_end":427,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404143,"byte_end":404151,"line_start":447,"line_end":447,"column_start":12,"column_end":20},"name":"selected","qualname":"<SelectView<T>>::selected","value":"pub fn selected(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the selection to the given position.","sig":null,"attributes":[{"value":"/ Sets the selection to the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":403997,"byte_end":404042,"line_start":442,"line_end":442,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404047,"byte_end":404050,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404055,"byte_end":404077,"line_start":444,"line_end":444,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404082,"byte_end":404085,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Does not apply `on_select` callbacks.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404090,"byte_end":404131,"line_start":446,"line_end":446,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404736,"byte_end":404745,"line_start":468,"line_end":468,"column_start":12,"column_end":21},"name":"select_up","qualname":"<SelectView<T>>::select_up","value":"pub fn select_up(&mut Self, usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Moves the selection up by the given number of rows.","sig":null,"attributes":[{"value":"/ Moves the selection up by the given number of rows.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404256,"byte_end":404311,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404316,"byte_end":404319,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to the selection change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404324,"byte_end":404383,"line_start":455,"line_end":455,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404388,"byte_end":404391,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404396,"byte_end":404451,"line_start":457,"line_end":457,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404456,"byte_end":404459,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404464,"byte_end":404475,"line_start":459,"line_end":459,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404480,"byte_end":404507,"line_start":460,"line_end":460,"column_start":5,"column_end":32}},{"value":"/ # use cursive::views::SelectView;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404512,"byte_end":404549,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404554,"byte_end":404572,"line_start":462,"line_end":462,"column_start":5,"column_end":23}},{"value":"/ fn select_up(siv: &mut Cursive, view: &mut SelectView<()>) {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404577,"byte_end":404641,"line_start":463,"line_end":463,"column_start":5,"column_end":69}},{"value":"/     let cb = view.select_up(1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404646,"byte_end":404681,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/     cb(siv);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404686,"byte_end":404702,"line_start":465,"line_end":465,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404707,"byte_end":404712,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404717,"byte_end":404724,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":405089,"byte_end":405100,"line_start":478,"line_end":478,"column_start":12,"column_end":23},"name":"select_down","qualname":"<SelectView<T>>::select_down","value":"pub fn select_down(&mut Self, usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Moves the selection down by the given number of rows.","sig":null,"attributes":[{"value":"/ Moves the selection down by the given number of rows.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404880,"byte_end":404937,"line_start":473,"line_end":473,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404942,"byte_end":404945,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to the selection change.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":404950,"byte_end":405009,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":405014,"byte_end":405017,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":405022,"byte_end":405077,"line_start":477,"line_end":477,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":411975,"byte_end":411987,"line_start":659,"line_end":659,"column_start":12,"column_end":24},"name":"add_item_str","qualname":"<SelectView<String>>::add_item_str","value":"pub fn add_item_str<S: Into<String>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to use the label as value.\n","sig":null,"attributes":[{"value":"/ Convenient method to use the label as value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":411915,"byte_end":411963,"line_start":658,"line_end":658,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412167,"byte_end":412175,"line_start":665,"line_end":665,"column_start":12,"column_end":20},"name":"item_str","qualname":"<SelectView<String>>::item_str","value":"pub fn item_str<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Chainable variant of add_item_str\n","sig":null,"attributes":[{"value":"/ Chainable variant of add_item_str","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412118,"byte_end":412155,"line_start":664,"line_end":664,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412335,"byte_end":412350,"line_start":670,"line_end":670,"column_start":12,"column_end":27},"name":"insert_item_str","qualname":"<SelectView<String>>::insert_item_str","value":"pub fn insert_item_str<S>(&mut Self, usize, S) where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to use the label as value.\n","sig":null,"attributes":[{"value":"/ Convenient method to use the label as value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412275,"byte_end":412323,"line_start":669,"line_end":669,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412784,"byte_end":412795,"line_start":687,"line_end":687,"column_start":12,"column_end":23},"name":"add_all_str","qualname":"<SelectView<String>>::add_all_str","value":"pub fn add_all_str<S, I>(&mut Self, I) where S: Into<String>,\nI: IntoIterator<Item = S>","parent":null,"children":[],"decl_id":null,"docs":" Adds all strings from an iterator.","sig":null,"attributes":[{"value":"/ Adds all strings from an iterator.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412530,"byte_end":412568,"line_start":678,"line_end":678,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412573,"byte_end":412576,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412581,"byte_end":412595,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412600,"byte_end":412603,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412608,"byte_end":412615,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use cursive::views::SelectView;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412620,"byte_end":412657,"line_start":683,"line_end":683,"column_start":5,"column_end":42}},{"value":"/ let mut select_view = SelectView::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412662,"byte_end":412706,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/ select_view.add_all_str(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412711,"byte_end":412760,"line_start":685,"line_end":685,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412765,"byte_end":412772,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413062,"byte_end":413074,"line_start":700,"line_end":700,"column_start":12,"column_end":24},"name":"with_all_str","qualname":"<SelectView<String>>::with_all_str","value":"pub fn with_all_str<S, I>(Self, I) -> Self where S: Into<String>,\nI: IntoIterator<Item = S>","parent":null,"children":[],"decl_id":null,"docs":" Adds all strings from an iterator.","sig":null,"attributes":[{"value":"/ Adds all strings from an iterator.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":412977,"byte_end":413015,"line_start":697,"line_end":697,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413020,"byte_end":413023,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413028,"byte_end":413050,"line_start":699,"line_end":699,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413575,"byte_end":413579,"line_start":717,"line_end":717,"column_start":12,"column_end":16},"name":"sort","qualname":"<SelectView<T>>::sort","value":"pub fn sort(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sort the current items by their natural ordering.\n Note that this does not change the current focus index, which means that the current\n selection will likely be changed by the sorting.\n This sort is stable: items that are equal will not be reordered.\n","sig":null,"attributes":[{"value":"/ Sort the current items by their natural ordering.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413287,"byte_end":413340,"line_start":713,"line_end":713,"column_start":5,"column_end":58}},{"value":"/ Note that this does not change the current focus index, which means that the current","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413345,"byte_end":413433,"line_start":714,"line_end":714,"column_start":5,"column_end":93}},{"value":"/ selection will likely be changed by the sorting.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413438,"byte_end":413490,"line_start":715,"line_end":715,"column_start":5,"column_end":57}},{"value":"/ This sort is stable: items that are equal will not be reordered.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413495,"byte_end":413563,"line_start":716,"line_end":716,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421096,"byte_end":421106,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"ShadowView","qualname":"::views::shadow_view::ShadowView","value":"ShadowView {  }","parent":null,"children":[{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797}],"decl_id":null,"docs":" Wrapper view that adds a shadow.","sig":null,"attributes":[{"value":"/ Wrapper view that adds a shadow.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":420997,"byte_end":421033,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421034,"byte_end":421037,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ It reserves a 1 pixel border on each side.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421038,"byte_end":421084,"line_start":9,"line_end":9,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421302,"byte_end":421305,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ShadowView<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given view.\n","sig":null,"attributes":[{"value":"/ Wraps the given view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421265,"byte_end":421290,"line_start":18,"line_end":18,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421751,"byte_end":421763,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"left_padding","qualname":"<ShadowView<T>>::left_padding","value":"pub fn left_padding(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set, adds an empty column to the left of the view.","sig":null,"attributes":[{"value":"/ If set, adds an empty column to the left of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421649,"byte_end":421706,"line_start":35,"line_end":35,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421711,"byte_end":421714,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Default to true.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421719,"byte_end":421739,"line_start":37,"line_end":37,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421954,"byte_end":421965,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"top_padding","qualname":"<ShadowView<T>>::top_padding","value":"pub fn top_padding(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set, adds an empty row at the top of the view.","sig":null,"attributes":[{"value":"/ If set, adds an empty row at the top of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421856,"byte_end":421909,"line_start":43,"line_end":43,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421914,"byte_end":421917,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Default to true.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421922,"byte_end":421942,"line_start":45,"line_end":45,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3822},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423797,"byte_end":423806,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"SizedView","qualname":"::views::sized_view::SizedView","value":"SizedView { view, size }","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825}],"decl_id":null,"docs":" Wrapper around a view that remembers its size.\n","sig":null,"attributes":[{"value":"/ Wrapper around a view that remembers its size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423735,"byte_end":423785,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3824},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423842,"byte_end":423846,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"view","qualname":"::views::sized_view::SizedView::view","value":"T","parent":{"krate":0,"index":3822},"children":[],"decl_id":null,"docs":" Wrapped view.\n","sig":null,"attributes":[{"value":"/ Wrapped view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423816,"byte_end":423833,"line_start":7,"line_end":7,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423908,"byte_end":423912,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"size","qualname":"::views::sized_view::SizedView::size","value":"xy::XY<usize>","parent":{"krate":0,"index":3822},"children":[],"decl_id":null,"docs":" Cached size from the last layout() call.\n","sig":null,"attributes":[{"value":"/ Cached size from the last layout() call.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423855,"byte_end":423899,"line_start":9,"line_end":9,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3828},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423987,"byte_end":423990,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<SizedView<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given view.\n","sig":null,"attributes":[{"value":"/ Wraps the given view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423950,"byte_end":423975,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3881},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":424645,"byte_end":424655,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"SliderView","qualname":"::views::slider_view::SliderView","value":"SliderView {  }","parent":null,"children":[{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887}],"decl_id":null,"docs":" A horizontal or vertical slider.\n","sig":null,"attributes":[{"value":"/ A horizontal or vertical slider.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":424597,"byte_end":424633,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425051,"byte_end":425054,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<SliderView>::new","value":"pub fn new(Orientation, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SliderView` in the given orientation.","sig":null,"attributes":[{"value":"/ Creates a new `SliderView` in the given orientation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":424884,"byte_end":424940,"line_start":23,"line_end":23,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":424945,"byte_end":424948,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The view will have a fixed length of `max_value`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":424953,"byte_end":425006,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ with one tick per block.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425011,"byte_end":425039,"line_start":26,"line_end":26,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425359,"byte_end":425367,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"vertical","qualname":"<SliderView>::vertical","value":"pub fn vertical(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new vertical `SliderView`.\n","sig":null,"attributes":[{"value":"/ Creates a new vertical `SliderView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425307,"byte_end":425347,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425513,"byte_end":425523,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<SliderView>::horizontal","value":"pub fn horizontal(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new horizontal `SliderView`.\n","sig":null,"attributes":[{"value":"/ Creates a new horizontal `SliderView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425459,"byte_end":425501,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425755,"byte_end":425764,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"set_value","qualname":"<SliderView>::set_value","value":"pub fn set_value(&mut Self, usize) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the current value.","sig":null,"attributes":[{"value":"/ Sets the current value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425617,"byte_end":425644,"line_start":48,"line_end":48,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425649,"byte_end":425652,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Returns an event result with a possible callback,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425657,"byte_end":425710,"line_start":50,"line_end":50,"column_start":5,"column_end":58}},{"value":"/ if `on_change` was set..","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425715,"byte_end":425743,"line_start":51,"line_end":51,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425953,"byte_end":425958,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"value","qualname":"<SliderView>::value","value":"pub fn value(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the current value.","sig":null,"attributes":[{"value":"/ Sets the current value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425879,"byte_end":425906,"line_start":57,"line_end":57,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425911,"byte_end":425914,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":425919,"byte_end":425941,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":426137,"byte_end":426146,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"on_change","qualname":"<SliderView>::on_change","value":"pub fn on_change<F>(Self, F) -> Self where F: Fn(&mut Cursive, usize) -> () +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called when the slider is moved.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be called when the slider is moved.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":426067,"byte_end":426125,"line_start":66,"line_end":66,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":426394,"byte_end":426402,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"on_enter","qualname":"<SliderView>::on_enter","value":"pub fn on_enter<F>(Self, F) -> Self where F: Fn(&mut Cursive, usize) -> () +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called when the <Enter> key is pressed.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be called when the <Enter> key is pressed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":426317,"byte_end":426382,"line_start":75,"line_end":75,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":430890,"byte_end":430899,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"StackView","qualname":"::views::stack_view::StackView","value":"StackView {  }","parent":null,"children":[{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3979}],"decl_id":null,"docs":" Simple stack of views.\n Only the top-most view is active and can receive input.\n","sig":null,"attributes":[{"value":"/ Simple stack of views.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":430792,"byte_end":430818,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ Only the top-most view is active and can receive input.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":430819,"byte_end":430878,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6305},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":431530,"byte_end":431538,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"FromBack","qualname":"::views::stack_view::LayerPosition::FromBack","value":"LayerPosition::FromBack(usize)","parent":{"krate":0,"index":6304},"children":[],"decl_id":null,"docs":" Starts from the back (bottom) of the stack.\n","sig":null,"attributes":[{"value":"/ Starts from the back (bottom) of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":431478,"byte_end":431525,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6308},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":431601,"byte_end":431610,"line_start":40,"line_end":40,"column_start":5,"column_end":14},"name":"FromFront","qualname":"::views::stack_view::LayerPosition::FromFront","value":"LayerPosition::FromFront(usize)","parent":{"krate":0,"index":6304},"children":[],"decl_id":null,"docs":" Starts from the front (top) of the stack.\n","sig":null,"attributes":[{"value":"/ Starts from the front (top) of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":431551,"byte_end":431596,"line_start":39,"line_end":39,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":6304},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":431458,"byte_end":431471,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"name":"LayerPosition","qualname":"::views::stack_view::LayerPosition","value":"pub enum LayerPosition { FromBack(usize), FromFront(usize), }","parent":null,"children":[{"krate":0,"index":6305},{"krate":0,"index":6308}],"decl_id":null,"docs":" Identifies a layer in a `StackView`.\n","sig":null,"attributes":[{"value":"/ Identifies a layer in a `StackView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":431363,"byte_end":431403,"line_start":34,"line_end":34,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437017,"byte_end":437020,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"new","qualname":"<StackView>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty StackView\n","sig":null,"attributes":[{"value":"/ Creates a new empty StackView","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":436972,"byte_end":437005,"line_start":211,"line_end":211,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437253,"byte_end":437256,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"len","qualname":"<StackView>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of layers in this `StackView`.\n","sig":null,"attributes":[{"value":"/ Returns the number of layers in this `StackView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437188,"byte_end":437241,"line_start":220,"line_end":220,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437384,"byte_end":437392,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StackView>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there is no layer in this `StackView`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there is no layer in this `StackView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437312,"byte_end":437372,"line_start":225,"line_end":225,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437579,"byte_end":437583,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"fits","qualname":"<StackView>::fits","value":"pub fn fits(&Self, LayerPosition) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `position` points to a valid layer.","sig":null,"attributes":[{"value":"/ Returns `true` if `position` points to a valid layer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437452,"byte_end":437509,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437514,"byte_end":437517,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if it exceeds the bounds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437522,"byte_end":437567,"line_start":232,"line_end":232,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4029},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437895,"byte_end":437915,"line_start":244,"line_end":244,"column_start":12,"column_end":32},"name":"add_fullscreen_layer","qualname":"<StackView>::add_fullscreen_layer","value":"pub fn add_fullscreen_layer<T>(&mut Self, T) where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds a new full-screen layer on top of the stack.","sig":null,"attributes":[{"value":"/ Adds a new full-screen layer on top of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437780,"byte_end":437833,"line_start":241,"line_end":241,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437838,"byte_end":437841,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Fullscreen layers have no shadow.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":437846,"byte_end":437883,"line_start":243,"line_end":243,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4031},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":438380,"byte_end":438389,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"add_layer","qualname":"<StackView>::add_layer","value":"pub fn add_layer<T>(&mut Self, T) where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds new view on top of the stack in the center of the screen.\n","sig":null,"attributes":[{"value":"/ Adds new view on top of the stack in the center of the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":438302,"byte_end":438368,"line_start":259,"line_end":259,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4033},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":438632,"byte_end":438637,"line_start":270,"line_end":270,"column_start":12,"column_end":17},"name":"layer","qualname":"<StackView>::layer","value":"pub fn layer<T>(Self, T) -> Self where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds new view on top of the stack in the center of the screen.","sig":null,"attributes":[{"value":"/ Adds new view on top of the stack in the center of the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":438519,"byte_end":438585,"line_start":267,"line_end":267,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":438590,"byte_end":438593,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":438598,"byte_end":438620,"line_start":269,"line_end":269,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":438829,"byte_end":438832,"line_start":278,"line_end":278,"column_start":12,"column_end":15},"name":"get","qualname":"<StackView>::get","value":"pub fn get(&Self, LayerPosition) -> Option<&dyn View>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the layer at the given position.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the layer at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":438758,"byte_end":438817,"line_start":277,"line_end":277,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439097,"byte_end":439104,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StackView>::get_mut","value":"pub fn get_mut(&mut Self, LayerPosition) -> Option<&mut dyn View>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the layer at the given position.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the layer at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439018,"byte_end":439085,"line_start":284,"line_end":284,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440252,"byte_end":440270,"line_start":317,"line_end":317,"column_start":12,"column_end":30},"name":"find_layer_from_id","qualname":"<StackView>::find_layer_from_id","value":"pub fn find_layer_from_id(&mut Self, &str) -> Option<LayerPosition>","parent":null,"children":[],"decl_id":null,"docs":" Looks for the layer containing a view with the given ID.","sig":null,"attributes":[{"value":"/ Looks for the layer containing a view with the given ID.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439349,"byte_end":439409,"line_start":293,"line_end":293,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439414,"byte_end":439417,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(pos)` if `self.get(pos)` has the given ID,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439422,"byte_end":439482,"line_start":295,"line_end":295,"column_start":5,"column_end":65}},{"value":"/ or is a parent of a view with this ID.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439487,"byte_end":439529,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439534,"byte_end":439537,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the given ID is not found.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439542,"byte_end":439590,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439595,"byte_end":439598,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Note that the returned position may be invalidated if some layers are","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439603,"byte_end":439676,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/ removed from the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439681,"byte_end":439707,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439712,"byte_end":439715,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439720,"byte_end":439734,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439739,"byte_end":439742,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439747,"byte_end":439758,"line_start":305,"line_end":305,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::{TextView, StackView, Dialog, LayerPosition};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439763,"byte_end":439834,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ # use cursive::view::Identifiable;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439839,"byte_end":439877,"line_start":307,"line_end":307,"column_start":5,"column_end":43}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439882,"byte_end":439899,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/ let mut stack = StackView::new();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439904,"byte_end":439941,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/ stack.add_layer(TextView::new(\"Back\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439946,"byte_end":439989,"line_start":310,"line_end":310,"column_start":5,"column_end":48}},{"value":"/ stack.add_layer(Dialog::around(TextView::new(\"Middle\").with_id(\"text\")));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":439994,"byte_end":440071,"line_start":311,"line_end":311,"column_start":5,"column_end":82}},{"value":"/ stack.add_layer(TextView::new(\"Front\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440076,"byte_end":440120,"line_start":312,"line_end":312,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440125,"byte_end":440128,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stack.find_layer_from_id(\"text\"), Some(LayerPosition::FromBack(1)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440133,"byte_end":440216,"line_start":314,"line_end":314,"column_start":5,"column_end":88}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440221,"byte_end":440228,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440233,"byte_end":440240,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440797,"byte_end":440813,"line_start":336,"line_end":336,"column_start":12,"column_end":28},"name":"fullscreen_layer","qualname":"<StackView>::fullscreen_layer","value":"pub fn fullscreen_layer<T>(Self, T) -> Self where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds a new full-screen layer on top of the stack.","sig":null,"attributes":[{"value":"/ Adds a new full-screen layer on top of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440697,"byte_end":440750,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440755,"byte_end":440758,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440763,"byte_end":440785,"line_start":335,"line_end":335,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":441045,"byte_end":441062,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"transparent_layer","qualname":"<StackView>::transparent_layer","value":"pub fn transparent_layer<T>(Self, T) -> Self where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds a new transparent layer on top of the stack.","sig":null,"attributes":[{"value":"/ Adds a new transparent layer on top of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":440945,"byte_end":440998,"line_start":343,"line_end":343,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":441003,"byte_end":441006,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":441011,"byte_end":441033,"line_start":345,"line_end":345,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":441243,"byte_end":441255,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"add_layer_at","qualname":"<StackView>::add_layer_at","value":"pub fn add_layer_at<T>(&mut Self, Position, T) where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds a view on top of the stack.\n","sig":null,"attributes":[{"value":"/ Adds a view on top of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":441195,"byte_end":441231,"line_start":353,"line_end":353,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4052},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":441962,"byte_end":441983,"line_start":373,"line_end":373,"column_start":12,"column_end":33},"name":"add_transparent_layer","qualname":"<StackView>::add_transparent_layer","value":"pub fn add_transparent_layer<T>(&mut Self, T) where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds a transparent view on top of the stack in the center of the screen.\n","sig":null,"attributes":[{"value":"/ Adds a transparent view on top of the stack in the center of the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":441874,"byte_end":441950,"line_start":372,"line_end":372,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442185,"byte_end":442209,"line_start":381,"line_end":381,"column_start":12,"column_end":36},"name":"add_transparent_layer_at","qualname":"<StackView>::add_transparent_layer_at","value":"pub fn add_transparent_layer_at<T>(&mut Self, Position, T) where\nT: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds a transparent view on top of the stack.\n","sig":null,"attributes":[{"value":"/ Adds a transparent view on top of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442125,"byte_end":442173,"line_start":380,"line_end":380,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442684,"byte_end":442692,"line_start":397,"line_end":397,"column_start":12,"column_end":20},"name":"layer_at","qualname":"<StackView>::layer_at","value":"pub fn layer_at<T>(Self, Position, T) -> Self where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds a view on top of the stack at the given position.","sig":null,"attributes":[{"value":"/ Adds a view on top of the stack at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442579,"byte_end":442637,"line_start":394,"line_end":394,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442642,"byte_end":442645,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442650,"byte_end":442672,"line_start":396,"line_end":396,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442980,"byte_end":442992,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"remove_layer","qualname":"<StackView>::remove_layer","value":"pub fn remove_layer(&mut Self, LayerPosition) -> Box<dyn View>","parent":null,"children":[],"decl_id":null,"docs":" Remove a layer from this `StackView`.","sig":null,"attributes":[{"value":"/ Remove a layer from this `StackView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442846,"byte_end":442887,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442892,"byte_end":442895,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442900,"byte_end":442912,"line_start":406,"line_end":406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442917,"byte_end":442920,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If the given position is out of bounds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":442925,"byte_end":442968,"line_start":408,"line_end":408,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":443205,"byte_end":443214,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"pop_layer","qualname":"<StackView>::pop_layer","value":"pub fn pop_layer(&mut Self) -> Option<Box<dyn View>>","parent":null,"children":[],"decl_id":null,"docs":" Remove the top-most layer.\n","sig":null,"attributes":[{"value":"/ Remove the top-most layer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":443163,"byte_end":443193,"line_start":414,"line_end":414,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":443506,"byte_end":443512,"line_start":425,"line_end":425,"column_start":12,"column_end":18},"name":"offset","qualname":"<StackView>::offset","value":"pub fn offset(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Computes the offset of the current top view.\n","sig":null,"attributes":[{"value":"/ Computes the offset of the current top view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":443446,"byte_end":443494,"line_start":424,"line_end":424,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":443895,"byte_end":443906,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"layer_sizes","qualname":"<StackView>::layer_sizes","value":"pub fn layer_sizes(&Self) -> Vec<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size for each layer in this view.\n","sig":null,"attributes":[{"value":"/ Returns the size for each layer in this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":443834,"byte_end":443883,"line_start":438,"line_end":438,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444525,"byte_end":444535,"line_start":460,"line_end":460,"column_start":12,"column_end":22},"name":"move_layer","qualname":"<StackView>::move_layer","value":"pub fn move_layer(&mut Self, LayerPosition, LayerPosition)","parent":null,"children":[],"decl_id":null,"docs":" Moves a layer to a new position in the stack.","sig":null,"attributes":[{"value":"/ Moves a layer to a new position in the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444264,"byte_end":444313,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444318,"byte_end":444321,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This only affects the elevation of a layer (whether it is drawn over","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444326,"byte_end":444398,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ or under other views).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444403,"byte_end":444429,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444434,"byte_end":444437,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444442,"byte_end":444454,"line_start":457,"line_end":457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444459,"byte_end":444462,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ If either `from` or `to` is out of bounds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444467,"byte_end":444513,"line_start":459,"line_end":459,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444982,"byte_end":444995,"line_start":474,"line_end":474,"column_start":12,"column_end":25},"name":"move_to_front","qualname":"<StackView>::move_to_front","value":"pub fn move_to_front(&mut Self, LayerPosition)","parent":null,"children":[],"decl_id":null,"docs":" Brings the given view to the front of the stack.","sig":null,"attributes":[{"value":"/ Brings the given view to the front of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444848,"byte_end":444900,"line_start":469,"line_end":469,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444905,"byte_end":444908,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444913,"byte_end":444925,"line_start":471,"line_end":471,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444930,"byte_end":444933,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ If `layer` is out of bounds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":444938,"byte_end":444970,"line_start":473,"line_end":473,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445236,"byte_end":445248,"line_start":483,"line_end":483,"column_start":12,"column_end":24},"name":"move_to_back","qualname":"<StackView>::move_to_back","value":"pub fn move_to_back(&mut Self, LayerPosition)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given view to the back of the stack.","sig":null,"attributes":[{"value":"/ Pushes the given view to the back of the stack.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445103,"byte_end":445154,"line_start":478,"line_end":478,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445159,"byte_end":445162,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445167,"byte_end":445179,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445184,"byte_end":445187,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ If `layer` is out of bounds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445192,"byte_end":445224,"line_start":482,"line_end":482,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445487,"byte_end":445503,"line_start":492,"line_end":492,"column_start":12,"column_end":28},"name":"reposition_layer","qualname":"<StackView>::reposition_layer","value":"pub fn reposition_layer(&mut Self, LayerPosition, Position)","parent":null,"children":[],"decl_id":null,"docs":" Moves a layer to a new position on the screen.","sig":null,"attributes":[{"value":"/ Moves a layer to a new position on the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445355,"byte_end":445405,"line_start":487,"line_end":487,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445410,"byte_end":445413,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445418,"byte_end":445430,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445435,"byte_end":445438,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If `layer` is out of bounds.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445443,"byte_end":445475,"line_start":491,"line_end":491,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446158,"byte_end":446165,"line_start":512,"line_end":512,"column_start":12,"column_end":19},"name":"draw_bg","qualname":"<StackView>::draw_bg","value":"pub fn draw_bg(&Self, &Printer)","parent":null,"children":[],"decl_id":null,"docs":" Background drawing","sig":null,"attributes":[{"value":"/ Background drawing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445917,"byte_end":445939,"line_start":506,"line_end":506,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445944,"byte_end":445947,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Drawing functions are split into forground and background to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":445952,"byte_end":446016,"line_start":508,"line_end":508,"column_start":5,"column_end":69}},{"value":"/ ease inserting layers under the stackview but above its background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446021,"byte_end":446092,"line_start":509,"line_end":509,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446097,"byte_end":446100,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ you probably just want to call draw()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446105,"byte_end":446146,"line_start":511,"line_end":511,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446893,"byte_end":446900,"line_start":532,"line_end":532,"column_start":12,"column_end":19},"name":"draw_fg","qualname":"<StackView>::draw_fg","value":"pub fn draw_fg(&Self, &Printer)","parent":null,"children":[],"decl_id":null,"docs":" Forground drawing","sig":null,"attributes":[{"value":"/ Forground drawing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446653,"byte_end":446674,"line_start":526,"line_end":526,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446679,"byte_end":446682,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Drawing functions are split into forground and background to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446687,"byte_end":446751,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ ease inserting layers under the stackview but above its background.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446756,"byte_end":446827,"line_start":529,"line_end":529,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446832,"byte_end":446835,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ You probably just want to call draw()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":446840,"byte_end":446881,"line_start":531,"line_end":531,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4176},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":454796,"byte_end":454804,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"TextArea","qualname":"::views::text_area::TextArea","value":"TextArea {  }","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4179},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183}],"decl_id":null,"docs":" Multi-lines text editor.","sig":null,"attributes":[{"value":"/ Multi-lines text editor.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":454605,"byte_end":454633,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":454634,"byte_end":454637,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A `TextArea` will attempt to grow vertically and horizontally","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":454638,"byte_end":454703,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ dependent on the content.  Wrap it in a `BoxView` to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":454704,"byte_end":454760,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ constrain its size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":454761,"byte_end":454784,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":455643,"byte_end":455646,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<TextArea>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty TextArea.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty TextArea.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":455597,"byte_end":455631,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":455992,"byte_end":456003,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"get_content","qualname":"<TextArea>::get_content","value":"pub fn get_content(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the content of the view.\n","sig":null,"attributes":[{"value":"/ Retrieves the content of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":455942,"byte_end":455980,"line_start":64,"line_end":64,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4189},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456197,"byte_end":456203,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"cursor","qualname":"<TextArea>::cursor","value":"pub fn cursor(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the cursor in the content string.\n","sig":null,"attributes":[{"value":"/ Returns the position of the cursor in the content string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456124,"byte_end":456185,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4190},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456447,"byte_end":456457,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<TextArea>::set_cursor","value":"pub fn set_cursor(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the given position.","sig":null,"attributes":[{"value":"/ Moves the cursor to the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456253,"byte_end":456296,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456301,"byte_end":456304,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456309,"byte_end":456321,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456326,"byte_end":456329,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This method panics if `cursor` is not the beginning of a character in","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456334,"byte_end":456407,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ the content string.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456412,"byte_end":456435,"line_start":83,"line_end":83,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4191},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456656,"byte_end":456667,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"set_content","qualname":"<TextArea>::set_content","value":"pub fn set_content<S: Into<String>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Sets the content of the view.\n","sig":null,"attributes":[{"value":"/ Sets the content of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":456611,"byte_end":456644,"line_start":91,"line_end":91,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457349,"byte_end":457356,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"content","qualname":"<TextArea>::content","value":"pub fn content<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the content of the view.","sig":null,"attributes":[{"value":"/ Sets the content of the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457269,"byte_end":457302,"line_start":110,"line_end":110,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457307,"byte_end":457310,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457315,"byte_end":457337,"line_start":112,"line_end":112,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457546,"byte_end":457553,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"disable","qualname":"<TextArea>::disable","value":"pub fn disable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457459,"byte_end":457482,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457487,"byte_end":457490,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ A disabled view cannot be selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457495,"byte_end":457534,"line_start":119,"line_end":119,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457678,"byte_end":457686,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"disabled","qualname":"<TextArea>::disabled","value":"pub fn disabled(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457608,"byte_end":457631,"line_start":124,"line_end":124,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457636,"byte_end":457639,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457644,"byte_end":457666,"line_start":126,"line_end":126,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457784,"byte_end":457790,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"enable","qualname":"<TextArea>::enable","value":"pub fn enable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.\n","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457747,"byte_end":457772,"line_start":131,"line_end":131,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457916,"byte_end":457923,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"enabled","qualname":"<TextArea>::enabled","value":"pub fn enabled(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457844,"byte_end":457869,"line_start":136,"line_end":136,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457874,"byte_end":457877,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457882,"byte_end":457904,"line_start":138,"line_end":138,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":458038,"byte_end":458048,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<TextArea>::is_enabled","value":"pub fn is_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view is enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":457983,"byte_end":458026,"line_start":143,"line_end":143,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6327},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475598,"byte_end":475609,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"TextContent","qualname":"::views::text_view::TextContent","value":"TextContent {  }","parent":null,"children":[{"krate":0,"index":6328}],"decl_id":null,"docs":" Provides access to the content of a [`TextView`].","sig":null,"attributes":[{"value":"/ Provides access to the content of a [`TextView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475055,"byte_end":475108,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475109,"byte_end":475112,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Cloning this object will still point to the same content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475113,"byte_end":475174,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475175,"byte_end":475178,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`TextView`]: struct.TextView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475179,"byte_end":475217,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475218,"byte_end":475221,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475222,"byte_end":475236,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475237,"byte_end":475240,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475241,"byte_end":475252,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use cursive::views::{TextView, TextContent};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475253,"byte_end":475303,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ let mut content = TextContent::new(\"content\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475304,"byte_end":475354,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ let view = TextView::new_with_content(content.clone());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475355,"byte_end":475414,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475415,"byte_end":475418,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Later, possibly in a different thread","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475419,"byte_end":475463,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/ content.set_content(\"new content\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475464,"byte_end":475503,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert!(view.get_content().source().contains(\"new\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475504,"byte_end":475561,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475562,"byte_end":475569,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4300},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475787,"byte_end":475790,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<TextContent>::new","value":"pub fn new<S>(S) -> Self where S: Into<StyledString>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new text content around the given value.","sig":null,"attributes":[{"value":"/ Creates a new text content around the given value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475681,"byte_end":475735,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475740,"byte_end":475743,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Parses the given value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475748,"byte_end":475775,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476302,"byte_end":476316,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"TextContentRef","qualname":"::views::text_view::TextContentRef","value":"TextContentRef {  }","parent":null,"children":[{"krate":0,"index":4303}],"decl_id":null,"docs":" A reference to the text content.","sig":null,"attributes":[{"value":"/ A reference to the text content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476077,"byte_end":476113,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476114,"byte_end":476117,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This can be deref'ed into a [`StyledString`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476118,"byte_end":476167,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476168,"byte_end":476171,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`StyledString`]: ../utils/markup/type.StyledString.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476172,"byte_end":476232,"line_start":60,"line_end":60,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476233,"byte_end":476236,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This keeps the content locked. Do not store this!","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476237,"byte_end":476290,"line_start":62,"line_end":62,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476666,"byte_end":476677,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"set_content","qualname":"<TextContent>::set_content","value":"pub fn set_content<S>(&mut Self, S) where S: Into<StyledString>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the content with the given value.\n","sig":null,"attributes":[{"value":"/ Replaces the content with the given value.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476608,"byte_end":476654,"line_start":79,"line_end":79,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476874,"byte_end":476880,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"append","qualname":"<TextContent>::append","value":"pub fn append<S>(&mut Self, S) where S: Into<StyledString>","parent":null,"children":[],"decl_id":null,"docs":" Append `content` to the end of a `TextView`.\n","sig":null,"attributes":[{"value":"/ Append `content` to the end of a `TextView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476814,"byte_end":476862,"line_start":87,"line_end":87,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":477171,"byte_end":477182,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_content","qualname":"<TextContent>::get_content","value":"pub fn get_content(&Self) -> TextContentRef","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the content.","sig":null,"attributes":[{"value":"/ Returns a reference to the content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":477014,"byte_end":477053,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":477058,"byte_end":477061,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This locks the data while the returned value is alive,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":477066,"byte_end":477124,"line_start":97,"line_end":97,"column_start":5,"column_end":63}},{"value":"/ so don't keep it too long.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":477129,"byte_end":477159,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4325},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478767,"byte_end":478775,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"TextView","qualname":"::views::text_view::TextView","value":"TextView {  }","parent":null,"children":[{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4332}],"decl_id":null,"docs":" A simple view showing a fixed text.","sig":null,"attributes":[{"value":"/ A simple view showing a fixed text.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478519,"byte_end":478558,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478559,"byte_end":478562,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478563,"byte_end":478577,"line_start":153,"line_end":153,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478578,"byte_end":478581,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478582,"byte_end":478593,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478594,"byte_end":478621,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"/ # use cursive::views::TextView;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478622,"byte_end":478657,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478658,"byte_end":478693,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478694,"byte_end":478697,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ siv.add_layer(TextView::new(\"Hello world!\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478698,"byte_end":478747,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":478748,"byte_end":478755,"line_start":161,"line_end":161,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479153,"byte_end":479156,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<TextView>::new","value":"pub fn new<S>(S) -> Self where S: Into<StyledString>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TextView with the given content.\n","sig":null,"attributes":[{"value":"/ Creates a new TextView with the given content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479091,"byte_end":479141,"line_start":179,"line_end":179,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4336},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479876,"byte_end":479892,"line_start":203,"line_end":203,"column_start":12,"column_end":28},"name":"new_with_content","qualname":"<TextView>::new_with_content","value":"pub fn new_with_content(TextContent) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TextView using the given `Arc<Mutex<String>>`.","sig":null,"attributes":[{"value":"/ Creates a new TextView using the given `Arc<Mutex<String>>`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479296,"byte_end":479360,"line_start":187,"line_end":187,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479365,"byte_end":479368,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If you kept a clone of the given content, you'll be able to update it","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479373,"byte_end":479446,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ remotely.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479451,"byte_end":479464,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479469,"byte_end":479472,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479477,"byte_end":479491,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479496,"byte_end":479499,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479504,"byte_end":479515,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::{TextView, TextContent};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479520,"byte_end":479570,"line_start":195,"line_end":195,"column_start":5,"column_end":55}},{"value":"/ let mut content = TextContent::new(\"content\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479575,"byte_end":479625,"line_start":196,"line_end":196,"column_start":5,"column_end":55}},{"value":"/ let view = TextView::new_with_content(content.clone());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479630,"byte_end":479689,"line_start":197,"line_end":197,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479694,"byte_end":479697,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // Later, possibly in a different thread","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479702,"byte_end":479746,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/ content.set_content(\"new content\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479751,"byte_end":479790,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/ assert!(view.get_content().source().contains(\"new\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479795,"byte_end":479852,"line_start":201,"line_end":201,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479857,"byte_end":479864,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4337},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480240,"byte_end":480245,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"empty","qualname":"<TextView>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `TextView`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `TextView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480193,"byte_end":480228,"line_start":215,"line_end":215,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4338},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480350,"byte_end":480360,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"set_effect","qualname":"<TextView>::set_effect","value":"pub fn set_effect(&mut Self, Effect)","parent":null,"children":[],"decl_id":null,"docs":" Sets the effect for the entire content.\n","sig":null,"attributes":[{"value":"/ Sets the effect for the entire content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480295,"byte_end":480338,"line_start":220,"line_end":220,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480521,"byte_end":480527,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"effect","qualname":"<TextView>::effect","value":"pub fn effect(Self, Effect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the effect for the entire content.","sig":null,"attributes":[{"value":"/ Sets the effect for the entire content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480431,"byte_end":480474,"line_start":225,"line_end":225,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480479,"byte_end":480482,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480487,"byte_end":480509,"line_start":227,"line_end":227,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480736,"byte_end":480743,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"no_wrap","qualname":"<TextView>::no_wrap","value":"pub fn no_wrap(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables content wrap for this view.","sig":null,"attributes":[{"value":"/ Disables content wrap for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480615,"byte_end":480655,"line_start":232,"line_end":232,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480660,"byte_end":480663,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This may be useful if you want horizontal scrolling.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480668,"byte_end":480724,"line_start":234,"line_end":234,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480952,"byte_end":480968,"line_start":242,"line_end":242,"column_start":12,"column_end":28},"name":"set_content_wrap","qualname":"<TextView>::set_content_wrap","value":"pub fn set_content_wrap(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Controls content wrap for this view.","sig":null,"attributes":[{"value":"/ Controls content wrap for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480820,"byte_end":480860,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480865,"byte_end":480868,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ If `true` (the default), text will wrap long lines when needed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":480873,"byte_end":480940,"line_start":241,"line_end":241,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481091,"byte_end":481098,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"h_align","qualname":"<TextView>::h_align","value":"pub fn h_align(Self, HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the horizontal alignment for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481031,"byte_end":481079,"line_start":246,"line_end":246,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4345},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481239,"byte_end":481246,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"v_align","qualname":"<TextView>::v_align","value":"pub fn v_align(Self, VAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the vertical alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the vertical alignment for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481181,"byte_end":481227,"line_start":253,"line_end":253,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4346},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481378,"byte_end":481383,"line_start":261,"line_end":261,"column_start":12,"column_end":17},"name":"align","qualname":"<TextView>::align","value":"pub fn align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the alignment for this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481329,"byte_end":481366,"line_start":260,"line_end":260,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481539,"byte_end":481545,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"center","qualname":"<TextView>::center","value":"pub fn center(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Center the text horizontally and vertically inside the view.\n","sig":null,"attributes":[{"value":"/ Center the text horizontally and vertically inside the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481463,"byte_end":481527,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481709,"byte_end":481716,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"content","qualname":"<TextView>::content","value":"pub fn content<S>(Self, S) -> Self where S: Into<StyledString>","parent":null,"children":[],"decl_id":null,"docs":" Replace the text in this view.","sig":null,"attributes":[{"value":"/ Replace the text in this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481628,"byte_end":481662,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481667,"byte_end":481670,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481675,"byte_end":481697,"line_start":275,"line_end":275,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481896,"byte_end":481907,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"set_content","qualname":"<TextView>::set_content","value":"pub fn set_content<S>(&mut Self, S) where S: Into<StyledString>","parent":null,"children":[],"decl_id":null,"docs":" Replace the text in this view.\n","sig":null,"attributes":[{"value":"/ Replace the text in this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":481850,"byte_end":481884,"line_start":283,"line_end":283,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4353},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":482142,"byte_end":482148,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"append","qualname":"<TextView>::append","value":"pub fn append<S>(&mut Self, S) where S: Into<StyledString>","parent":null,"children":[],"decl_id":null,"docs":" Append `content` to the end of a `TextView`.\n","sig":null,"attributes":[{"value":"/ Append `content` to the end of a `TextView`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":482082,"byte_end":482130,"line_start":292,"line_end":292,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":482383,"byte_end":482394,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"get_content","qualname":"<TextView>::get_content","value":"pub fn get_content(&Self) -> TextContentRef","parent":null,"children":[],"decl_id":null,"docs":" Returns the current text in this view.\n","sig":null,"attributes":[{"value":"/ Returns the current text in this view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":482329,"byte_end":482371,"line_start":301,"line_end":301,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":482571,"byte_end":482589,"line_start":307,"line_end":307,"column_start":12,"column_end":30},"name":"get_shared_content","qualname":"<TextView>::get_shared_content","value":"pub fn get_shared_content(&mut Self) -> TextContent","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the content, allowing content mutation.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the content, allowing content mutation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":482486,"byte_end":482559,"line_start":306,"line_end":306,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485566,"byte_end":485577,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"TrackedView","qualname":"::views::tracked_view::TrackedView","value":"TrackedView { view }","parent":null,"children":[{"krate":0,"index":4389},{"krate":0,"index":4390}],"decl_id":null,"docs":" Wrapper around a view that remembers its position.\n","sig":null,"attributes":[{"value":"/ Wrapper around a view that remembers its position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485500,"byte_end":485554,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":4389},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485619,"byte_end":485623,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"view","qualname":"::views::tracked_view::TrackedView::view","value":"T","parent":{"krate":0,"index":4387},"children":[],"decl_id":null,"docs":" Wrapped view.\n","sig":null,"attributes":[{"value":"/ Wrapped view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485593,"byte_end":485610,"line_start":9,"line_end":9,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4393},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485801,"byte_end":485807,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"offset","qualname":"<TrackedView<T>>::offset","value":"pub fn offset(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Return the last offset at which the view was drawn.\n","sig":null,"attributes":[{"value":"/ Return the last offset at which the view was drawn.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485734,"byte_end":485789,"line_start":16,"line_end":16,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4394},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485920,"byte_end":485923,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<TrackedView<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TrackedView` around `view`.\n","sig":null,"attributes":[{"value":"/ Creates a new `TrackedView` around `view`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485862,"byte_end":485908,"line_start":21,"line_end":21,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4395},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":486111,"byte_end":486118,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"with_id","qualname":"<TrackedView<T>>::with_id","value":"pub fn with_id(Self, &str) -> IdView<Self>","parent":null,"children":[],"decl_id":null,"docs":" Wraps itself in a `IdView` for easy retrieval.\n","sig":null,"attributes":[{"value":"/ Wraps itself in a `IdView` for easy retrieval.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":486049,"byte_end":486099,"line_start":29,"line_end":29,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486598,"byte_end":486605,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"ViewBox","qualname":"::views::view_box::ViewBox","value":"ViewBox {  }","parent":null,"children":[{"krate":0,"index":4418}],"decl_id":null,"docs":" A boxed `View`.","sig":null,"attributes":[{"value":"/ A boxed `View`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486528,"byte_end":486547,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486548,"byte_end":486551,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It derefs to the wrapped view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486552,"byte_end":486586,"line_start":6,"line_end":6,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4420},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486723,"byte_end":486726,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<ViewBox>::new","value":"pub fn new(Box<dyn View>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ViewBox` around the given boxed view.\n","sig":null,"attributes":[{"value":"/ Creates a new `ViewBox` around the given boxed view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486655,"byte_end":486711,"line_start":12,"line_end":12,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4421},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486828,"byte_end":486833,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"boxed","qualname":"<ViewBox>::boxed","value":"pub fn boxed<T>(T) -> Self where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Box the given view\n","sig":null,"attributes":[{"value":"/ Box the given view","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486794,"byte_end":486816,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486995,"byte_end":487001,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ViewBox>::unwrap","value":"pub fn unwrap(Self) -> Box<dyn View>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner boxed view.\n","sig":null,"attributes":[{"value":"/ Returns the inner boxed view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486950,"byte_end":486983,"line_start":25,"line_end":25,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":488506,"byte_end":488513,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Cursive","qualname":"::cursive::Cursive","value":"Cursive {  }","parent":null,"children":[{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649}],"decl_id":null,"docs":" Central part of the cursive library.","sig":null,"attributes":[{"value":"/ Central part of the cursive library.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":488205,"byte_end":488245,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":488246,"byte_end":488249,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ It initializes ncurses on creation and cleans up on drop.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":488250,"byte_end":488311,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/ To use it, you should populate it with views, layouts and callbacks,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":488312,"byte_end":488384,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ then start the event loop with run().","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":488385,"byte_end":488426,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":488427,"byte_end":488430,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ It uses a list of screen, with one screen active at a time.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":488431,"byte_end":488494,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":4650},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489111,"byte_end":489119,"line_start":57,"line_end":57,"column_start":10,"column_end":18},"name":"ScreenId","qualname":"::cursive::ScreenId","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Identifies a screen in the cursive root.\n","sig":null,"attributes":[{"value":"/ Identifies a screen in the cursive root.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489057,"byte_end":489101,"line_start":56,"line_end":56,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489197,"byte_end":489203,"line_start":60,"line_end":60,"column_start":10,"column_end":16},"name":"CbSink","qualname":"::cursive::CbSink","value":"Sender<Box<dyn CbFunc>>","parent":null,"children":[],"decl_id":null,"docs":" Convenient alias to the result of `Cursive::cb_sink`.\n","sig":null,"attributes":[{"value":"/ Convenient alias to the result of `Cursive::cb_sink`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489130,"byte_end":489187,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489471,"byte_end":489477,"line_start":69,"line_end":69,"column_start":11,"column_end":17},"name":"CbFunc","qualname":"::cursive::CbFunc","value":"CbFunc: Send","parent":null,"children":[{"krate":0,"index":4653}],"decl_id":null,"docs":" Asynchronous callback function trait.","sig":null,"attributes":[{"value":"/ Asynchronous callback function trait.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489232,"byte_end":489273,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489274,"byte_end":489277,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Every `FnOnce(&mut Cursive) -> () + Send` automatically","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489278,"byte_end":489337,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/ implements this.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489338,"byte_end":489358,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489359,"byte_end":489362,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This is a workaround only because `Box<FnOnce()>` is not","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489363,"byte_end":489423,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"/ working and `FnBox` is unstable.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489424,"byte_end":489460,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489521,"byte_end":489529,"line_start":71,"line_end":71,"column_start":8,"column_end":16},"name":"call_box","qualname":"::cursive::CbFunc::call_box","value":"pub fn call_box(Box<Self>, &mut Cursive)","parent":{"krate":0,"index":4652},"children":[],"decl_id":null,"docs":" Calls the function.\n","sig":null,"attributes":[{"value":"/ Calls the function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489490,"byte_end":489513,"line_start":70,"line_end":70,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4658},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490927,"byte_end":490930,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursive>::new","value":"pub fn new<F>(F) -> Self where F: FnOnce() -> Box<dyn backend::Backend>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for `Cursive::try_new` with non-failible init function.","sig":null,"attributes":[{"value":"/ Shortcut for `Cursive::try_new` with non-failible init function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490674,"byte_end":490742,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490747,"byte_end":490750,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ You probably don't want to use this function directly. Instead,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490755,"byte_end":490822,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ `Cursive::default()` or `Cursive::ncurses()` may be what you're","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490827,"byte_end":490894,"line_start":118,"line_end":118,"column_start":5,"column_end":72}},{"value":"/ looking for.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490899,"byte_end":490915,"line_start":119,"line_end":119,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":492151,"byte_end":492158,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Cursive>::try_new","value":"pub fn try_new<F, E>(F) -> Result<Self, E> where F: FnOnce() ->\nResult<Box<dyn backend::Backend>, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Cursive root, and initialize the back-end.","sig":null,"attributes":[{"value":"/ Creates a new Cursive root, and initialize the back-end.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491099,"byte_end":491159,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491164,"byte_end":491167,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ * If you just want a cursive instance, use `Cursive::default()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491172,"byte_end":491240,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ * If you want a specific backend, then:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491245,"byte_end":491288,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/   * `Cursive::ncurses()` if the `ncurses-backend` feature is enabled (it is by default).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491293,"byte_end":491385,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/   * `Cursive::pancurses()` if the `pancurses-backend` feature is enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491390,"byte_end":491467,"line_start":132,"line_end":132,"column_start":5,"column_end":82}},{"value":"/   * `Cursive::termion()` if the `termion-backend` feature is enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491472,"byte_end":491545,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/   * `Cursive::crossterm()` if the `crossterm-backend` feature is enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491550,"byte_end":491627,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/   * `Cursive::blt()` if the `blt-backend` feature is enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491632,"byte_end":491697,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/   * `Cursive::dummy()` for a dummy backend, mostly useful for tests.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491702,"byte_end":491774,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ * If you want to use a third-party backend, then `Cursive::new` is indeed the way to go:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491779,"byte_end":491871,"line_start":137,"line_end":137,"column_start":5,"column_end":97}},{"value":"/   * `Cursive::new(bring::your::own::Backend::new)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491876,"byte_end":491930,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491935,"byte_end":491938,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Examples:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491943,"byte_end":491956,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491961,"byte_end":491964,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491969,"byte_end":491987,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ # use cursive::{Cursive, backend};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":491992,"byte_end":492030,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ let siv = Cursive::new(backend::dummy::Backend::init); // equivalent to Cursive::dummy()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":492035,"byte_end":492127,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":492132,"byte_end":492139,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":493626,"byte_end":493635,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"crossterm","qualname":"<Cursive>::crossterm","value":"pub fn crossterm() -> std::io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Cursive root using a crossterm backend.\n","sig":null,"attributes":[{"value":"/ Creates a new Cursive root using a crossterm backend.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":493515,"byte_end":493572,"line_start":189,"line_end":189,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"crossterm-backend\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":493577,"byte_end":493614,"line_start":190,"line_end":190,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494056,"byte_end":494061,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"name":"dummy","qualname":"<Cursive>::dummy","value":"pub fn dummy() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Cursive root using a dummy backend.","sig":null,"attributes":[{"value":"/ Creates a new Cursive root using a dummy backend.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":493920,"byte_end":493973,"line_start":201,"line_end":201,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":493978,"byte_end":493981,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Nothing will be output. This is mostly here for tests.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":493986,"byte_end":494044,"line_start":203,"line_end":203,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494261,"byte_end":494274,"line_start":211,"line_end":211,"column_start":12,"column_end":25},"name":"set_user_data","qualname":"<Cursive>::set_user_data","value":"pub fn set_user_data<T: Any>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets some data to be stored in Cursive.","sig":null,"attributes":[{"value":"/ Sets some data to be stored in Cursive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494134,"byte_end":494177,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494182,"byte_end":494185,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ It can later on be accessed with `Cursive::user_data()`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494190,"byte_end":494249,"line_start":210,"line_end":210,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494592,"byte_end":494601,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"user_data","qualname":"<Cursive>::user_data","value":"pub fn user_data<T: Any>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to access the user-provided data.","sig":null,"attributes":[{"value":"/ Attempts to access the user-provided data.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494367,"byte_end":494413,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494418,"byte_end":494421,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If some data was set previously with the same type, returns a reference to it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494426,"byte_end":494508,"line_start":217,"line_end":217,"column_start":5,"column_end":87}},{"value":"/ If nothing was set or if the type is different, returns `None`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494513,"byte_end":494580,"line_start":218,"line_end":218,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494905,"byte_end":494919,"line_start":227,"line_end":227,"column_start":12,"column_end":26},"name":"with_user_data","qualname":"<Cursive>::with_user_data","value":"pub fn with_user_data<F, T, R>(&mut Self, F) -> Option<R> where\nF: FnOnce(&mut T) -> R, T: Any","parent":null,"children":[],"decl_id":null,"docs":" Runs the given closure on the stored user data, if any.","sig":null,"attributes":[{"value":"/ Runs the given closure on the stored user data, if any.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494690,"byte_end":494749,"line_start":223,"line_end":223,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494754,"byte_end":494757,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If no user data was supplied, or if the type is different, nothing will be run.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494762,"byte_end":494845,"line_start":225,"line_end":225,"column_start":5,"column_end":88}},{"value":"/ Otherwise, the result will be returned.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":494850,"byte_end":494893,"line_start":226,"line_end":226,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495209,"byte_end":495227,"line_start":238,"line_end":238,"column_start":12,"column_end":30},"name":"show_debug_console","qualname":"<Cursive>::show_debug_console","value":"pub fn show_debug_console(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Show the debug console.","sig":null,"attributes":[{"value":"/ Show the debug console.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495066,"byte_end":495093,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495098,"byte_end":495101,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Currently, this will show logs if [`logger::init()`](crate::logger::init()) was called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495106,"byte_end":495197,"line_start":237,"line_end":237,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495770,"byte_end":495790,"line_start":257,"line_end":257,"column_start":12,"column_end":32},"name":"toggle_debug_console","qualname":"<Cursive>::toggle_debug_console","value":"pub fn toggle_debug_console(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Show the debug console, or hide it if it's already visible.","sig":null,"attributes":[{"value":"/ Show the debug console, or hide it if it's already visible.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495489,"byte_end":495552,"line_start":248,"line_end":248,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495557,"byte_end":495560,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495565,"byte_end":495579,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495584,"byte_end":495587,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495592,"byte_end":495603,"line_start":252,"line_end":252,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495608,"byte_end":495635,"line_start":253,"line_end":253,"column_start":5,"column_end":32}},{"value":"/ # let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495640,"byte_end":495677,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/ siv.add_global_callback('~', Cursive::toggle_debug_console);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495682,"byte_end":495746,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":495751,"byte_end":495758,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496638,"byte_end":496645,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"cb_sink","qualname":"<Cursive>::cb_sink","value":"pub fn cb_sink(&Self) -> &CbSink","parent":null,"children":[],"decl_id":null,"docs":" Returns a sink for asynchronous callbacks.","sig":null,"attributes":[{"value":"/ Returns a sink for asynchronous callbacks.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496019,"byte_end":496065,"line_start":266,"line_end":266,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496070,"byte_end":496073,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns the sender part of a channel, that allows to send","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496078,"byte_end":496139,"line_start":268,"line_end":268,"column_start":5,"column_end":66}},{"value":"/ callbacks to `self` from other threads.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496144,"byte_end":496187,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496192,"byte_end":496195,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Callbacks will be executed in the order","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496200,"byte_end":496243,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ of arrival on the next event cycle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496248,"byte_end":496287,"line_start":272,"line_end":272,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496292,"byte_end":496295,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496300,"byte_end":496314,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496319,"byte_end":496322,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496327,"byte_end":496338,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496343,"byte_end":496370,"line_start":277,"line_end":277,"column_start":5,"column_end":32}},{"value":"/ # use cursive::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496375,"byte_end":496396,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496401,"byte_end":496418,"line_start":279,"line_end":279,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496423,"byte_end":496458,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496463,"byte_end":496466,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ // quit() will be called during the next event cycle","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496471,"byte_end":496527,"line_start":282,"line_end":282,"column_start":5,"column_end":61}},{"value":"/ siv.cb_sink().send(Box::new(|s: &mut Cursive| s.quit())).unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496532,"byte_end":496602,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496607,"byte_end":496614,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496619,"byte_end":496626,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496735,"byte_end":496749,"line_start":291,"line_end":291,"column_start":12,"column_end":26},"name":"select_menubar","qualname":"<Cursive>::select_menubar","value":"pub fn select_menubar(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Selects the menubar.\n","sig":null,"attributes":[{"value":"/ Selects the menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496699,"byte_end":496723,"line_start":290,"line_end":290,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497047,"byte_end":497064,"line_start":299,"line_end":299,"column_start":12,"column_end":29},"name":"set_autohide_menu","qualname":"<Cursive>::set_autohide_menu","value":"pub fn set_autohide_menu(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the menubar autohide feature.","sig":null,"attributes":[{"value":"/ Sets the menubar autohide feature.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496837,"byte_end":496875,"line_start":295,"line_end":295,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496880,"byte_end":496883,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * When enabled (default), the menu is only visible when selected.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496888,"byte_end":496957,"line_start":297,"line_end":297,"column_start":5,"column_end":74}},{"value":"/ * When disabled, the menu is always visible and reserves the top row.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":496962,"byte_end":497035,"line_start":298,"line_end":298,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499006,"byte_end":499013,"line_start":353,"line_end":353,"column_start":12,"column_end":19},"name":"menubar","qualname":"<Cursive>::menubar","value":"pub fn menubar(&mut Self) -> &mut views::Menubar","parent":null,"children":[],"decl_id":null,"docs":" Access the menu tree used by the menubar.","sig":null,"attributes":[{"value":"/ Access the menu tree used by the menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497147,"byte_end":497192,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497197,"byte_end":497200,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This allows to add menu items to the menubar.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497205,"byte_end":497254,"line_start":305,"line_end":305,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497259,"byte_end":497262,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497267,"byte_end":497281,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497286,"byte_end":497289,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497294,"byte_end":497305,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497310,"byte_end":497337,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497342,"byte_end":497347,"line_start":311,"line_end":311,"column_start":5,"column_end":10}},{"value":"/ # use cursive::{Cursive, event};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497352,"byte_end":497388,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/ # use cursive::views::{Dialog};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497393,"byte_end":497428,"line_start":313,"line_end":313,"column_start":5,"column_end":40}},{"value":"/ # use cursive::traits::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497433,"byte_end":497462,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/ # use cursive::menu::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497467,"byte_end":497494,"line_start":315,"line_end":315,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497499,"byte_end":497504,"line_start":316,"line_end":316,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497509,"byte_end":497526,"line_start":317,"line_end":317,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497531,"byte_end":497566,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497571,"byte_end":497574,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ siv.menubar()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497579,"byte_end":497596,"line_start":320,"line_end":320,"column_start":5,"column_end":22}},{"value":"/    .add_subtree(\"File\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497601,"byte_end":497628,"line_start":321,"line_end":321,"column_start":5,"column_end":32}},{"value":"/         MenuTree::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497633,"byte_end":497660,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/             .leaf(\"New\", |s| s.add_layer(Dialog::info(\"New file!\")))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497665,"byte_end":497737,"line_start":323,"line_end":323,"column_start":5,"column_end":77}},{"value":"/             .subtree(\"Recent\", MenuTree::new().with(|tree| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497742,"byte_end":497806,"line_start":324,"line_end":324,"column_start":5,"column_end":69}},{"value":"/                 for i in 1..100 {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497811,"byte_end":497848,"line_start":325,"line_end":325,"column_start":5,"column_end":42}},{"value":"/                     tree.add_leaf(format!(\"Item {}\", i), |_| ())","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497853,"byte_end":497921,"line_start":326,"line_end":326,"column_start":5,"column_end":73}},{"value":"/                 }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497926,"byte_end":497947,"line_start":327,"line_end":327,"column_start":5,"column_end":26}},{"value":"/             }))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497952,"byte_end":497971,"line_start":328,"line_end":328,"column_start":5,"column_end":24}},{"value":"/             .delimiter()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":497976,"byte_end":498004,"line_start":329,"line_end":329,"column_start":5,"column_end":33}},{"value":"/             .with(|tree| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498009,"byte_end":498039,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/                 for i in 1..10 {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498044,"byte_end":498080,"line_start":331,"line_end":331,"column_start":5,"column_end":41}},{"value":"/                     tree.add_leaf(format!(\"Option {}\", i), |_| ());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498085,"byte_end":498156,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/                 }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498161,"byte_end":498182,"line_start":333,"line_end":333,"column_start":5,"column_end":26}},{"value":"/             })","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498187,"byte_end":498205,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/             .delimiter()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498210,"byte_end":498238,"line_start":335,"line_end":335,"column_start":5,"column_end":33}},{"value":"/             .leaf(\"Quit\", |s| s.quit()))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498243,"byte_end":498287,"line_start":336,"line_end":336,"column_start":5,"column_end":49}},{"value":"/    .add_subtree(\"Help\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498292,"byte_end":498319,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/         MenuTree::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498324,"byte_end":498351,"line_start":338,"line_end":338,"column_start":5,"column_end":32}},{"value":"/             .subtree(\"Help\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498356,"byte_end":498388,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/                      MenuTree::new()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498393,"byte_end":498433,"line_start":340,"line_end":340,"column_start":5,"column_end":45}},{"value":"/                          .leaf(\"General\", |s| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498438,"byte_end":498489,"line_start":341,"line_end":341,"column_start":5,"column_end":56}},{"value":"/                              s.add_layer(Dialog::info(\"Help message!\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498494,"byte_end":498569,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/                          })","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498574,"byte_end":498605,"line_start":343,"line_end":343,"column_start":5,"column_end":36}},{"value":"/                          .leaf(\"Online\", |s| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498610,"byte_end":498660,"line_start":344,"line_end":344,"column_start":5,"column_end":55}},{"value":"/                              s.add_layer(Dialog::info(\"Online help?\"))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498665,"byte_end":498739,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/                          }))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498744,"byte_end":498776,"line_start":346,"line_end":346,"column_start":5,"column_end":37}},{"value":"/             .leaf(\"About\",","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498781,"byte_end":498811,"line_start":347,"line_end":347,"column_start":5,"column_end":35}},{"value":"/                   |s| s.add_layer(Dialog::info(\"Cursive v0.0.0\"))));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498816,"byte_end":498888,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498893,"byte_end":498896,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ siv.add_global_callback(event::Key::Esc, |s| s.select_menubar());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498901,"byte_end":498970,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498975,"byte_end":498982,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":498987,"byte_end":498994,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499136,"byte_end":499149,"line_start":358,"line_end":358,"column_start":12,"column_end":25},"name":"current_theme","qualname":"<Cursive>::current_theme","value":"pub fn current_theme(&Self) -> &theme::Theme","parent":null,"children":[],"decl_id":null,"docs":" Returns the currently used theme.\n","sig":null,"attributes":[{"value":"/ Returns the currently used theme.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499087,"byte_end":499124,"line_start":357,"line_end":357,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499246,"byte_end":499255,"line_start":363,"line_end":363,"column_start":12,"column_end":21},"name":"set_theme","qualname":"<Cursive>::set_theme","value":"pub fn set_theme(&mut Self, theme::Theme)","parent":null,"children":[],"decl_id":null,"docs":" Sets the current theme.\n","sig":null,"attributes":[{"value":"/ Sets the current theme.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499207,"byte_end":499234,"line_start":362,"line_end":362,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4683},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499442,"byte_end":499447,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"clear","qualname":"<Cursive>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the screen.","sig":null,"attributes":[{"value":"/ Clears the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499351,"byte_end":499373,"line_start":368,"line_end":368,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499378,"byte_end":499381,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Users rarely have to call this directly.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499386,"byte_end":499430,"line_start":370,"line_end":370,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4684},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499676,"byte_end":499691,"line_start":379,"line_end":379,"column_start":12,"column_end":27},"name":"load_theme_file","qualname":"<Cursive>::load_theme_file","value":"pub fn load_theme_file<P: AsRef<Path>>(&mut Self, P)\n-> Result<(), theme::Error>","parent":null,"children":[],"decl_id":null,"docs":" Loads a theme from the given file.","sig":null,"attributes":[{"value":"/ Loads a theme from the given file.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499566,"byte_end":499604,"line_start":376,"line_end":376,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499609,"byte_end":499612,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ `filename` must point to a valid toml file.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499617,"byte_end":499664,"line_start":378,"line_end":378,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4687},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499968,"byte_end":499977,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"name":"load_toml","qualname":"<Cursive>::load_toml","value":"pub fn load_toml(&mut Self, &str) -> Result<(), theme::Error>","parent":null,"children":[],"decl_id":null,"docs":" Loads a theme from the given string content.","sig":null,"attributes":[{"value":"/ Loads a theme from the given string content.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499864,"byte_end":499912,"line_start":385,"line_end":385,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499917,"byte_end":499920,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Content must be valid toml.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":499925,"byte_end":499956,"line_start":387,"line_end":387,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4689},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500322,"byte_end":500329,"line_start":397,"line_end":397,"column_start":12,"column_end":19},"name":"set_fps","qualname":"<Cursive>::set_fps","value":"pub fn set_fps(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the refresh rate, in frames per second.","sig":null,"attributes":[{"value":"/ Sets the refresh rate, in frames per second.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500114,"byte_end":500162,"line_start":392,"line_end":392,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500167,"byte_end":500170,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Note that the actual frequency is not guaranteed.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500175,"byte_end":500228,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500233,"byte_end":500236,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Between 0 and 30. Call with `fps = 0` to disable (default value).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500241,"byte_end":500310,"line_start":396,"line_end":396,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500579,"byte_end":500594,"line_start":405,"line_end":405,"column_start":12,"column_end":27},"name":"set_autorefresh","qualname":"<Cursive>::set_autorefresh","value":"pub fn set_autorefresh(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables automatic refresh of the screen.","sig":null,"attributes":[{"value":"/ Enables or disables automatic refresh of the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500405,"byte_end":500461,"line_start":401,"line_end":401,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500466,"byte_end":500469,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut to call `set_fps` with `30` or `0` depending on","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500474,"byte_end":500544,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ `autorefresh`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500549,"byte_end":500567,"line_start":404,"line_end":404,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4691},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500761,"byte_end":500767,"line_start":410,"line_end":410,"column_start":12,"column_end":18},"name":"screen","qualname":"<Cursive>::screen","value":"pub fn screen(&Self) -> &views::StackView","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the currently active screen.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the currently active screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500694,"byte_end":500749,"line_start":409,"line_end":409,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4692},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500947,"byte_end":500957,"line_start":416,"line_end":416,"column_start":12,"column_end":22},"name":"screen_mut","qualname":"<Cursive>::screen_mut","value":"pub fn screen_mut(&mut Self) -> &mut views::StackView","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the currently active screen.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the currently active screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":500872,"byte_end":500935,"line_start":415,"line_end":415,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4693},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":501136,"byte_end":501149,"line_start":422,"line_end":422,"column_start":12,"column_end":25},"name":"active_screen","qualname":"<Cursive>::active_screen","value":"pub fn active_screen(&Self) -> ScreenId","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the currently active screen.\n","sig":null,"attributes":[{"value":"/ Returns the id of the currently active screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":501074,"byte_end":501124,"line_start":421,"line_end":421,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4694},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":501263,"byte_end":501273,"line_start":427,"line_end":427,"column_start":12,"column_end":22},"name":"add_screen","qualname":"<Cursive>::add_screen","value":"pub fn add_screen(&mut Self) -> ScreenId","parent":null,"children":[],"decl_id":null,"docs":" Adds a new screen, and returns its ID.\n","sig":null,"attributes":[{"value":"/ Adds a new screen, and returns its ID.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":501209,"byte_end":501251,"line_start":426,"line_end":426,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4695},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":501491,"byte_end":501508,"line_start":434,"line_end":434,"column_start":12,"column_end":29},"name":"add_active_screen","qualname":"<Cursive>::add_active_screen","value":"pub fn add_active_screen(&mut Self) -> ScreenId","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to create a new screen, and set it as active.\n","sig":null,"attributes":[{"value":"/ Convenient method to create a new screen, and set it as active.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":501412,"byte_end":501479,"line_start":433,"line_end":433,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4696},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":501695,"byte_end":501705,"line_start":441,"line_end":441,"column_start":12,"column_end":22},"name":"set_screen","qualname":"<Cursive>::set_screen","value":"pub fn set_screen(&mut Self, ScreenId)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active screen. Panics if no such screen exist.\n","sig":null,"attributes":[{"value":"/ Sets the active screen. Panics if no such screen exist.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":501624,"byte_end":501683,"line_start":440,"line_end":440,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4697},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502980,"byte_end":502987,"line_start":485,"line_end":485,"column_start":12,"column_end":19},"name":"call_on","qualname":"<Cursive>::call_on","value":"pub fn call_on<V, F, R>(&mut Self, &view::Selector, F) -> Option<R> where\nV: View + Any, F: FnOnce(&mut V) -> R","parent":null,"children":[],"decl_id":null,"docs":" Tries to find the view pointed to by the given selector.","sig":null,"attributes":[{"value":"/ Tries to find the view pointed to by the given selector.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502049,"byte_end":502109,"line_start":453,"line_end":453,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502114,"byte_end":502117,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Runs a closure on the view once it's found, and return the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502122,"byte_end":502184,"line_start":455,"line_end":455,"column_start":5,"column_end":67}},{"value":"/ result.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502189,"byte_end":502200,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502205,"byte_end":502208,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ If the view is not found, or if it is not of the asked type,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502213,"byte_end":502277,"line_start":458,"line_end":458,"column_start":5,"column_end":69}},{"value":"/ returns None.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502282,"byte_end":502299,"line_start":459,"line_end":459,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502304,"byte_end":502307,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502312,"byte_end":502326,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502331,"byte_end":502334,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502339,"byte_end":502350,"line_start":463,"line_end":463,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502355,"byte_end":502382,"line_start":464,"line_end":464,"column_start":5,"column_end":32}},{"value":"/ # use cursive::{Cursive, views, view};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502387,"byte_end":502429,"line_start":465,"line_end":465,"column_start":5,"column_end":47}},{"value":"/ # use cursive::traits::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502434,"byte_end":502463,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502468,"byte_end":502485,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502490,"byte_end":502505,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/     let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502510,"byte_end":502549,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502554,"byte_end":502557,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     siv.add_layer(views::TextView::new(\"Text #1\").with_id(\"text\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502562,"byte_end":502633,"line_start":471,"line_end":471,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502638,"byte_end":502641,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     siv.add_global_callback('p', |s| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502646,"byte_end":502688,"line_start":473,"line_end":473,"column_start":5,"column_end":47}},{"value":"/         s.call_on(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502693,"byte_end":502715,"line_start":474,"line_end":474,"column_start":5,"column_end":27}},{"value":"/             &view::Selector::Id(\"text\"),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502720,"byte_end":502764,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/             |view: &mut views::TextView| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502769,"byte_end":502815,"line_start":476,"line_end":476,"column_start":5,"column_end":51}},{"value":"/                 view.set_content(\"Text #2\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502820,"byte_end":502868,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/             },","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502873,"byte_end":502891,"line_start":478,"line_end":478,"column_start":5,"column_end":23}},{"value":"/         );","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502896,"byte_end":502910,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502915,"byte_end":502926,"line_start":480,"line_end":480,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502931,"byte_end":502934,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502939,"byte_end":502944,"line_start":482,"line_end":482,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502949,"byte_end":502956,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":502961,"byte_end":502968,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503903,"byte_end":503913,"line_start":518,"line_end":518,"column_start":12,"column_end":22},"name":"call_on_id","qualname":"<Cursive>::call_on_id","value":"pub fn call_on_id<V, F, R>(&mut Self, &str, F) -> Option<R> where V: View +\nAny, F: FnOnce(&mut V) -> R","parent":null,"children":[],"decl_id":null,"docs":" Tries to find the view identified by the given id.","sig":null,"attributes":[{"value":"/ Tries to find the view identified by the given id.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503206,"byte_end":503260,"line_start":495,"line_end":495,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503265,"byte_end":503268,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Convenient method to use `call_on` with a `view::Selector::Id`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503273,"byte_end":503340,"line_start":497,"line_end":497,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503345,"byte_end":503348,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503353,"byte_end":503367,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503372,"byte_end":503375,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503380,"byte_end":503391,"line_start":501,"line_end":501,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503396,"byte_end":503423,"line_start":502,"line_end":502,"column_start":5,"column_end":32}},{"value":"/ # use cursive::{Cursive, views};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503428,"byte_end":503464,"line_start":503,"line_end":503,"column_start":5,"column_end":41}},{"value":"/ # use cursive::traits::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503469,"byte_end":503498,"line_start":504,"line_end":504,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503503,"byte_end":503520,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503525,"byte_end":503560,"line_start":506,"line_end":506,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503565,"byte_end":503568,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ siv.add_layer(views::TextView::new(\"Text #1\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503573,"byte_end":503622,"line_start":508,"line_end":508,"column_start":5,"column_end":54}},{"value":"/                               .with_id(\"text\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503627,"byte_end":503679,"line_start":509,"line_end":509,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503684,"byte_end":503687,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ siv.add_global_callback('p', |s| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503692,"byte_end":503730,"line_start":511,"line_end":511,"column_start":5,"column_end":43}},{"value":"/     s.call_on_id(\"text\", |view: &mut views::TextView| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503735,"byte_end":503794,"line_start":512,"line_end":512,"column_start":5,"column_end":64}},{"value":"/         view.set_content(\"Text #2\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503799,"byte_end":503839,"line_start":513,"line_end":513,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503844,"byte_end":503855,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503860,"byte_end":503867,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503872,"byte_end":503879,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":503884,"byte_end":503891,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4705},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505869,"byte_end":505876,"line_start":571,"line_end":571,"column_start":12,"column_end":19},"name":"find_id","qualname":"<Cursive>::find_id","value":"pub fn find_id<V>(&mut Self, &str) -> Option<views::ViewRef<V>> where\nV: View + Any","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to find a view wrapped in [`IdView`].","sig":null,"attributes":[{"value":"/ Convenient method to find a view wrapped in [`IdView`].","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504108,"byte_end":504167,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504172,"byte_end":504175,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This looks for a `IdView<V>` with the given ID, and return","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504180,"byte_end":504242,"line_start":528,"line_end":528,"column_start":5,"column_end":67}},{"value":"/ a [`ViewRef`] to the wrapped view. The `ViewRef` implements","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504247,"byte_end":504310,"line_start":529,"line_end":529,"column_start":5,"column_end":68}},{"value":"/ `DerefMut<Target=T>`, so you can treat it just like a `&mut T`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504315,"byte_end":504382,"line_start":530,"line_end":530,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504387,"byte_end":504390,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504395,"byte_end":504409,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504414,"byte_end":504417,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504422,"byte_end":504433,"line_start":534,"line_end":534,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504438,"byte_end":504465,"line_start":535,"line_end":535,"column_start":5,"column_end":32}},{"value":"/ # use cursive::views::{TextView, ViewRef};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504470,"byte_end":504516,"line_start":536,"line_end":536,"column_start":5,"column_end":51}},{"value":"/ # let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504521,"byte_end":504558,"line_start":537,"line_end":537,"column_start":5,"column_end":42}},{"value":"/ use cursive::traits::Identifiable;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504563,"byte_end":504601,"line_start":538,"line_end":538,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504606,"byte_end":504609,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ siv.add_layer(TextView::new(\"foo\").with_id(\"id\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504614,"byte_end":504668,"line_start":540,"line_end":540,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504673,"byte_end":504676,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ // Could be called in a callback","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504681,"byte_end":504717,"line_start":542,"line_end":542,"column_start":5,"column_end":41}},{"value":"/ let mut view: ViewRef<TextView> = siv.find_id(\"id\").unwrap();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504722,"byte_end":504787,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ view.set_content(\"bar\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504792,"byte_end":504820,"line_start":544,"line_end":544,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504825,"byte_end":504832,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504837,"byte_end":504840,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ Note that you must specify the exact type for the view you're after; for example, using the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504845,"byte_end":504940,"line_start":547,"line_end":547,"column_start":5,"column_end":100}},{"value":"/ wrong item type in a `SelectView` will not find anything:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":504945,"byte_end":505006,"line_start":548,"line_end":548,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505011,"byte_end":505014,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505019,"byte_end":505030,"line_start":550,"line_end":550,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505035,"byte_end":505062,"line_start":551,"line_end":551,"column_start":5,"column_end":32}},{"value":"/ # use cursive::views::{SelectView};","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505067,"byte_end":505106,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/ # let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505111,"byte_end":505148,"line_start":553,"line_end":553,"column_start":5,"column_end":42}},{"value":"/ use cursive::traits::Identifiable;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505153,"byte_end":505191,"line_start":554,"line_end":554,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505196,"byte_end":505199,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ let select = SelectView::new().item(\"zero\", 0u32).item(\"one\", 1u32);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505204,"byte_end":505276,"line_start":556,"line_end":556,"column_start":5,"column_end":77}},{"value":"/ siv.add_layer(select.with_id(\"select\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505281,"byte_end":505325,"line_start":557,"line_end":557,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505330,"byte_end":505333,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ // Specifying a wrong type will not return anything.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505338,"byte_end":505394,"line_start":559,"line_end":559,"column_start":5,"column_end":61}},{"value":"/ assert!(siv.find_id::<SelectView<String>>(\"select\").is_none());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505399,"byte_end":505466,"line_start":560,"line_end":560,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505471,"byte_end":505474,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ // Omitting the type will use the default type, in this case `String`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505479,"byte_end":505553,"line_start":562,"line_end":562,"column_start":5,"column_end":79}},{"value":"/ assert!(siv.find_id::<SelectView>(\"select\").is_none());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505558,"byte_end":505617,"line_start":563,"line_end":563,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505622,"byte_end":505625,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ // But with the correct type, it works fine.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505630,"byte_end":505678,"line_start":565,"line_end":565,"column_start":5,"column_end":53}},{"value":"/ assert!(siv.find_id::<SelectView<u32>>(\"select\").is_some());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505683,"byte_end":505747,"line_start":566,"line_end":566,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505752,"byte_end":505759,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505764,"byte_end":505767,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ [`IdView`]: views/struct.IdView.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505772,"byte_end":505812,"line_start":569,"line_end":569,"column_start":5,"column_end":45}},{"value":"/ [`ViewRef`]: views/type.ViewRef.html","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":505817,"byte_end":505857,"line_start":570,"line_end":570,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4707},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506179,"byte_end":506187,"line_start":581,"line_end":581,"column_start":12,"column_end":20},"name":"focus_id","qualname":"<Cursive>::focus_id","value":"pub fn focus_id(&mut Self, &str) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the focus to the view identified by `id`.","sig":null,"attributes":[{"value":"/ Moves the focus to the view identified by `id`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506037,"byte_end":506088,"line_start":578,"line_end":578,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506093,"byte_end":506096,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Convenient method to call `focus` with a `view::Selector::Id`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506101,"byte_end":506167,"line_start":580,"line_end":580,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4708},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506348,"byte_end":506353,"line_start":586,"line_end":586,"column_start":12,"column_end":17},"name":"focus","qualname":"<Cursive>::focus","value":"pub fn focus(&mut Self, &view::Selector) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the focus to the view identified by `sel`.\n","sig":null,"attributes":[{"value":"/ Moves the focus to the view identified by `sel`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506284,"byte_end":506336,"line_start":585,"line_end":585,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506840,"byte_end":506859,"line_start":605,"line_end":605,"column_start":12,"column_end":31},"name":"add_global_callback","qualname":"<Cursive>::add_global_callback","value":"pub fn add_global_callback<F, E: Into<Event>>(&mut Self, E, F) where\nF: FnMut(&mut Cursive) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Adds a global callback.","sig":null,"attributes":[{"value":"/ Adds a global callback.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506464,"byte_end":506491,"line_start":590,"line_end":590,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506496,"byte_end":506499,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Will be triggered on the given key press when no view catches it.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506504,"byte_end":506573,"line_start":592,"line_end":592,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506578,"byte_end":506581,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506586,"byte_end":506600,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506605,"byte_end":506608,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506613,"byte_end":506624,"line_start":596,"line_end":596,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506629,"byte_end":506656,"line_start":597,"line_end":597,"column_start":5,"column_end":32}},{"value":"/ # use cursive::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506661,"byte_end":506682,"line_start":598,"line_end":598,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506687,"byte_end":506704,"line_start":599,"line_end":599,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506709,"byte_end":506744,"line_start":600,"line_end":600,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506749,"byte_end":506752,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ siv.add_global_callback('q', |s| s.quit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506757,"byte_end":506804,"line_start":602,"line_end":602,"column_start":5,"column_end":52}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506809,"byte_end":506816,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":506821,"byte_end":506828,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4712},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507480,"byte_end":507502,"line_start":629,"line_end":629,"column_start":12,"column_end":34},"name":"clear_global_callbacks","qualname":"<Cursive>::clear_global_callbacks","value":"pub fn clear_global_callbacks<E>(&mut Self, E) where E: Into<Event>","parent":null,"children":[],"decl_id":null,"docs":" Removes any callback tied to the given event.","sig":null,"attributes":[{"value":"/ Removes any callback tied to the given event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507123,"byte_end":507172,"line_start":615,"line_end":615,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507177,"byte_end":507180,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507185,"byte_end":507199,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507204,"byte_end":507207,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507212,"byte_end":507223,"line_start":619,"line_end":619,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507228,"byte_end":507255,"line_start":620,"line_end":620,"column_start":5,"column_end":32}},{"value":"/ # use cursive::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507260,"byte_end":507281,"line_start":621,"line_end":621,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507286,"byte_end":507303,"line_start":622,"line_end":622,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507308,"byte_end":507343,"line_start":623,"line_end":623,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507348,"byte_end":507351,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ siv.add_global_callback('q', |s| s.quit());","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507356,"byte_end":507403,"line_start":625,"line_end":625,"column_start":5,"column_end":52}},{"value":"/ siv.clear_global_callbacks('q');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507408,"byte_end":507444,"line_start":626,"line_end":626,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507449,"byte_end":507456,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507461,"byte_end":507468,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4714},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507972,"byte_end":507981,"line_start":650,"line_end":650,"column_start":12,"column_end":21},"name":"add_layer","qualname":"<Cursive>::add_layer","value":"pub fn add_layer<T>(&mut Self, T) where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Add a layer to the current screen.","sig":null,"attributes":[{"value":"/ Add a layer to the current screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507658,"byte_end":507696,"line_start":637,"line_end":637,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507701,"byte_end":507704,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507709,"byte_end":507723,"line_start":639,"line_end":639,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507728,"byte_end":507731,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507736,"byte_end":507747,"line_start":641,"line_end":641,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507752,"byte_end":507779,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/ # use cursive::*;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507784,"byte_end":507805,"line_start":643,"line_end":643,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507810,"byte_end":507827,"line_start":644,"line_end":644,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507832,"byte_end":507867,"line_start":645,"line_end":645,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507872,"byte_end":507875,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ siv.add_layer(views::TextView::new(\"Hello world!\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507880,"byte_end":507936,"line_start":647,"line_end":647,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507941,"byte_end":507948,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":507953,"byte_end":507960,"line_start":649,"line_end":649,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4716},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":508218,"byte_end":508238,"line_start":660,"line_end":660,"column_start":12,"column_end":32},"name":"add_fullscreen_layer","qualname":"<Cursive>::add_fullscreen_layer","value":"pub fn add_fullscreen_layer<T>(&mut Self, T) where T: IntoBoxedView","parent":null,"children":[],"decl_id":null,"docs":" Adds a new full-screen layer to the current screen.","sig":null,"attributes":[{"value":"/ Adds a new full-screen layer to the current screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":508101,"byte_end":508156,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":508161,"byte_end":508164,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Fullscreen layers have no shadow.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":508169,"byte_end":508206,"line_start":659,"line_end":659,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4718},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":508445,"byte_end":508454,"line_start":668,"line_end":668,"column_start":12,"column_end":21},"name":"pop_layer","qualname":"<Cursive>::pop_layer","value":"pub fn pop_layer(&mut Self) -> Option<Box<dyn View>>","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to remove a layer from the current screen.\n","sig":null,"attributes":[{"value":"/ Convenient method to remove a layer from the current screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":508369,"byte_end":508433,"line_start":667,"line_end":667,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4719},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":508605,"byte_end":508621,"line_start":673,"line_end":673,"column_start":12,"column_end":28},"name":"reposition_layer","qualname":"<Cursive>::reposition_layer","value":"pub fn reposition_layer(&mut Self, LayerPosition, Position)","parent":null,"children":[],"decl_id":null,"docs":" Convenient stub forwarding layer repositioning.\n","sig":null,"attributes":[{"value":"/ Convenient stub forwarding layer repositioning.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":508542,"byte_end":508593,"line_start":672,"line_end":672,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":509377,"byte_end":509385,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"on_event","qualname":"<Cursive>::on_event","value":"pub fn on_event(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Processes an event.","sig":null,"attributes":[{"value":"/ Processes an event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":509146,"byte_end":509169,"line_start":691,"line_end":691,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":509174,"byte_end":509177,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ * If the menubar is active, it will be handled the event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":509182,"byte_end":509243,"line_start":693,"line_end":693,"column_start":5,"column_end":66}},{"value":"/ * The view tree will be handled the event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":509248,"byte_end":509294,"line_start":694,"line_end":694,"column_start":5,"column_end":51}},{"value":"/ * If ignored, global_callbacks will be checked for this event.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":509299,"byte_end":509365,"line_start":695,"line_end":695,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":510701,"byte_end":510712,"line_start":738,"line_end":738,"column_start":12,"column_end":23},"name":"screen_size","qualname":"<Cursive>::screen_size","value":"pub fn screen_size(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the screen, in characters.\n","sig":null,"attributes":[{"value":"/ Returns the size of the screen, in characters.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":510639,"byte_end":510689,"line_start":737,"line_end":737,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4725},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512172,"byte_end":512182,"line_start":784,"line_end":784,"column_start":12,"column_end":22},"name":"is_running","qualname":"<Cursive>::is_running","value":"pub fn is_running(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` until [`quit(&mut self)`] is called.","sig":null,"attributes":[{"value":"/ Returns `true` until [`quit(&mut self)`] is called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512055,"byte_end":512110,"line_start":781,"line_end":781,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512115,"byte_end":512118,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ [`quit(&mut self)`]: #method.quit","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512123,"byte_end":512160,"line_start":783,"line_end":783,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4726},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512645,"byte_end":512648,"line_start":800,"line_end":800,"column_start":12,"column_end":15},"name":"run","qualname":"<Cursive>::run","value":"pub fn run(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Runs the event loop.","sig":null,"attributes":[{"value":"/ Runs the event loop.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512232,"byte_end":512256,"line_start":788,"line_end":788,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512261,"byte_end":512264,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ It will wait for user input (key presses)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512269,"byte_end":512314,"line_start":790,"line_end":790,"column_start":5,"column_end":50}},{"value":"/ and trigger callbacks accordingly.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512319,"byte_end":512357,"line_start":791,"line_end":791,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512362,"byte_end":512365,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Calls [`step(&mut self)`] until [`quit(&mut self)`] is called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512370,"byte_end":512436,"line_start":793,"line_end":793,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512441,"byte_end":512444,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ After this function returns, you can call","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512449,"byte_end":512494,"line_start":795,"line_end":795,"column_start":5,"column_end":50}},{"value":"/ it again and it will start a new loop.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512499,"byte_end":512541,"line_start":796,"line_end":796,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512546,"byte_end":512549,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`step(&mut self)`]: #method.step","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512554,"byte_end":512591,"line_start":798,"line_end":798,"column_start":5,"column_end":42}},{"value":"/ [`quit(&mut self)`]: #method.quit","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512596,"byte_end":512633,"line_start":799,"line_end":799,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4727},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":513198,"byte_end":513202,"line_start":820,"line_end":820,"column_start":12,"column_end":16},"name":"step","qualname":"<Cursive>::step","value":"pub fn step(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs a single step from the event loop.","sig":null,"attributes":[{"value":"/ Performs a single step from the event loop.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512834,"byte_end":512881,"line_start":811,"line_end":811,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512886,"byte_end":512889,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ Useful if you need tighter control on the event loop.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512894,"byte_end":512951,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ Otherwise, [`run(&mut self)`] might be more convenient.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":512956,"byte_end":513015,"line_start":814,"line_end":814,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":513020,"byte_end":513023,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if an input event or callback was received","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":513028,"byte_end":513089,"line_start":816,"line_end":816,"column_start":5,"column_end":66}},{"value":"/ during this step, and `false` otherwise.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":513094,"byte_end":513138,"line_start":817,"line_end":817,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":513143,"byte_end":513146,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ [`run(&mut self)`]: #method.run","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":513151,"byte_end":513186,"line_start":819,"line_end":819,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":514586,"byte_end":514593,"line_start":867,"line_end":867,"column_start":12,"column_end":19},"name":"refresh","qualname":"<Cursive>::refresh","value":"pub fn refresh(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Refresh the screen with the current view tree state.\n","sig":null,"attributes":[{"value":"/ Refresh the screen with the current view tree state.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":514518,"byte_end":514574,"line_start":866,"line_end":866,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4731},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515001,"byte_end":515005,"line_start":882,"line_end":882,"column_start":12,"column_end":16},"name":"quit","qualname":"<Cursive>::quit","value":"pub fn quit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops the event loop.\n","sig":null,"attributes":[{"value":"/ Stops the event loop.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":514964,"byte_end":514989,"line_start":881,"line_end":881,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4732},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515097,"byte_end":515101,"line_start":887,"line_end":887,"column_start":12,"column_end":16},"name":"noop","qualname":"<Cursive>::noop","value":"pub fn noop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Does not do anything.\n","sig":null,"attributes":[{"value":"/ Does not do anything.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515060,"byte_end":515085,"line_start":886,"line_end":886,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4733},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515236,"byte_end":515248,"line_start":894,"line_end":894,"column_start":12,"column_end":24},"name":"backend_name","qualname":"<Cursive>::backend_name","value":"pub fn backend_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the backend used.","sig":null,"attributes":[{"value":"/ Return the name of the backend used.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515141,"byte_end":515181,"line_start":891,"line_end":891,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515186,"byte_end":515189,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ Mostly used for debugging.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515194,"byte_end":515224,"line_start":893,"line_end":893,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6343},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516080,"byte_end":516087,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"Printer","qualname":"::printer::Printer","value":"Printer { offset, output_size, size, content_offset, focused, enabled, theme }","parent":null,"children":[{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6353}],"decl_id":null,"docs":" Convenient interface to draw on a subset of the screen.","sig":null,"attributes":[{"value":"/ Convenient interface to draw on a subset of the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":515831,"byte_end":515890,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":515891,"byte_end":515894,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The area it can print on is defined by `offset` and `size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":515895,"byte_end":515958,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":515959,"byte_end":515962,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The part of the content it will print is defined by `content_offset`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":515963,"byte_end":516035,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ and `size`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516036,"byte_end":516051,"line_start":21,"line_end":21,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":6346},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516249,"byte_end":516255,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"offset","qualname":"::printer::Printer::offset","value":"xy::XY<usize>","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" Offset into the window this printer should start drawing at.","sig":null,"attributes":[{"value":"/ Offset into the window this printer should start drawing at.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516102,"byte_end":516166,"line_start":24,"line_end":24,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516171,"byte_end":516174,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ A print request at `x` will really print at `x + offset`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516179,"byte_end":516240,"line_start":26,"line_end":26,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6347},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516496,"byte_end":516507,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"name":"output_size","qualname":"::printer::Printer::output_size","value":"xy::XY<usize>","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" Size of the area we are allowed to draw on.","sig":null,"attributes":[{"value":"/ Size of the area we are allowed to draw on.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516268,"byte_end":516315,"line_start":29,"line_end":29,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516320,"byte_end":516323,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Anything outside of this should be discarded.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516328,"byte_end":516377,"line_start":31,"line_end":31,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516382,"byte_end":516385,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The view being drawn can ingore this, but anything further than that","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516390,"byte_end":516462,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ will be ignored.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516467,"byte_end":516487,"line_start":34,"line_end":34,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6348},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516667,"byte_end":516671,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"size","qualname":"::printer::Printer::size","value":"xy::XY<usize>","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" Size allocated to the view.","sig":null,"attributes":[{"value":"/ Size allocated to the view.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516520,"byte_end":516551,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516556,"byte_end":516559,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This should be the same value as the one given in the last call to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516564,"byte_end":516634,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/ `View::layout`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516639,"byte_end":516658,"line_start":40,"line_end":40,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":6349},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516977,"byte_end":516991,"line_start":49,"line_end":49,"column_start":9,"column_end":23},"name":"content_offset","qualname":"::printer::Printer::content_offset","value":"xy::XY<usize>","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" Offset into the view for this printer.","sig":null,"attributes":[{"value":"/ Offset into the view for this printer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516684,"byte_end":516726,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516731,"byte_end":516734,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The view being drawn can ignore this, but anything to the top-left of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516739,"byte_end":516812,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ this will actually be ignored, so it can be used to skip this part.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516817,"byte_end":516888,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516893,"byte_end":516896,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ A print request `x`, will really print at `x - content_offset`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":516901,"byte_end":516968,"line_start":48,"line_end":48,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":6350},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517070,"byte_end":517077,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"focused","qualname":"::printer::Printer::focused","value":"bool","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" Whether the view to draw is currently focused or not.\n","sig":null,"attributes":[{"value":"/ Whether the view to draw is currently focused or not.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517004,"byte_end":517061,"line_start":51,"line_end":51,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6351},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517156,"byte_end":517163,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"name":"enabled","qualname":"::printer::Printer::enabled","value":"bool","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" Whether the view to draw is currently enabled or not.\n","sig":null,"attributes":[{"value":"/ Whether the view to draw is currently enabled or not.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517090,"byte_end":517147,"line_start":54,"line_end":54,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6352},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517209,"byte_end":517214,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"theme","qualname":"::printer::Printer::theme","value":"&'a theme::Theme","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" Currently used theme\n","sig":null,"attributes":[{"value":"/ Currently used theme","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517176,"byte_end":517200,"line_start":57,"line_end":57,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4790},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517465,"byte_end":517468,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<Printer>::new","value":"pub fn new<T: Into<Vec2>>(T, &'a Theme, &'b dyn Backend) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new printer on the given window.","sig":null,"attributes":[{"value":"/ Creates a new printer on the given window.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517341,"byte_end":517387,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517392,"byte_end":517395,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ But nobody needs to know that.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517400,"byte_end":517434,"line_start":67,"line_end":67,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4792},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517997,"byte_end":518002,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"clear","qualname":"<Printer>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the screen.","sig":null,"attributes":[{"value":"/ Clear the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517852,"byte_end":517873,"line_start":85,"line_end":85,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517878,"byte_end":517881,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ It will discard anything drawn before.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517886,"byte_end":517928,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517933,"byte_end":517936,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Users rarely need to call this directly.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517941,"byte_end":517985,"line_start":89,"line_end":89,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4793},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":518172,"byte_end":518184,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"print_styled","qualname":"<Printer>::print_styled","value":"pub fn print_styled<S>(&Self, S, crate::utils::span::SpannedStr<, Style>)\nwhere S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Prints some styled text at the given position.\n","sig":null,"attributes":[{"value":"/ Prints some styled text at the given position.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":518110,"byte_end":518160,"line_start":95,"line_end":95,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4797},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":518777,"byte_end":518782,"line_start":113,"line_end":113,"column_start":12,"column_end":17},"name":"print","qualname":"<Printer>::print","value":"pub fn print<S: Into<Vec2>>(&Self, S, &str)","parent":null,"children":[],"decl_id":null,"docs":" Prints some text at the given position\n","sig":null,"attributes":[{"value":"/ Prints some text at the given position","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":518723,"byte_end":518765,"line_start":112,"line_end":112,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":522111,"byte_end":522122,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"print_vline","qualname":"<Printer>::print_vline","value":"pub fn print_vline<T: Into<Vec2>>(&Self, T, usize, &str)","parent":null,"children":[],"decl_id":null,"docs":" Prints a vertical line using the given character.\n","sig":null,"attributes":[{"value":"/ Prints a vertical line using the given character.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":522046,"byte_end":522099,"line_start":198,"line_end":198,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":523317,"byte_end":523327,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"print_line","qualname":"<Printer>::print_line","value":"pub fn print_line<T: Into<Vec2>>(&Self, Orientation, T, usize, &str)","parent":null,"children":[],"decl_id":null,"docs":" Prints a line using the given character.\n","sig":null,"attributes":[{"value":"/ Prints a line using the given character.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":523261,"byte_end":523305,"line_start":235,"line_end":235,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":523691,"byte_end":523702,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"print_hline","qualname":"<Printer>::print_hline","value":"pub fn print_hline<T: Into<Vec2>>(&Self, T, usize, &str)","parent":null,"children":[],"decl_id":null,"docs":" Prints a horizontal line using the given character.\n","sig":null,"attributes":[{"value":"/ Prints a horizontal line using the given character.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":523624,"byte_end":523679,"line_start":245,"line_end":245,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4808},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525255,"byte_end":525265,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"with_color","qualname":"<Printer>::with_color","value":"pub fn with_color<F>(&Self, ColorStyle, F) where F: FnOnce(&Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a colored printer,\n that will apply the given color on prints.","sig":null,"attributes":[{"value":"/ Call the given closure with a colored printer,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524693,"byte_end":524743,"line_start":276,"line_end":276,"column_start":5,"column_end":55}},{"value":"/ that will apply the given color on prints.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524748,"byte_end":524794,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524799,"byte_end":524802,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524807,"byte_end":524821,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524826,"byte_end":524829,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524834,"byte_end":524845,"line_start":281,"line_end":281,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Printer;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524850,"byte_end":524877,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/ # use cursive::theme;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524882,"byte_end":524907,"line_start":283,"line_end":283,"column_start":5,"column_end":30}},{"value":"/ # use cursive::backend;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524912,"byte_end":524939,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/ # let b = backend::dummy::Backend::init();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524944,"byte_end":524990,"line_start":285,"line_end":285,"column_start":5,"column_end":51}},{"value":"/ # let t = theme::load_default();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":524995,"byte_end":525031,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/ # let printer = Printer::new((6,4), &t, &*b);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525036,"byte_end":525085,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/ printer.with_color(theme::ColorStyle::highlight(), |printer| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525090,"byte_end":525156,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"/     printer.print((0,0), \"This text is highlighted!\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525161,"byte_end":525219,"line_start":289,"line_end":289,"column_start":5,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525224,"byte_end":525231,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525236,"byte_end":525243,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4810},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525601,"byte_end":525611,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"with_style","qualname":"<Printer>::with_style","value":"pub fn with_style<F, T>(&Self, T, F) where F: FnOnce(&Printer) -> (),\nT: Into<Style>","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a styled printer,\n that will apply the given style on prints.\n","sig":null,"attributes":[{"value":"/ Call the given closure with a styled printer,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525489,"byte_end":525538,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/ that will apply the given style on prints.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":525543,"byte_end":525589,"line_start":302,"line_end":302,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4814},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526169,"byte_end":526180,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"with_effect","qualname":"<Printer>::with_effect","value":"pub fn with_effect<F>(&Self, Effect, F) where F: FnOnce(&Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a modified printer\n that will apply the given effect on prints.\n","sig":null,"attributes":[{"value":"/ Call the given closure with a modified printer","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526055,"byte_end":526105,"line_start":322,"line_end":322,"column_start":5,"column_end":55}},{"value":"/ that will apply the given effect on prints.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526110,"byte_end":526157,"line_start":323,"line_end":323,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4816},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526491,"byte_end":526501,"line_start":335,"line_end":335,"column_start":12,"column_end":22},"name":"with_theme","qualname":"<Printer>::with_theme","value":"pub fn with_theme<F>(&Self, &Theme, F) where F: FnOnce(&Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a modified printer\n that will apply the given theme on prints.\n","sig":null,"attributes":[{"value":"/ Call the given closure with a modified printer","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526378,"byte_end":526428,"line_start":333,"line_end":333,"column_start":5,"column_end":55}},{"value":"/ that will apply the given theme on prints.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526433,"byte_end":526479,"line_start":334,"line_end":334,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4818},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526690,"byte_end":526695,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"theme","qualname":"<Printer>::theme","value":"pub fn theme<'c>(&Self, &'c Theme) -> Printer where 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" Create a new sub-printer with the given theme.\n","sig":null,"attributes":[{"value":"/ Create a new sub-printer with the given theme.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526628,"byte_end":526678,"line_start":342,"line_end":342,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4820},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526976,"byte_end":526988,"line_start":355,"line_end":355,"column_start":12,"column_end":24},"name":"with_effects","qualname":"<Printer>::with_effects","value":"pub fn with_effects<F>(&Self, EnumSet<Effect>, F) where F: FnOnce(&Printer) ->\n()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a modified printer\n that will apply each given effect on prints.\n","sig":null,"attributes":[{"value":"/ Call the given closure with a modified printer","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526861,"byte_end":526911,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/ that will apply each given effect on prints.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":526916,"byte_end":526964,"line_start":354,"line_end":354,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527898,"byte_end":527907,"line_start":386,"line_end":386,"column_start":12,"column_end":21},"name":"print_box","qualname":"<Printer>::print_box","value":"pub fn print_box<T: Into<Vec2>, S: Into<Vec2>>(&Self, T, S, bool)","parent":null,"children":[],"decl_id":null,"docs":" Prints a rectangular box.","sig":null,"attributes":[{"value":"/ Prints a rectangular box.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527374,"byte_end":527403,"line_start":370,"line_end":370,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527408,"byte_end":527411,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ If `invert` is `true`, and the theme uses `Outset` borders, then the","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527416,"byte_end":527488,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ box will use an \"inset\" style instead.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527493,"byte_end":527535,"line_start":373,"line_end":373,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527540,"byte_end":527543,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527548,"byte_end":527562,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527567,"byte_end":527570,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527575,"byte_end":527586,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Printer;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527591,"byte_end":527618,"line_start":378,"line_end":378,"column_start":5,"column_end":32}},{"value":"/ # use cursive::theme;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527623,"byte_end":527648,"line_start":379,"line_end":379,"column_start":5,"column_end":30}},{"value":"/ # use cursive::backend;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527653,"byte_end":527680,"line_start":380,"line_end":380,"column_start":5,"column_end":32}},{"value":"/ # let b = backend::dummy::Backend::init();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527685,"byte_end":527731,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/ # let t = theme::load_default();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527736,"byte_end":527772,"line_start":382,"line_end":382,"column_start":5,"column_end":41}},{"value":"/ # let printer = Printer::new((6,4), &t, &*b);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527777,"byte_end":527826,"line_start":383,"line_end":383,"column_start":5,"column_end":54}},{"value":"/ printer.print_box((0,0), (6,4), false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527831,"byte_end":527874,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":527879,"byte_end":527886,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4828},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529060,"byte_end":529076,"line_start":418,"line_end":418,"column_start":12,"column_end":28},"name":"with_high_border","qualname":"<Printer>::with_high_border","value":"pub fn with_high_border<F>(&Self, bool, F) where F: FnOnce(&Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Runs the given function using a color depending on the theme.","sig":null,"attributes":[{"value":"/ Runs the given function using a color depending on the theme.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":528747,"byte_end":528812,"line_start":412,"line_end":412,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":528817,"byte_end":528820,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ * If the theme's borders is `None`, return without calling `f`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":528825,"byte_end":528892,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/ * If the theme's borders is \"outset\" and `invert` is `false`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":528897,"byte_end":528962,"line_start":415,"line_end":415,"column_start":5,"column_end":70}},{"value":"/   use `ColorStyle::Tertiary`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":528967,"byte_end":529000,"line_start":416,"line_end":416,"column_start":5,"column_end":38}},{"value":"/ * Otherwise, use `ColorStyle::Primary`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529005,"byte_end":529048,"line_start":417,"line_end":417,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4830},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529732,"byte_end":529747,"line_start":437,"line_end":437,"column_start":12,"column_end":27},"name":"with_low_border","qualname":"<Printer>::with_low_border","value":"pub fn with_low_border<F>(&Self, bool, F) where F: FnOnce(&Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Runs the given function using a color depending on the theme.","sig":null,"attributes":[{"value":"/ Runs the given function using a color depending on the theme.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529416,"byte_end":529481,"line_start":431,"line_end":431,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529486,"byte_end":529489,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ * If the theme's borders is `None`, return without calling `f`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529494,"byte_end":529561,"line_start":433,"line_end":433,"column_start":5,"column_end":72}},{"value":"/ * If the theme's borders is \"outset\" and `invert` is `true`,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529566,"byte_end":529630,"line_start":434,"line_end":434,"column_start":5,"column_end":69}},{"value":"/   use `ColorStyle::tertiary()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529635,"byte_end":529670,"line_start":435,"line_end":435,"column_start":5,"column_end":40}},{"value":"/ * Otherwise, use `ColorStyle::primary()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":529675,"byte_end":529720,"line_start":436,"line_end":436,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4832},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530438,"byte_end":530452,"line_start":457,"line_end":457,"column_start":12,"column_end":26},"name":"with_selection","qualname":"<Printer>::with_selection","value":"pub fn with_selection<F: FnOnce(&Printer) -> ()>(&Self, bool, F)","parent":null,"children":[],"decl_id":null,"docs":" Apply a selection style and call the given function.","sig":null,"attributes":[{"value":"/ Apply a selection style and call the given function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530086,"byte_end":530142,"line_start":450,"line_end":450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530147,"byte_end":530150,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ * If `selection` is `false`, simply uses `ColorStyle::primary()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530155,"byte_end":530224,"line_start":452,"line_end":452,"column_start":5,"column_end":74}},{"value":"/ * If `selection` is `true`:","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530229,"byte_end":530260,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/     * If the printer currently has the focus,","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530265,"byte_end":530314,"line_start":454,"line_end":454,"column_start":5,"column_end":54}},{"value":"/       uses `ColorStyle::highlight()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530319,"byte_end":530360,"line_start":455,"line_end":455,"column_start":5,"column_end":46}},{"value":"/     * Otherwise, uses `ColorStyle::highlight_inactive()`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530365,"byte_end":530426,"line_start":456,"line_end":456,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4834},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530945,"byte_end":530957,"line_start":475,"line_end":475,"column_start":12,"column_end":24},"name":"print_hdelim","qualname":"<Printer>::print_hdelim","value":"pub fn print_hdelim<T>(&Self, T, usize) where T: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Prints a horizontal delimiter with side border `├` and `┤`.\n","sig":null,"attributes":[{"value":"/ Prints a horizontal delimiter with side border `├` and `┤`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":530866,"byte_end":530933,"line_start":474,"line_end":474,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4836},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":531374,"byte_end":531380,"line_start":488,"line_end":488,"column_start":12,"column_end":18},"name":"offset","qualname":"<Printer>::offset","value":"pub fn offset<S>(&Self, S) -> Self where S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a sub-printer with the given offset.","sig":null,"attributes":[{"value":"/ Returns a sub-printer with the given offset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":531243,"byte_end":531291,"line_start":485,"line_end":485,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":531296,"byte_end":531299,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ It will print in an area slightly to the bottom/right.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":531304,"byte_end":531362,"line_start":487,"line_end":487,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4839},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532171,"byte_end":532178,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"focused","qualname":"<Printer>::focused","value":"pub fn focused(&Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer inheriting the given focus.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer inheriting the given focus.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":531966,"byte_end":532023,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532028,"byte_end":532031,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ If `self` is focused and `focused == true`, the child will be focused.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532036,"byte_end":532110,"line_start":510,"line_end":510,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532115,"byte_end":532118,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Otherwise, he will be unfocused.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532123,"byte_end":532159,"line_start":512,"line_end":512,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532511,"byte_end":532518,"line_start":524,"line_end":524,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Printer>::enabled","value":"pub fn enabled(&Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer inheriting the given enabled state.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer inheriting the given enabled state.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532299,"byte_end":532364,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532369,"byte_end":532372,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ If `self` is enabled and `enabled == true`, the child will be enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532377,"byte_end":532451,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532456,"byte_end":532459,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Otherwise, he will be disabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532464,"byte_end":532499,"line_start":523,"line_end":523,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532829,"byte_end":532836,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"cropped","qualname":"<Printer>::cropped","value":"pub fn cropped<S>(&Self, S) -> Self where S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer with a cropped area.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer with a cropped area.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532614,"byte_end":532664,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532669,"byte_end":532672,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The new printer size will be the minimum of `size` and its current size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532677,"byte_end":532753,"line_start":530,"line_end":530,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532758,"byte_end":532761,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Any size reduction happens at the bottom-right.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":532766,"byte_end":532817,"line_start":532,"line_end":532,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4846},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533389,"byte_end":533405,"line_start":551,"line_end":551,"column_start":12,"column_end":28},"name":"cropped_centered","qualname":"<Printer>::cropped_centered","value":"pub fn cropped_centered<S>(&Self, S) -> Self where S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer with a cropped area.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer with a cropped area.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533099,"byte_end":533149,"line_start":544,"line_end":544,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533154,"byte_end":533157,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The new printer size will be the minimum of `size` and its current size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533162,"byte_end":533238,"line_start":546,"line_end":546,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533243,"byte_end":533246,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ The view will stay centered.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533251,"byte_end":533283,"line_start":548,"line_end":548,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533288,"byte_end":533291,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Note that if shrinking by an odd number, the view will round to the top-left.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533296,"byte_end":533377,"line_start":550,"line_end":550,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":4848},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533828,"byte_end":533836,"line_start":565,"line_end":565,"column_start":12,"column_end":20},"name":"shrinked","qualname":"<Printer>::shrinked","value":"pub fn shrinked<S>(&Self, S) -> Self where S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer with a shrinked area.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer with a shrinked area.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533673,"byte_end":533724,"line_start":562,"line_end":562,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533729,"byte_end":533732,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ The printer size will be reduced by the given border from the bottom-right.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533737,"byte_end":533816,"line_start":564,"line_end":564,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534224,"byte_end":534241,"line_start":577,"line_end":577,"column_start":12,"column_end":29},"name":"shrinked_centered","qualname":"<Printer>::shrinked_centered","value":"pub fn shrinked_centered<S>(&Self, S) -> Self where S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer with a shrinked area.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer with a shrinked area.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":533973,"byte_end":534024,"line_start":572,"line_end":572,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534029,"byte_end":534032,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ The printer size will be reduced by the given border, and will stay centered.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534037,"byte_end":534118,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534123,"byte_end":534126,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Note that if shrinking by an odd number, the view will round to the top-left.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534131,"byte_end":534212,"line_start":576,"line_end":576,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":4852},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534532,"byte_end":534546,"line_start":588,"line_end":588,"column_start":12,"column_end":26},"name":"content_offset","qualname":"<Printer>::content_offset","value":"pub fn content_offset<S>(&Self, S) -> Self where S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer with a content offset.\n","sig":null,"attributes":[{"value":"/ Returns a new sub-printer with a content offset.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534468,"byte_end":534520,"line_start":587,"line_end":587,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534996,"byte_end":535006,"line_start":603,"line_end":603,"column_start":12,"column_end":22},"name":"inner_size","qualname":"<Printer>::inner_size","value":"pub fn inner_size<S>(&Self, S) -> Self where S: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a sub-printer with a different inner size.","sig":null,"attributes":[{"value":"/ Returns a sub-printer with a different inner size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534727,"byte_end":534781,"line_start":597,"line_end":597,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534786,"byte_end":534789,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This will not change the actual output size, but will appear bigger to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534794,"byte_end":534868,"line_start":599,"line_end":599,"column_start":5,"column_end":79}},{"value":"/ users of this printer.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534873,"byte_end":534899,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534904,"byte_end":534907,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Useful to give to children who think they're big, but really aren't.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":534912,"byte_end":534984,"line_start":602,"line_end":602,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":6358},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535340,"byte_end":535344,"line_start":7,"line_end":7,"column_start":12,"column_end":16},"name":"Rect","qualname":"::rect::Rect","value":"Rect {  }","parent":null,"children":[{"krate":0,"index":6359},{"krate":0,"index":6360}],"decl_id":null,"docs":" A non-empty rectangle on the 2D grid.\n","sig":null,"attributes":[{"value":"/ A non-empty rectangle on the 2D grid.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535242,"byte_end":535283,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4873},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535956,"byte_end":535965,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Rect>::from_size","value":"pub fn from_size<U, V>(U, V) -> Self where U: Into<Vec2>, V: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rect` with the given position and size.","sig":null,"attributes":[{"value":"/ Creates a new `Rect` with the given position and size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535838,"byte_end":535896,"line_start":37,"line_end":37,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535901,"byte_end":535904,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The minimum size will `(1, 1)`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535909,"byte_end":535944,"line_start":39,"line_end":39,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4876},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":536373,"byte_end":536385,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"from_corners","qualname":"<Rect>::from_corners","value":"pub fn from_corners<U, V>(U, V) -> Self where U: Into<Vec2>, V: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rect` from two corners.","sig":null,"attributes":[{"value":"/ Creates a new `Rect` from two corners.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":536267,"byte_end":536309,"line_start":53,"line_end":53,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":536314,"byte_end":536317,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It can be any two opposite corners.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":536322,"byte_end":536361,"line_start":55,"line_end":55,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4879},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":536764,"byte_end":536773,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"expand_to","qualname":"<Rect>::expand_to","value":"pub fn expand_to<R>(&mut Self, R) where R: Into<Rect>","parent":null,"children":[],"decl_id":null,"docs":" Grow this rectangle if necessary to include `other`.\n","sig":null,"attributes":[{"value":"/ Grow this rectangle if necessary to include `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":536696,"byte_end":536752,"line_start":73,"line_end":73,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4881},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537097,"byte_end":537108,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"expanded_to","qualname":"<Rect>::expanded_to","value":"pub fn expanded_to<R>(Self, R) -> Self where R: Into<Rect>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new rectangle that includes both `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns a new rectangle that includes both `self` and `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537019,"byte_end":537085,"line_start":84,"line_end":84,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4883},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537290,"byte_end":537296,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"offset","qualname":"<Rect>::offset","value":"pub fn offset<V>(&mut Self, V) where V: Into<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Adds the given offset to this rectangle.\n","sig":null,"attributes":[{"value":"/ Adds the given offset to this rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537234,"byte_end":537278,"line_start":93,"line_end":93,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4885},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537562,"byte_end":537566,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"size","qualname":"<Rect>::size","value":"pub fn size(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the size of the rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537512,"byte_end":537550,"line_start":103,"line_end":103,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537696,"byte_end":537701,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect>::width","value":"pub fn width(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the width of the rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537645,"byte_end":537684,"line_start":108,"line_end":108,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4887},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537804,"byte_end":537810,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect>::height","value":"pub fn height(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the height of the rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537752,"byte_end":537792,"line_start":113,"line_end":113,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4888},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537940,"byte_end":537948,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"top_left","qualname":"<Rect>::top_left","value":"pub fn top_left(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the top-left corner.","sig":null,"attributes":[{"value":"/ Returns the top-left corner.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537861,"byte_end":537893,"line_start":118,"line_end":118,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537898,"byte_end":537901,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537906,"byte_end":537928,"line_start":120,"line_end":120,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538081,"byte_end":538093,"line_start":128,"line_end":128,"column_start":12,"column_end":24},"name":"bottom_right","qualname":"<Rect>::bottom_right","value":"pub fn bottom_right(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the bottom-right corner.","sig":null,"attributes":[{"value":"/ Returns the bottom-right corner.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":537998,"byte_end":538034,"line_start":125,"line_end":125,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538039,"byte_end":538042,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538047,"byte_end":538069,"line_start":127,"line_end":127,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538227,"byte_end":538236,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"top_right","qualname":"<Rect>::top_right","value":"pub fn top_right(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the top-right corner.","sig":null,"attributes":[{"value":"/ Returns the top-right corner.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538147,"byte_end":538180,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538185,"byte_end":538188,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538193,"byte_end":538215,"line_start":134,"line_end":134,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538390,"byte_end":538401,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"bottom_left","qualname":"<Rect>::bottom_left","value":"pub fn bottom_left(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the bottom-left corner.","sig":null,"attributes":[{"value":"/ Returns the bottom-left corner.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538308,"byte_end":538343,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538348,"byte_end":538351,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538356,"byte_end":538378,"line_start":141,"line_end":141,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4892},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538579,"byte_end":538582,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"top","qualname":"<Rect>::top","value":"pub fn top(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y value of the top edge of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the Y value of the top edge of the rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538475,"byte_end":538532,"line_start":146,"line_end":146,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538537,"byte_end":538540,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538545,"byte_end":538567,"line_start":148,"line_end":148,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538740,"byte_end":538744,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"left","qualname":"<Rect>::left","value":"pub fn left(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the X value of the left edge of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the X value of the left edge of the rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538635,"byte_end":538693,"line_start":153,"line_end":153,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538698,"byte_end":538701,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538706,"byte_end":538728,"line_start":155,"line_end":155,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4894},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538903,"byte_end":538908,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"right","qualname":"<Rect>::right","value":"pub fn right(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the X value of the right edge of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the X value of the right edge of the rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538797,"byte_end":538856,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538861,"byte_end":538864,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538869,"byte_end":538891,"line_start":162,"line_end":162,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":539072,"byte_end":539078,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Rect>::bottom","value":"pub fn bottom(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y value of the botton edge of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the Y value of the botton edge of the rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":538965,"byte_end":539025,"line_start":167,"line_end":167,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":539030,"byte_end":539033,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":539038,"byte_end":539060,"line_start":169,"line_end":169,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4896},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":539214,"byte_end":539221,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"surface","qualname":"<Rect>::surface","value":"pub fn surface(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the surface (number of cells) covered by the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the surface (number of cells) covered by the rectangle.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":539135,"byte_end":539202,"line_start":174,"line_end":174,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4897},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":539334,"byte_end":539342,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect>::contains","value":"pub fn contains(Self, Vec2) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a point is in `self`.\n","sig":null,"attributes":[{"value":"/ Checks if a point is in `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":539287,"byte_end":539322,"line_start":179,"line_end":179,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539503,"byte_end":539507,"line_start":2,"line_end":2,"column_start":11,"column_end":15},"name":"With","qualname":"::with::With","value":"With: Sized","parent":null,"children":[{"krate":0,"index":4900},{"krate":0,"index":4902},{"krate":0,"index":4905}],"decl_id":null,"docs":" Generic trait to enable chainable API\n","sig":null,"attributes":[{"value":"/ Generic trait to enable chainable API","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539451,"byte_end":539492,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539567,"byte_end":539571,"line_start":4,"line_end":4,"column_start":8,"column_end":12},"name":"with","qualname":"::with::With::with","value":"pub fn with<F: FnOnce(&mut Self) -> ()>(Self, F) -> Self","parent":{"krate":0,"index":4899},"children":[],"decl_id":null,"docs":" Calls the given closure on `self`.\n","sig":null,"attributes":[{"value":"/ Calls the given closure on `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539521,"byte_end":539559,"line_start":3,"line_end":3,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539712,"byte_end":539720,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"try_with","qualname":"::with::With::try_with","value":"pub fn try_with<E, F>(Self, F) -> Result<Self, E> where F: FnOnce(&mut Self)\n-> Result<(), E>","parent":{"krate":0,"index":4899},"children":[],"decl_id":null,"docs":" Calls the given closure on `self`.\n","sig":null,"attributes":[{"value":"/ Calls the given closure on `self`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539666,"byte_end":539704,"line_start":9,"line_end":9,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4905},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539935,"byte_end":539942,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"with_if","qualname":"::with::With::with_if","value":"pub fn with_if<F>(Self, bool, F) -> Self where F: FnOnce(&mut Self) -> ()","parent":{"krate":0,"index":4899},"children":[],"decl_id":null,"docs":" Calls the given closure if `condition == true`.\n","sig":null,"attributes":[{"value":"/ Calls the given closure if `condition == true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539876,"byte_end":539927,"line_start":18,"line_end":18,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":6373},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540309,"byte_end":540311,"line_start":6,"line_end":6,"column_start":12,"column_end":14},"name":"XY","qualname":"::xy::XY","value":"XY { x, y }","parent":null,"children":[{"krate":0,"index":6375},{"krate":0,"index":6376}],"decl_id":null,"docs":" A generic structure with a value for each axis.\n","sig":null,"attributes":[{"value":"/ A generic structure with a value for each axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540195,"byte_end":540246,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6375},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540346,"byte_end":540347,"line_start":8,"line_end":8,"column_start":9,"column_end":10},"name":"x","qualname":"::xy::XY::x","value":"T","parent":{"krate":0,"index":6373},"children":[],"decl_id":null,"docs":" X-axis value\n","sig":null,"attributes":[{"value":"/ X-axis value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540321,"byte_end":540337,"line_start":7,"line_end":7,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540381,"byte_end":540382,"line_start":10,"line_end":10,"column_start":9,"column_end":10},"name":"y","qualname":"::xy::XY::y","value":"T","parent":{"krate":0,"index":6373},"children":[],"decl_id":null,"docs":" Y-axis value\n","sig":null,"attributes":[{"value":"/ Y-axis value","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540356,"byte_end":540372,"line_start":9,"line_end":9,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540720,"byte_end":540723,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<XY<T>>::new","value":"pub fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `XY` from the given values.\n","sig":null,"attributes":[{"value":"/ Creates a new `XY` from the given values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540663,"byte_end":540708,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4924},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540986,"byte_end":540990,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"swap","qualname":"<XY<T>>::swap","value":"pub fn swap(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swaps the x and y values.","sig":null,"attributes":[{"value":"/ Swaps the x and y values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540777,"byte_end":540806,"line_start":29,"line_end":29,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540811,"byte_end":540814,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540819,"byte_end":540833,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540838,"byte_end":540841,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540846,"byte_end":540857,"line_start":33,"line_end":33,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540862,"byte_end":540884,"line_start":34,"line_end":34,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540889,"byte_end":540916,"line_start":35,"line_end":35,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(xy.swap(), XY::new(2, 1));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540921,"byte_end":540962,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540967,"byte_end":540974,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541376,"byte_end":541380,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"fold","qualname":"<XY<T>>::fold","value":"pub fn fold<U, F>(Self, F) -> U where F: FnOnce(T, T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Returns `f(self.x, self.y)`","sig":null,"attributes":[{"value":"/ Returns `f(self.x, self.y)`","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541050,"byte_end":541081,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541086,"byte_end":541089,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541094,"byte_end":541108,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541113,"byte_end":541116,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541121,"byte_end":541132,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541137,"byte_end":541159,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541164,"byte_end":541191,"line_start":48,"line_end":48,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541196,"byte_end":541199,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy.fold(std::ops::Add::add), 3);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541204,"byte_end":541251,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(xy.fold(std::ops::Mul::mul), 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541256,"byte_end":541303,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(xy.fold(|x, y| x < y), true);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541308,"byte_end":541352,"line_start":52,"line_end":52,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541357,"byte_end":541364,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4928},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541798,"byte_end":541801,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"map","qualname":"<XY<T>>::map","value":"pub fn map<U, F>(Self, F) -> XY<U> where F: Fn(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `XY` by applying `f` to `x` and `y`.","sig":null,"attributes":[{"value":"/ Creates a new `XY` by applying `f` to `x` and `y`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541487,"byte_end":541541,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541546,"byte_end":541549,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541554,"byte_end":541568,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541573,"byte_end":541576,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541581,"byte_end":541592,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541597,"byte_end":541619,"line_start":66,"line_end":66,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541624,"byte_end":541651,"line_start":67,"line_end":67,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541656,"byte_end":541659,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy.map(|v| v * 2), XY::new(2, 4));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541664,"byte_end":541713,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(xy.map(|v| v > 1), XY::new(false, true));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541718,"byte_end":541774,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541779,"byte_end":541786,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4931},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542268,"byte_end":542274,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"map_if","qualname":"<XY<T>>::map_if","value":"pub fn map_if<F>(Self, XY<bool>, F) -> Self where F: Fn(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Applies `f` on axis where `condition` is true.","sig":null,"attributes":[{"value":"/ Applies `f` on axis where `condition` is true.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541917,"byte_end":541967,"line_start":79,"line_end":79,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541972,"byte_end":541975,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Carries over `self` otherwise.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":541980,"byte_end":542014,"line_start":81,"line_end":81,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542019,"byte_end":542022,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542027,"byte_end":542041,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542046,"byte_end":542049,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542054,"byte_end":542065,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542070,"byte_end":542092,"line_start":86,"line_end":86,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542097,"byte_end":542124,"line_start":87,"line_end":87,"column_start":5,"column_end":32}},{"value":"/ let cond = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542129,"byte_end":542165,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542170,"byte_end":542173,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy.map_if(cond, |v| v * 3), XY::new(3, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542178,"byte_end":542236,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542241,"byte_end":542244,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542249,"byte_end":542256,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4934},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542781,"byte_end":542787,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"run_if","qualname":"<XY<T>>::run_if","value":"pub fn run_if<F, U>(Self, XY<bool>, F) -> XY<Option<U>> where F: Fn(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Applies `f` on axis where `condition` is true.","sig":null,"attributes":[{"value":"/ Applies `f` on axis where `condition` is true.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542434,"byte_end":542484,"line_start":100,"line_end":100,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542489,"byte_end":542492,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Returns `None` otherwise.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542497,"byte_end":542526,"line_start":102,"line_end":102,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542531,"byte_end":542534,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542539,"byte_end":542553,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542558,"byte_end":542561,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542566,"byte_end":542577,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542582,"byte_end":542604,"line_start":107,"line_end":107,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542609,"byte_end":542636,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ let cond = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542641,"byte_end":542677,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542682,"byte_end":542685,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy.run_if(cond, |v| v * 3), XY::new(Some(3), None));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542690,"byte_end":542757,"line_start":111,"line_end":111,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542762,"byte_end":542769,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4938},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543229,"byte_end":543234,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"map_x","qualname":"<XY<T>>::map_x","value":"pub fn map_x<F>(Self, F) -> Self where F: FnOnce(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `XY` by applying `f` to `x`, and carrying `y` over.","sig":null,"attributes":[{"value":"/ Creates a new `XY` by applying `f` to `x`, and carrying `y` over.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":542968,"byte_end":543037,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543042,"byte_end":543045,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543050,"byte_end":543064,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543069,"byte_end":543072,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543077,"byte_end":543088,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543093,"byte_end":543115,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543120,"byte_end":543147,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(xy.map_x(|x| x * 10), XY::new(10, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543152,"byte_end":543205,"line_start":127,"line_end":127,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543210,"byte_end":543217,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4940},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543608,"byte_end":543613,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"map_y","qualname":"<XY<T>>::map_y","value":"pub fn map_y<F>(Self, F) -> Self where F: FnOnce(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `XY` by applying `f` to `y`, and carrying `x` over.","sig":null,"attributes":[{"value":"/ Creates a new `XY` by applying `f` to `y`, and carrying `x` over.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543347,"byte_end":543416,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543421,"byte_end":543424,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543429,"byte_end":543443,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543448,"byte_end":543451,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543456,"byte_end":543467,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543472,"byte_end":543494,"line_start":141,"line_end":141,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543499,"byte_end":543526,"line_start":142,"line_end":142,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(xy.map_y(|y| y * 10), XY::new(1, 20));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543531,"byte_end":543584,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543589,"byte_end":543596,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543961,"byte_end":543965,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"pair","qualname":"<XY<T>>::pair","value":"pub fn pair(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Destructure self into a pair.","sig":null,"attributes":[{"value":"/ Destructure self into a pair.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543726,"byte_end":543759,"line_start":152,"line_end":152,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543764,"byte_end":543767,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543772,"byte_end":543786,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543791,"byte_end":543794,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543799,"byte_end":543810,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543815,"byte_end":543837,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543842,"byte_end":543869,"line_start":158,"line_end":158,"column_start":5,"column_end":32}},{"value":"/ let (x, y) = xy.pair();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543874,"byte_end":543901,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ assert_eq!((x, y), (1, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543906,"byte_end":543937,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":543942,"byte_end":543949,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544584,"byte_end":544590,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<XY<T>>::as_ref","value":"pub fn as_ref(&Self) -> XY<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return a `XY` with references to this one's values.","sig":null,"attributes":[{"value":"/ Return a `XY` with references to this one's values.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544020,"byte_end":544075,"line_start":166,"line_end":166,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544080,"byte_end":544083,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544088,"byte_end":544102,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544107,"byte_end":544110,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544115,"byte_end":544126,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544131,"byte_end":544153,"line_start":171,"line_end":171,"column_start":5,"column_end":27}},{"value":"/ fn longer(xy: &XY<String>, l: usize) -> XY<bool> {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544158,"byte_end":544212,"line_start":172,"line_end":172,"column_start":5,"column_end":59}},{"value":"/     // `XY::map` takes ownership","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544217,"byte_end":544253,"line_start":173,"line_end":173,"column_start":5,"column_end":41}},{"value":"/     // So we need to get a XY<&String> from a &XY<String>","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544258,"byte_end":544319,"line_start":174,"line_end":174,"column_start":5,"column_end":66}},{"value":"/     let by_ref: XY<&String> = xy.as_ref();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544324,"byte_end":544370,"line_start":175,"line_end":175,"column_start":5,"column_end":51}},{"value":"/     by_ref.map(|s| s.len() > l)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544375,"byte_end":544410,"line_start":176,"line_end":176,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544415,"byte_end":544420,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544425,"byte_end":544428,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let xy = XY::new(String::from(\"a\"), String::from(\"bbb\"));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544433,"byte_end":544494,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544499,"byte_end":544502,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(longer(&xy, 2), XY::new(false, true));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544507,"byte_end":544560,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544565,"byte_end":544572,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544964,"byte_end":544968,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"iter","qualname":"<XY<T>>::iter","value":"pub fn iter(&Self) -> iter::Chain<iter::Once<&T>, iter::Once<&T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator that returns references to `x`, then `y`.","sig":null,"attributes":[{"value":"/ Creates an iterator that returns references to `x`, then `y`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544655,"byte_end":544720,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544725,"byte_end":544728,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544733,"byte_end":544747,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544752,"byte_end":544755,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544760,"byte_end":544771,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544776,"byte_end":544798,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544803,"byte_end":544830,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/ let vec: Vec<bool> = xy.iter().map(|&i| i > 1).collect();","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544835,"byte_end":544896,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(vec, vec![false, true]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544901,"byte_end":544940,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":544945,"byte_end":544952,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545439,"byte_end":545442,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"get","qualname":"<XY<T>>::get","value":"pub fn get(&Self, Orientation) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value on the given axis.","sig":null,"attributes":[{"value":"/ Returns a reference to the value on the given axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545091,"byte_end":545146,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545151,"byte_end":545154,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545159,"byte_end":545173,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545178,"byte_end":545181,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545186,"byte_end":545197,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545202,"byte_end":545224,"line_start":206,"line_end":206,"column_start":5,"column_end":27}},{"value":"/ # use cursive::direction::Orientation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545229,"byte_end":545271,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545276,"byte_end":545303,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(xy.get(Orientation::Horizontal), &1);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545308,"byte_end":545360,"line_start":209,"line_end":209,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(xy.get(Orientation::Vertical), &2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545365,"byte_end":545415,"line_start":210,"line_end":210,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545420,"byte_end":545427,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4946},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545954,"byte_end":545961,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<XY<T>>::get_mut","value":"pub fn get_mut(&mut Self, Orientation) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value on the given axis.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value on the given axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545607,"byte_end":545670,"line_start":219,"line_end":219,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545675,"byte_end":545678,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545683,"byte_end":545697,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545702,"byte_end":545705,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545710,"byte_end":545721,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545726,"byte_end":545748,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/ # use cursive::direction::Orientation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545753,"byte_end":545795,"line_start":225,"line_end":225,"column_start":5,"column_end":47}},{"value":"/ let mut xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545800,"byte_end":545831,"line_start":226,"line_end":226,"column_start":5,"column_end":36}},{"value":"/ *xy.get_mut(Orientation::Horizontal) = 10;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545836,"byte_end":545882,"line_start":227,"line_end":227,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545887,"byte_end":545890,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy, XY::new(10, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545895,"byte_end":545930,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":545935,"byte_end":545942,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546443,"byte_end":546446,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"zip","qualname":"<XY<T>>::zip","value":"pub fn zip<U>(Self, XY<U>) -> XY<(T, U)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` of tuples made by zipping `self` and `other`.","sig":null,"attributes":[{"value":"/ Returns a new `XY` of tuples made by zipping `self` and `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546142,"byte_end":546210,"line_start":238,"line_end":238,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546215,"byte_end":546218,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546223,"byte_end":546237,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546242,"byte_end":546245,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546250,"byte_end":546261,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546266,"byte_end":546288,"line_start":243,"line_end":243,"column_start":5,"column_end":27}},{"value":"/ let a = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546293,"byte_end":546319,"line_start":244,"line_end":244,"column_start":5,"column_end":31}},{"value":"/ let b = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546324,"byte_end":546357,"line_start":245,"line_end":245,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.zip(b), XY::new((1, true), (2, false)));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546362,"byte_end":546419,"line_start":246,"line_end":246,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546424,"byte_end":546431,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4949},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546902,"byte_end":546906,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"zip3","qualname":"<XY<T>>::zip3","value":"pub fn zip3<U, V>(Self, XY<U>, XY<V>) -> XY<(T, U, V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` of tuples made by zipping `self`, `a` and `b`.","sig":null,"attributes":[{"value":"/ Returns a new `XY` of tuples made by zipping `self`, `a` and `b`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546551,"byte_end":546620,"line_start":252,"line_end":252,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546625,"byte_end":546628,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546633,"byte_end":546647,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546652,"byte_end":546655,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546660,"byte_end":546671,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546676,"byte_end":546698,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/ let a = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546703,"byte_end":546729,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ let b = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546734,"byte_end":546767,"line_start":259,"line_end":259,"column_start":5,"column_end":38}},{"value":"/ let c = XY::new(\"x\", \"y\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546772,"byte_end":546802,"line_start":260,"line_end":260,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.zip3(b, c), XY::new((1, true, \"x\"), (2, false, \"y\")));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546807,"byte_end":546878,"line_start":261,"line_end":261,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":546883,"byte_end":546890,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4952},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547496,"byte_end":547500,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"zip4","qualname":"<XY<T>>::zip4","value":"pub fn zip4<U, V, W>(Self, XY<U>, XY<V>, XY<W>) -> XY<(T, U, V, W)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` of tuples made by zipping `self`, `a`, `b` and `c`.","sig":null,"attributes":[{"value":"/ Returns a new `XY` of tuples made by zipping `self`, `a`, `b` and `c`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547025,"byte_end":547099,"line_start":267,"line_end":267,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547104,"byte_end":547107,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547112,"byte_end":547126,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547131,"byte_end":547134,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547139,"byte_end":547150,"line_start":271,"line_end":271,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547155,"byte_end":547177,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/ let a = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547182,"byte_end":547208,"line_start":273,"line_end":273,"column_start":5,"column_end":31}},{"value":"/ let b = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547213,"byte_end":547246,"line_start":274,"line_end":274,"column_start":5,"column_end":38}},{"value":"/ let c = XY::new(\"x\", \"y\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547251,"byte_end":547281,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/ let d = XY::new(vec![1], vec![2, 3, 4]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547286,"byte_end":547330,"line_start":276,"line_end":276,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547335,"byte_end":547350,"line_start":277,"line_end":277,"column_start":5,"column_end":20}},{"value":"/     XY::zip4(a, b, c, d),","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547355,"byte_end":547384,"line_start":278,"line_end":278,"column_start":5,"column_end":34}},{"value":"/     XY::new((1, true, \"x\", vec![1]), (2, false, \"y\", vec![2, 3, 4]))","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547389,"byte_end":547461,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ );","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547466,"byte_end":547472,"line_start":280,"line_end":280,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547477,"byte_end":547484,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548353,"byte_end":548357,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"zip5","qualname":"<XY<T>>::zip5","value":"pub fn zip5<U, V, W, Z>(Self, XY<U>, XY<V>, XY<W>, XY<Z>)\n-> XY<(T, U, V, W, Z)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` of tuples made by zipping `self`, `a`, `b`, `c` and `d`.","sig":null,"attributes":[{"value":"/ Returns a new `XY` of tuples made by zipping `self`, `a`, `b`, `c` and `d`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547660,"byte_end":547739,"line_start":288,"line_end":288,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547744,"byte_end":547747,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547752,"byte_end":547766,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547771,"byte_end":547774,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547779,"byte_end":547790,"line_start":292,"line_end":292,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547795,"byte_end":547817,"line_start":293,"line_end":293,"column_start":5,"column_end":27}},{"value":"/ let a = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547822,"byte_end":547848,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/ let b = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547853,"byte_end":547886,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/ let c = XY::new(\"x\", \"y\");","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547891,"byte_end":547921,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ let d = XY::new(vec![1], vec![2, 3, 4]);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547926,"byte_end":547970,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/ let e = XY::new('a', 'b');","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":547975,"byte_end":548005,"line_start":298,"line_end":298,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548010,"byte_end":548013,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let xy: XY<Option<char>> = XY::zip5(a, b, c, d, e)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548018,"byte_end":548072,"line_start":300,"line_end":300,"column_start":5,"column_end":59}},{"value":"/     .map(|(a, b, c, d, e)| {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548077,"byte_end":548109,"line_start":301,"line_end":301,"column_start":5,"column_end":37}},{"value":"/         if b && d.contains(&a) {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548114,"byte_end":548150,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/             Some(e)","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548155,"byte_end":548178,"line_start":303,"line_end":303,"column_start":5,"column_end":28}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548183,"byte_end":548203,"line_start":304,"line_end":304,"column_start":5,"column_end":25}},{"value":"/             c.chars().next()","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548208,"byte_end":548240,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/         }","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548245,"byte_end":548258,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548263,"byte_end":548274,"line_start":307,"line_end":307,"column_start":5,"column_end":16}},{"value":"/ assert_eq!(xy, XY::new(Some('a'), Some('y')));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548279,"byte_end":548329,"line_start":308,"line_end":308,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548334,"byte_end":548341,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4961},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548910,"byte_end":548917,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"zip_map","qualname":"<XY<T>>::zip_map","value":"pub fn zip_map<U, V, F>(Self, XY<U>, F) -> XY<V> where F: Fn(T, U) -> V","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` by calling `f` on `self` and `other` for each axis.","sig":null,"attributes":[{"value":"/ Returns a new `XY` by calling `f` on `self` and `other` for each axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548543,"byte_end":548617,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548622,"byte_end":548625,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548630,"byte_end":548644,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548649,"byte_end":548652,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548657,"byte_end":548668,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548673,"byte_end":548695,"line_start":321,"line_end":321,"column_start":5,"column_end":27}},{"value":"/ let a = XY::new((1, 10), (2, 20));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548700,"byte_end":548738,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ let b = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548743,"byte_end":548776,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ let xy = a.zip_map(b, |(a1, a2), b| if b { a1 } else { a2 });","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548781,"byte_end":548846,"line_start":324,"line_end":324,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(xy, XY::new(1, 20));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548851,"byte_end":548886,"line_start":325,"line_end":325,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":548891,"byte_end":548898,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4965},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549381,"byte_end":549385,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"keep","qualname":"<XY<T>>::keep","value":"pub fn keep(Self, XY<bool>) -> XY<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" For each axis, keep the element from `self` if `keep` is `true`.","sig":null,"attributes":[{"value":"/ For each axis, keep the element from `self` if `keep` is `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549071,"byte_end":549139,"line_start":334,"line_end":334,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549144,"byte_end":549147,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549152,"byte_end":549166,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549171,"byte_end":549174,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549179,"byte_end":549190,"line_start":338,"line_end":338,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549195,"byte_end":549217,"line_start":339,"line_end":339,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549222,"byte_end":549249,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/ let cond = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549254,"byte_end":549290,"line_start":341,"line_end":341,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549295,"byte_end":549298,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy.keep(cond), XY::new(Some(1), None));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549303,"byte_end":549357,"line_start":343,"line_end":343,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549362,"byte_end":549369,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549813,"byte_end":549822,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"with_axis","qualname":"<XY<T>>::with_axis","value":"pub fn with_axis(&Self, Orientation, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` with the axis `o` set to `value`.","sig":null,"attributes":[{"value":"/ Returns a new `XY` with the axis `o` set to `value`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549489,"byte_end":549545,"line_start":351,"line_end":351,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549550,"byte_end":549553,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549558,"byte_end":549572,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549577,"byte_end":549580,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549585,"byte_end":549596,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549601,"byte_end":549623,"line_start":356,"line_end":356,"column_start":5,"column_end":27}},{"value":"/ # use cursive::direction::Orientation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549628,"byte_end":549670,"line_start":357,"line_end":357,"column_start":5,"column_end":47}},{"value":"/ let xy = XY::new(1, 2).with_axis(Orientation::Horizontal, 42);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549675,"byte_end":549741,"line_start":358,"line_end":358,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549746,"byte_end":549749,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy, XY::new(42, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549754,"byte_end":549789,"line_start":360,"line_end":360,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549794,"byte_end":549801,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550345,"byte_end":550359,"line_start":380,"line_end":380,"column_start":12,"column_end":26},"name":"with_axis_from","qualname":"<XY<T>>::with_axis_from","value":"pub fn with_axis_from(&Self, Orientation, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` with the axis `o` set to the value from `other`.","sig":null,"attributes":[{"value":"/ Returns a new `XY` with the axis `o` set to the value from `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549963,"byte_end":550034,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550039,"byte_end":550042,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550047,"byte_end":550061,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550066,"byte_end":550069,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550074,"byte_end":550085,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550090,"byte_end":550112,"line_start":373,"line_end":373,"column_start":5,"column_end":27}},{"value":"/ # use cursive::direction::Orientation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550117,"byte_end":550159,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/ let other = XY::new(3, 4);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550164,"byte_end":550194,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let xy = XY::new(1, 2).with_axis_from(Orientation::Horizontal, &other);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550199,"byte_end":550274,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550279,"byte_end":550282,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy, XY::new(3, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550287,"byte_end":550321,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550326,"byte_end":550333,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550887,"byte_end":550900,"line_start":399,"line_end":399,"column_start":12,"column_end":25},"name":"set_axis_from","qualname":"<XY<T>>::set_axis_from","value":"pub fn set_axis_from(&mut Self, Orientation, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets the axis `o` on `self` to the value from `other`.","sig":null,"attributes":[{"value":"/ Sets the axis `o` on `self` to the value from `other`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550503,"byte_end":550561,"line_start":386,"line_end":386,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550566,"byte_end":550569,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550574,"byte_end":550588,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550593,"byte_end":550596,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550601,"byte_end":550612,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550617,"byte_end":550639,"line_start":391,"line_end":391,"column_start":5,"column_end":27}},{"value":"/ # use cursive::direction::Orientation;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550644,"byte_end":550686,"line_start":392,"line_end":392,"column_start":5,"column_end":47}},{"value":"/ let mut xy = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550691,"byte_end":550722,"line_start":393,"line_end":393,"column_start":5,"column_end":36}},{"value":"/ let other = XY::new(3, 4);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550727,"byte_end":550757,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ xy.set_axis_from(Orientation::Horizontal, &other);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550762,"byte_end":550816,"line_start":395,"line_end":395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550821,"byte_end":550824,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy, XY::new(3, 2));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550829,"byte_end":550863,"line_start":397,"line_end":397,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550868,"byte_end":550875,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551239,"byte_end":551248,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"both_from","qualname":"<XY<T>>::both_from","value":"pub fn both_from(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `XY` with both `x` and `y` set to `value`.","sig":null,"attributes":[{"value":"/ Creates a `XY` with both `x` and `y` set to `value`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":550996,"byte_end":551052,"line_start":403,"line_end":403,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551057,"byte_end":551060,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551065,"byte_end":551079,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551084,"byte_end":551087,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551092,"byte_end":551103,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551108,"byte_end":551130,"line_start":408,"line_end":408,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::both_from(42);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551135,"byte_end":551166,"line_start":409,"line_end":409,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551171,"byte_end":551174,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(xy, XY::new(42, 42));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551179,"byte_end":551215,"line_start":411,"line_end":411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551220,"byte_end":551227,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4974},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551651,"byte_end":551660,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"unwrap_or","qualname":"<XY<Option<T>>>::unwrap_or","value":"pub fn unwrap_or(Self, XY<T>) -> XY<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` by calling `unwrap_or` on each axis.","sig":null,"attributes":[{"value":"/ Returns a new `XY` by calling `unwrap_or` on each axis.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551382,"byte_end":551441,"line_start":421,"line_end":421,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551446,"byte_end":551449,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551454,"byte_end":551468,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551473,"byte_end":551476,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551481,"byte_end":551492,"line_start":425,"line_end":425,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551497,"byte_end":551519,"line_start":426,"line_end":426,"column_start":5,"column_end":27}},{"value":"/ let xy = XY::new(Some(1), None);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551524,"byte_end":551560,"line_start":427,"line_end":427,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(xy.unwrap_or(XY::new(10, 20)), XY::new(1, 20));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551565,"byte_end":551627,"line_start":428,"line_end":428,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551632,"byte_end":551639,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4976},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552136,"byte_end":552139,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"any","qualname":"<XY<bool>>::any","value":"pub fn any(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any of `x` or `y` is `true`.","sig":null,"attributes":[{"value":"/ Returns `true` if any of `x` or `y` is `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551805,"byte_end":551855,"line_start":437,"line_end":437,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551860,"byte_end":551863,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551868,"byte_end":551882,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551887,"byte_end":551890,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551895,"byte_end":551906,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551911,"byte_end":551933,"line_start":442,"line_end":442,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(XY::new(true, false).any(), true);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551938,"byte_end":551987,"line_start":443,"line_end":443,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(XY::new(false, false).any(), false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551992,"byte_end":552043,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(XY::new('a', 'b').map(|c| c == 'a').any(), true);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552048,"byte_end":552112,"line_start":445,"line_end":445,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552117,"byte_end":552124,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4980},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552601,"byte_end":552605,"line_start":463,"line_end":463,"column_start":12,"column_end":16},"name":"both","qualname":"<XY<bool>>::both","value":"pub fn both(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if both `x` and `y` are `true`.","sig":null,"attributes":[{"value":"/ Returns `true` if both `x` and `y` are `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552262,"byte_end":552312,"line_start":453,"line_end":453,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552317,"byte_end":552320,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552325,"byte_end":552339,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552344,"byte_end":552347,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552352,"byte_end":552363,"line_start":457,"line_end":457,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552368,"byte_end":552390,"line_start":458,"line_end":458,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(XY::new(true, false).both(), false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552395,"byte_end":552446,"line_start":459,"line_end":459,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(XY::new(true, true).both(), true);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552451,"byte_end":552500,"line_start":460,"line_end":460,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(XY::new(\"abc\", \"de\").map(|s| s.len() > 2).both(), false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552505,"byte_end":552577,"line_start":461,"line_end":461,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552582,"byte_end":552589,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4984},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553055,"byte_end":553061,"line_start":480,"line_end":480,"column_start":12,"column_end":18},"name":"select","qualname":"<XY<bool>>::select","value":"pub fn select<T>(Self, XY<T>) -> XY<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" For each axis, keeps elements from `other` if `self` is `true`.","sig":null,"attributes":[{"value":"/ For each axis, keeps elements from `other` if `self` is `true`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552697,"byte_end":552764,"line_start":468,"line_end":468,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552769,"byte_end":552772,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552777,"byte_end":552791,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552796,"byte_end":552799,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552804,"byte_end":552815,"line_start":472,"line_end":472,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552820,"byte_end":552842,"line_start":473,"line_end":473,"column_start":5,"column_end":27}},{"value":"/ let choice = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552847,"byte_end":552885,"line_start":474,"line_end":474,"column_start":5,"column_end":43}},{"value":"/ let values = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552890,"byte_end":552921,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"/ let selection = choice.select(values);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552926,"byte_end":552968,"line_start":476,"line_end":476,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552973,"byte_end":552976,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(selection, XY::new(Some(1), None));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":552981,"byte_end":553031,"line_start":478,"line_end":478,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553036,"byte_end":553043,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4987},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553593,"byte_end":553602,"line_start":497,"line_end":497,"column_start":12,"column_end":21},"name":"select_or","qualname":"<XY<bool>>::select_or","value":"pub fn select_or<T>(Self, XY<T>, XY<T>) -> XY<T>","parent":null,"children":[],"decl_id":null,"docs":" For each axis, selects `if_true` if `self` is true, else `if_false`.","sig":null,"attributes":[{"value":"/ For each axis, selects `if_true` if `self` is true, else `if_false`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553188,"byte_end":553260,"line_start":484,"line_end":484,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553265,"byte_end":553268,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553273,"byte_end":553287,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553292,"byte_end":553295,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553300,"byte_end":553311,"line_start":488,"line_end":488,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553316,"byte_end":553338,"line_start":489,"line_end":489,"column_start":5,"column_end":27}},{"value":"/ let choice = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553343,"byte_end":553381,"line_start":490,"line_end":490,"column_start":5,"column_end":43}},{"value":"/ let values = XY::new(1, 2);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553386,"byte_end":553417,"line_start":491,"line_end":491,"column_start":5,"column_end":36}},{"value":"/ let fallback = XY::new(3, 4);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553422,"byte_end":553455,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/ let selection = choice.select_or(values, fallback);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553460,"byte_end":553515,"line_start":493,"line_end":493,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553520,"byte_end":553523,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(selection, XY::new(1, 4));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553528,"byte_end":553569,"line_start":495,"line_end":495,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553574,"byte_end":553581,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4989},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553986,"byte_end":553989,"line_start":511,"line_end":511,"column_start":12,"column_end":15},"name":"and","qualname":"<XY<bool>>::and","value":"pub fn and(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a term-by-term AND operation.","sig":null,"attributes":[{"value":"/ Returns a term-by-term AND operation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553716,"byte_end":553757,"line_start":501,"line_end":501,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553762,"byte_end":553765,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553770,"byte_end":553784,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553789,"byte_end":553792,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553797,"byte_end":553808,"line_start":505,"line_end":505,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553813,"byte_end":553835,"line_start":506,"line_end":506,"column_start":5,"column_end":27}},{"value":"/ let a = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553840,"byte_end":553873,"line_start":507,"line_end":507,"column_start":5,"column_end":38}},{"value":"/ let b = XY::new(true, true);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553878,"byte_end":553910,"line_start":508,"line_end":508,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(a.and(b), XY::new(true, false));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553915,"byte_end":553962,"line_start":509,"line_end":509,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":553967,"byte_end":553974,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554340,"byte_end":554342,"line_start":525,"line_end":525,"column_start":12,"column_end":14},"name":"or","qualname":"<XY<bool>>::or","value":"pub fn or(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a term-by-term OR operation.","sig":null,"attributes":[{"value":"/ Returns a term-by-term OR operation.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554073,"byte_end":554113,"line_start":515,"line_end":515,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554118,"byte_end":554121,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554126,"byte_end":554140,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554145,"byte_end":554148,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554153,"byte_end":554164,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/ # use cursive::XY;","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554169,"byte_end":554191,"line_start":520,"line_end":520,"column_start":5,"column_end":27}},{"value":"/ let a = XY::new(true, false);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554196,"byte_end":554229,"line_start":521,"line_end":521,"column_start":5,"column_end":38}},{"value":"/ let b = XY::new(true, true);","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554234,"byte_end":554266,"line_start":522,"line_end":522,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(a.or(b), XY::new(true, true));","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554271,"byte_end":554316,"line_start":523,"line_end":523,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554321,"byte_end":554328,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5014},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::backend","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","parent":null,"children":[{"krate":0,"index":5015},{"krate":0,"index":5018},{"krate":0,"index":5021},{"krate":0,"index":5024},{"krate":0,"index":5027},{"krate":0,"index":5057},{"krate":0,"index":5177}],"decl_id":null,"docs":" Define backends using common libraries.","sig":null,"attributes":[{"value":"/ Define backends using common libraries.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":556732,"byte_end":556775,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":556776,"byte_end":556779,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Cursive doesn't print anything by itself: it delegates this job to a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":556780,"byte_end":556852,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ backend library, which handles all actual input and output.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":556853,"byte_end":556916,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":556917,"byte_end":556920,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module defines the `Backend` trait, as well as a few implementations","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":556921,"byte_end":556998,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ using some common libraries. Each of those included backends needs a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":556999,"byte_end":557071,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ corresonding feature to be enabled.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557072,"byte_end":557111,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dummy","qualname":"::backend::dummy","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","parent":null,"children":[{"krate":0,"index":5028},{"krate":0,"index":5031},{"krate":0,"index":5034},{"krate":0,"index":5037},{"krate":0,"index":5040},{"krate":0,"index":5042},{"krate":0,"index":5044}],"decl_id":null,"docs":" Dummy backend\n","sig":null,"attributes":[{"value":"/ Dummy backend","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560157,"byte_end":560174,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":5040},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560365,"byte_end":560372,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Backend","qualname":"::backend::dummy::Backend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy backend that does nothing and immediately exits.","sig":null,"attributes":[{"value":"/ Dummy backend that does nothing and immediately exits.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560262,"byte_end":560320,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560321,"byte_end":560324,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Mostly used for testing.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560325,"byte_end":560353,"line_start":10,"line_end":10,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5043},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560438,"byte_end":560442,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"init","qualname":"<Backend>::init","value":"pub fn init() -> Box<dyn backend::Backend> where Self: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dummy backend.\n","sig":null,"attributes":[{"value":"/ Creates a new dummy backend.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560394,"byte_end":560426,"line_start":14,"line_end":14,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":5057},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crossterm","qualname":"::backend::crossterm","value":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","parent":null,"children":[{"krate":0,"index":5058},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5065},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5072},{"krate":0,"index":5075},{"krate":0,"index":5078},{"krate":0,"index":5081},{"krate":0,"index":5084},{"krate":0,"index":5087},{"krate":0,"index":5090},{"krate":0,"index":5093},{"krate":0,"index":5096},{"krate":0,"index":5099},{"krate":0,"index":5102},{"krate":0,"index":5105},{"krate":0,"index":5108},{"krate":0,"index":5111},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5118},{"krate":0,"index":5121},{"krate":0,"index":5124},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5131},{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":5144},{"krate":0,"index":5152},{"krate":0,"index":5160},{"krate":0,"index":5174}],"decl_id":null,"docs":" Backend using the pure-rust crossplatform crossterm library.","sig":null,"attributes":[{"value":"/ Backend using the pure-rust crossplatform crossterm library.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":581548,"byte_end":581612,"line_start":1,"line_end":1,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":581613,"byte_end":581616,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Requires the `crossterm-backend` feature.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":581617,"byte_end":581662,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"cfg(feature = \"crossterm\")","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":581664,"byte_end":581694,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5144},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":582174,"byte_end":582181,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"Backend","qualname":"::backend::crossterm::Backend","value":"Backend {  }","parent":null,"children":[{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151}],"decl_id":null,"docs":" Backend using crossterm\n","sig":null,"attributes":[{"value":"/ Backend using crossterm","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":582135,"byte_end":582162,"line_start":20,"line_end":20,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5153},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":582527,"byte_end":582531,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"init","qualname":"<Backend>::init","value":"pub fn init() -> std::io::Result<Box<dyn backend::Backend>> where Self: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new crossterm backend.\n","sig":null,"attributes":[{"value":"/ Creates a new crossterm backend.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":582479,"byte_end":582515,"line_start":33,"line_end":33,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":5177},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557995,"byte_end":558002,"line_start":39,"line_end":39,"column_start":11,"column_end":18},"name":"Backend","qualname":"::backend::Backend","value":"Backend","parent":null,"children":[{"krate":0,"index":5178},{"krate":0,"index":5179},{"krate":0,"index":5180},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184},{"krate":0,"index":5185},{"krate":0,"index":5186},{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189}],"decl_id":null,"docs":" Trait defining the required methods to be a backend.","sig":null,"attributes":[{"value":"/ Trait defining the required methods to be a backend.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557323,"byte_end":557379,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557380,"byte_end":557383,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ A backend is the interface between the abstract view tree and the actual","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557384,"byte_end":557460,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ input/output, like a terminal.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557461,"byte_end":557495,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557496,"byte_end":557499,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It usually delegates the work to a terminal-handling library like ncurses","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557500,"byte_end":557577,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ or termion, or it can entirely simulate a terminal and show it as a","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557578,"byte_end":557649,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ graphical window (`BearLibTerminal`).","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557650,"byte_end":557691,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557692,"byte_end":557695,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ When creating a new cursive tree with `Cursive::new()`, you will need to","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557696,"byte_end":557772,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ provide a backend initializer - usually their `init()` function.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557773,"byte_end":557841,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557842,"byte_end":557845,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Backends are responsible for handling input and converting it to `Event`. Input must be","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557846,"byte_end":557937,"line_start":37,"line_end":37,"column_start":1,"column_end":92}},{"value":"/ non-blocking, it will be polled regularly.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557938,"byte_end":557984,"line_start":38,"line_end":38,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5178},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558096,"byte_end":558106,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"poll_event","qualname":"::backend::Backend::poll_event","value":"pub fn poll_event(&mut Self) -> Option<Event>","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Polls the backend for any input.","sig":null,"attributes":[{"value":"/ Polls the backend for any input.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558009,"byte_end":558045,"line_start":40,"line_end":40,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558050,"byte_end":558053,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Should return immediately.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558058,"byte_end":558088,"line_start":42,"line_end":42,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5179},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558305,"byte_end":558311,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"finish","qualname":"::backend::Backend::finish","value":"pub fn finish(&mut Self)","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Prepares to close the backend.","sig":null,"attributes":[{"value":"/ Prepares to close the backend.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558202,"byte_end":558236,"line_start":47,"line_end":47,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558241,"byte_end":558244,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This should clear any state in the terminal.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558249,"byte_end":558297,"line_start":49,"line_end":49,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5180},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558563,"byte_end":558570,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"refresh","qualname":"::backend::Backend::refresh","value":"pub fn refresh(&mut Self)","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Refresh the screen.","sig":null,"attributes":[{"value":"/ Refresh the screen.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558329,"byte_end":558352,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558357,"byte_end":558360,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This will be called each frame after drawing has been done.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558365,"byte_end":558428,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558433,"byte_end":558436,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ A backend could, for example, buffer any print command, and apply","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558441,"byte_end":558510,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ everything when refresh() is called.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558515,"byte_end":558555,"line_start":57,"line_end":57,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5181},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558653,"byte_end":558663,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"has_colors","qualname":"::backend::Backend::has_colors","value":"pub fn has_colors(&Self) -> bool","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Should return `true` if this backend supports colors.\n","sig":null,"attributes":[{"value":"/ Should return `true` if this backend supports colors.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558588,"byte_end":558645,"line_start":60,"line_end":60,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5182},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558721,"byte_end":558732,"line_start":64,"line_end":64,"column_start":8,"column_end":19},"name":"screen_size","qualname":"::backend::Backend::screen_size","value":"pub fn screen_size(&Self) -> Vec2","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Returns the screen size.\n","sig":null,"attributes":[{"value":"/ Returns the screen size.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558685,"byte_end":558713,"line_start":63,"line_end":63,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558795,"byte_end":558803,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"print_at","qualname":"::backend::Backend::print_at","value":"pub fn print_at(&Self, Vec2, &str)","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Main method used for printing\n","sig":null,"attributes":[{"value":"/ Main method used for printing","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558754,"byte_end":558787,"line_start":66,"line_end":66,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5184},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558971,"byte_end":558983,"line_start":71,"line_end":71,"column_start":8,"column_end":20},"name":"print_at_rep","qualname":"::backend::Backend::print_at_rep","value":"pub fn print_at_rep(&Self, Vec2, usize, &str)","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" First positions the cursor, similar to `print_at`, and then prints the given number of\n `repetitions` of `text`.\n","sig":null,"attributes":[{"value":"/ First positions the cursor, similar to `print_at`, and then prints the given number of","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558840,"byte_end":558930,"line_start":69,"line_end":69,"column_start":5,"column_end":95}},{"value":"/ `repetitions` of `text`.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":558935,"byte_end":558963,"line_start":70,"line_end":70,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5185},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559474,"byte_end":559479,"line_start":88,"line_end":88,"column_start":8,"column_end":13},"name":"clear","qualname":"::backend::Backend::clear","value":"pub fn clear(&Self, theme::Color)","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Clears the screen with the given color.\n","sig":null,"attributes":[{"value":"/ Clears the screen with the given color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559423,"byte_end":559466,"line_start":87,"line_end":87,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5186},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559694,"byte_end":559703,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"set_color","qualname":"::backend::Backend::set_color","value":"pub fn set_color(&Self, theme::ColorPair) -> theme::ColorPair","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Starts using a new color.","sig":null,"attributes":[{"value":"/ Starts using a new color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559514,"byte_end":559543,"line_start":90,"line_end":90,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559548,"byte_end":559551,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This should return the previously active color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559556,"byte_end":559607,"line_start":92,"line_end":92,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559612,"byte_end":559615,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Any call to `print_at` from now on should use the given color.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559620,"byte_end":559686,"line_start":94,"line_end":94,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559880,"byte_end":559890,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"set_effect","qualname":"::backend::Backend::set_effect","value":"pub fn set_effect(&Self, theme::Effect)","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Enables the given effect.","sig":null,"attributes":[{"value":"/ Enables the given effect.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559763,"byte_end":559792,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559797,"byte_end":559800,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Any call to `print_at` from now on should use the given effect.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559805,"byte_end":559872,"line_start":99,"line_end":99,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5188},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559965,"byte_end":559977,"line_start":103,"line_end":103,"column_start":8,"column_end":20},"name":"unset_effect","qualname":"::backend::Backend::unset_effect","value":"pub fn unset_effect(&Self, theme::Effect)","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Disables the given effect.\n","sig":null,"attributes":[{"value":"/ Disables the given effect.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":559927,"byte_end":559957,"line_start":102,"line_end":102,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":560108,"byte_end":560112,"line_start":108,"line_end":108,"column_start":8,"column_end":12},"name":"name","qualname":"::backend::Backend::name","value":"pub fn name(&Self) -> &str","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":" Returns a name to identify the backend.","sig":null,"attributes":[{"value":"/ Returns a name to identify the backend.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":560014,"byte_end":560057,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":560062,"byte_end":560065,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Mostly used for debugging.","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":560070,"byte_end":560100,"line_start":107,"line_end":107,"column_start":5,"column_end":35}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4384,"byte_end":4396,"line_start":35,"line_end":35,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5931,"byte_end":5943,"line_start":90,"line_end":90,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6055,"byte_end":6067,"line_start":96,"line_end":96,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6164,"byte_end":6176,"line_start":102,"line_end":102,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6273,"byte_end":6285,"line_start":108,"line_end":108,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6398,"byte_end":6406,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7208,"byte_end":7216,"line_start":150,"line_end":150,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7396,"byte_end":7404,"line_start":157,"line_end":157,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7540,"byte_end":7548,"line_start":163,"line_end":163,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7689,"byte_end":7697,"line_start":169,"line_end":169,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8112,"byte_end":8123,"line_start":184,"line_end":184,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10962,"byte_end":10965,"line_start":317,"line_end":317,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12508,"byte_end":12518,"line_start":380,"line_end":380,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15058,"byte_end":15063,"line_start":461,"line_end":461,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16418,"byte_end":16423,"line_start":512,"line_end":512,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16509,"byte_end":16514,"line_start":518,"line_end":518,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":22418,"byte_end":22419,"line_start":106,"line_end":106,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26210,"byte_end":26211,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":28568,"byte_end":28569,"line_start":46,"line_end":46,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29999,"byte_end":30006,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30861,"byte_end":30868,"line_start":54,"line_end":54,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":31061,"byte_end":31068,"line_start":62,"line_end":62,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":31273,"byte_end":31280,"line_start":68,"line_end":68,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":31479,"byte_end":31486,"line_start":75,"line_end":75,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":31680,"byte_end":31687,"line_start":83,"line_end":83,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":32023,"byte_end":32030,"line_start":98,"line_end":98,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":32352,"byte_end":32359,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":32643,"byte_end":32650,"line_start":126,"line_end":126,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33044,"byte_end":33052,"line_start":8,"line_end":8,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34822,"byte_end":34828,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36497,"byte_end":36506,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38358,"byte_end":38372,"line_start":22,"line_end":22,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39660,"byte_end":39668,"line_start":10,"line_end":10,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46999,"byte_end":47000,"line_start":77,"line_end":77,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48483,"byte_end":48484,"line_start":50,"line_end":50,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\core.rs","byte_start":57582,"byte_end":57586,"line_start":72,"line_end":72,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\core.rs","byte_start":57650,"byte_end":57654,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49213,"byte_end":49227,"line_start":28,"line_end":28,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87019,"byte_end":87029,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96288,"byte_end":96289,"line_start":14,"line_end":14,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\into_boxed_view.rs","byte_start":96508,"byte_end":96509,"line_start":9,"line_end":9,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\into_boxed_view.rs","byte_start":96632,"byte_end":96635,"line_start":18,"line_end":18,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97169,"byte_end":97176,"line_start":10,"line_end":10,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106012,"byte_end":106028,"line_start":21,"line_end":21,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106221,"byte_end":106237,"line_start":28,"line_end":28,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106416,"byte_end":106429,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":107073,"byte_end":107086,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107805,"byte_end":107808,"line_start":17,"line_end":17,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\chunk.rs","byte_start":109375,"byte_end":109380,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\chunk_iterator.rs","byte_start":112296,"byte_end":112309,"line_start":22,"line_end":22,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\chunk_iterator.rs","byte_start":112768,"byte_end":112781,"line_start":37,"line_end":37,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118372,"byte_end":118385,"line_start":35,"line_end":35,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":119106,"byte_end":119119,"line_start":62,"line_end":62,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127232,"byte_end":127235,"line_start":13,"line_end":13,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128532,"byte_end":128539,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment_merge_iterator.rs","byte_start":129882,"byte_end":129902,"line_start":8,"line_end":8,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment_merge_iterator.rs","byte_start":130060,"byte_end":130080,"line_start":17,"line_end":17,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131860,"byte_end":131873,"line_start":28,"line_end":28,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133945,"byte_end":133959,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134489,"byte_end":134503,"line_start":56,"line_end":56,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135855,"byte_end":135868,"line_start":49,"line_end":49,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136179,"byte_end":136193,"line_start":67,"line_end":67,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136418,"byte_end":136428,"line_start":82,"line_end":82,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136637,"byte_end":136650,"line_start":97,"line_end":97,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136806,"byte_end":136816,"line_start":107,"line_end":107,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137766,"byte_end":137776,"line_start":143,"line_end":143,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137925,"byte_end":137938,"line_start":152,"line_end":152,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138145,"byte_end":138158,"line_start":162,"line_end":162,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140846,"byte_end":140856,"line_start":257,"line_end":257,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141308,"byte_end":141319,"line_start":276,"line_end":276,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141703,"byte_end":141714,"line_start":295,"line_end":295,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143202,"byte_end":143212,"line_start":352,"line_end":352,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145214,"byte_end":145219,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146597,"byte_end":146603,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":147193,"byte_end":147199,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149021,"byte_end":149032,"line_start":41,"line_end":41,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152031,"byte_end":152040,"line_start":137,"line_end":137,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154132,"byte_end":154140,"line_start":210,"line_end":210,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154939,"byte_end":154947,"line_start":240,"line_end":240,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156254,"byte_end":156267,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158300,"byte_end":158308,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159569,"byte_end":159577,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172492,"byte_end":172503,"line_start":16,"line_end":16,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173348,"byte_end":173357,"line_start":38,"line_end":38,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173631,"byte_end":173640,"line_start":50,"line_end":50,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174755,"byte_end":174760,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179375,"byte_end":179384,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180330,"byte_end":180340,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182460,"byte_end":182470,"line_start":88,"line_end":88,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182588,"byte_end":182598,"line_start":94,"line_end":94,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182736,"byte_end":182746,"line_start":100,"line_end":100,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182871,"byte_end":182881,"line_start":106,"line_end":106,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183006,"byte_end":183016,"line_start":112,"line_end":112,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183456,"byte_end":183465,"line_start":132,"line_end":132,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183756,"byte_end":183765,"line_start":142,"line_end":142,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183873,"byte_end":183882,"line_start":148,"line_end":148,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185634,"byte_end":185641,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185862,"byte_end":185869,"line_start":59,"line_end":59,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185998,"byte_end":186005,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":188838,"byte_end":188845,"line_start":147,"line_end":147,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192320,"byte_end":192332,"line_start":254,"line_end":254,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193006,"byte_end":193011,"line_start":20,"line_end":20,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193076,"byte_end":193081,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193957,"byte_end":193962,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":194137,"byte_end":194142,"line_start":71,"line_end":71,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":194311,"byte_end":194316,"line_start":80,"line_end":80,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":194431,"byte_end":194436,"line_start":86,"line_end":86,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":194555,"byte_end":194560,"line_start":92,"line_end":92,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170292,"byte_end":170297,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170476,"byte_end":170481,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171224,"byte_end":171229,"line_start":226,"line_end":226,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171333,"byte_end":171338,"line_start":232,"line_end":232,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195128,"byte_end":195130,"line_start":20,"line_end":20,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195546,"byte_end":195548,"line_start":35,"line_end":35,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198528,"byte_end":198530,"line_start":148,"line_end":148,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201371,"byte_end":201373,"line_start":244,"line_end":244,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202200,"byte_end":202202,"line_start":272,"line_end":272,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":203143,"byte_end":203145,"line_start":312,"line_end":312,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":203531,"byte_end":203533,"line_start":331,"line_end":331,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":203947,"byte_end":203949,"line_start":350,"line_end":350,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":204253,"byte_end":204255,"line_start":363,"line_end":363,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":204551,"byte_end":204553,"line_start":376,"line_end":376,"column_start":25,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":204847,"byte_end":204849,"line_start":389,"line_end":389,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":205167,"byte_end":205169,"line_start":403,"line_end":403,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":205525,"byte_end":205527,"line_start":422,"line_end":422,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":205905,"byte_end":205907,"line_start":441,"line_end":441,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":206201,"byte_end":206203,"line_start":456,"line_end":456,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":206509,"byte_end":206511,"line_start":471,"line_end":471,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":206880,"byte_end":206882,"line_start":489,"line_end":489,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211330,"byte_end":211337,"line_start":41,"line_end":41,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":6125},{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":216593,"byte_end":216600,"line_start":208,"line_end":208,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6127},{"krate":0,"index":6128},{"krate":0,"index":6131},{"krate":0,"index":6134},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221911,"byte_end":221917,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":224485,"byte_end":224491,"line_start":139,"line_end":139,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":227482,"byte_end":227488,"line_start":29,"line_end":29,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228086,"byte_end":228092,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":233307,"byte_end":233313,"line_start":244,"line_end":244,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":234768,"byte_end":234776,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6137},{"krate":0,"index":6138},{"krate":0,"index":6139},{"krate":0,"index":6140},{"krate":0,"index":6141},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236883,"byte_end":236891,"line_start":107,"line_end":107,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238349,"byte_end":238362,"line_start":17,"line_end":17,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":6142},{"krate":0,"index":6143}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239654,"byte_end":239667,"line_start":60,"line_end":60,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6148},{"krate":0,"index":6151},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242257,"byte_end":242266,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242376,"byte_end":242385,"line_start":21,"line_end":21,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242458,"byte_end":242467,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245140,"byte_end":245151,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":246343,"byte_end":246349,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":260867,"byte_end":260873,"line_start":524,"line_end":524,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dummy.rs","byte_start":266254,"byte_end":266263,"line_start":9,"line_end":9,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":269718,"byte_end":269726,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2422},{"krate":0,"index":2425},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2433},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":282298,"byte_end":282306,"line_start":504,"line_end":504,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289732,"byte_end":289746,"line_start":13,"line_end":13,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6179}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":290040,"byte_end":290054,"line_start":27,"line_end":27,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6184},{"krate":0,"index":6187},{"krate":0,"index":2493},{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290951,"byte_end":290963,"line_start":21,"line_end":21,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":6188},{"krate":0,"index":6189}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":292054,"byte_end":292066,"line_start":68,"line_end":68,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293752,"byte_end":293758,"line_start":21,"line_end":21,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294531,"byte_end":294537,"line_start":47,"line_end":47,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2599},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296328,"byte_end":296333,"line_start":14,"line_end":14,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2622},{"krate":0,"index":6196},{"krate":0,"index":6197}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296500,"byte_end":296505,"line_start":23,"line_end":23,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6198},{"krate":0,"index":6199},{"krate":0,"index":6202},{"krate":0,"index":6205},{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":297427,"byte_end":297432,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2687},{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":298002,"byte_end":298015,"line_start":59,"line_end":59,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":298330,"byte_end":298343,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299202,"byte_end":299214,"line_start":112,"line_end":112,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2733},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":306852,"byte_end":306864,"line_start":370,"line_end":370,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318422,"byte_end":318431,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2830}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319034,"byte_end":319042,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2864},{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":324732,"byte_end":324740,"line_start":253,"line_end":253,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2878},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331078,"byte_end":331087,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2959},{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331271,"byte_end":331280,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2994}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":339990,"byte_end":339999,"line_start":315,"line_end":315,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2996},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345242,"byte_end":345249,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":351752,"byte_end":351759,"line_start":265,"line_end":265,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358296,"byte_end":358302,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358560,"byte_end":358571,"line_start":68,"line_end":68,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3155},{"krate":0,"index":3159},{"krate":0,"index":3163},{"krate":0,"index":3167},{"krate":0,"index":3171},{"krate":0,"index":3175},{"krate":0,"index":3178},{"krate":0,"index":3181},{"krate":0,"index":6232},{"krate":0,"index":6233}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":364584,"byte_end":364595,"line_start":257,"line_end":257,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367177,"byte_end":367187,"line_start":27,"line_end":27,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367619,"byte_end":367629,"line_start":41,"line_end":41,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6242},{"krate":0,"index":6243},{"krate":0,"index":6246},{"krate":0,"index":6249},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369001,"byte_end":369006,"line_start":27,"line_end":27,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3270},{"krate":0,"index":6259},{"krate":0,"index":6260},{"krate":0,"index":3271},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3282}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":371034,"byte_end":371039,"line_start":93,"line_end":93,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6268},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374332,"byte_end":374343,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3340},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":378221,"byte_end":378232,"line_start":227,"line_end":227,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":379960,"byte_end":379971,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380470,"byte_end":380480,"line_start":37,"line_end":37,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380559,"byte_end":380569,"line_start":43,"line_end":43,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382148,"byte_end":382158,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3425}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382965,"byte_end":382976,"line_start":123,"line_end":123,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":384716,"byte_end":384727,"line_start":187,"line_end":187,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386081,"byte_end":386091,"line_start":14,"line_end":14,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386285,"byte_end":386295,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":6282},{"krate":0,"index":6283}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389526,"byte_end":389536,"line_start":143,"line_end":143,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":393594,"byte_end":393604,"line_start":85,"line_end":85,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3638}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":393683,"byte_end":393693,"line_start":91,"line_end":91,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3645},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3655},{"krate":0,"index":3658},{"krate":0,"index":3663},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3688},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3721},{"krate":0,"index":3725},{"krate":0,"index":3728}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":411890,"byte_end":411900,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3735},{"krate":0,"index":3737},{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413249,"byte_end":413259,"line_start":709,"line_end":709,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3746}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413686,"byte_end":413696,"line_start":722,"line_end":722,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3750},{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":417021,"byte_end":417025,"line_start":829,"line_end":829,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421245,"byte_end":421255,"line_start":17,"line_end":17,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":6284},{"krate":0,"index":6285}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":422120,"byte_end":422130,"line_start":54,"line_end":54,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6290},{"krate":0,"index":6293},{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423931,"byte_end":423940,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":6294},{"krate":0,"index":6295}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":424164,"byte_end":424173,"line_start":25,"line_end":25,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6300},{"krate":0,"index":6303},{"krate":0,"index":3831}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":424867,"byte_end":424877,"line_start":22,"line_end":22,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3895},{"krate":0,"index":3897},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":427363,"byte_end":427373,"line_start":116,"line_end":116,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3906},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3911}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":431627,"byte_end":431636,"line_start":43,"line_end":43,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":432425,"byte_end":432437,"line_start":73,"line_end":73,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4004}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":433259,"byte_end":433271,"line_start":101,"line_end":101,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":434266,"byte_end":434278,"line_start":130,"line_end":130,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":436956,"byte_end":436965,"line_start":210,"line_end":210,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4031},{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":4039},{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":4050},{"krate":0,"index":4052},{"krate":0,"index":4054},{"krate":0,"index":4056},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4065},{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":447601,"byte_end":447622,"line_start":557,"line_end":557,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4081}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":447958,"byte_end":447979,"line_start":573,"line_end":573,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4084},{"krate":0,"index":4085}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":448460,"byte_end":448469,"line_start":596,"line_end":596,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":455582,"byte_end":455590,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":467814,"byte_end":467822,"line_start":445,"line_end":445,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4229},{"krate":0,"index":4231},{"krate":0,"index":4236},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475663,"byte_end":475674,"line_start":37,"line_end":37,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4300}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476458,"byte_end":476472,"line_start":70,"line_end":70,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4305},{"krate":0,"index":4306}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476590,"byte_end":476601,"line_start":78,"line_end":78,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4308},{"krate":0,"index":4311},{"krate":0,"index":4314},{"krate":0,"index":4315}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":477884,"byte_end":477900,"line_start":130,"line_end":130,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4322},{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479076,"byte_end":479084,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4334},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4341},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4351},{"krate":0,"index":4353},{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4359}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":483781,"byte_end":483789,"line_start":348,"line_end":348,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4361},{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485713,"byte_end":485724,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":6331},{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":486257,"byte_end":486268,"line_start":37,"line_end":37,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6333},{"krate":0,"index":6334},{"krate":0,"index":6337},{"krate":0,"index":6340},{"krate":0,"index":4398}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486641,"byte_end":486648,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4423}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":487069,"byte_end":487076,"line_start":31,"line_end":31,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4425},{"krate":0,"index":4426}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":487190,"byte_end":487197,"line_start":39,"line_end":39,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4428}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":487301,"byte_end":487308,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4434}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489622,"byte_end":489623,"line_start":74,"line_end":74,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4656}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490157,"byte_end":490164,"line_start":94,"line_end":94,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6342}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490660,"byte_end":490667,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4658},{"krate":0,"index":4661},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4669},{"krate":0,"index":4671},{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4687},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4692},{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4701},{"krate":0,"index":4705},{"krate":0,"index":4707},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4712},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4733}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515317,"byte_end":515324,"line_start":899,"line_end":899,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4735}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517319,"byte_end":517326,"line_start":64,"line_end":64,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4790},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4797},{"krate":0,"index":4799},{"krate":0,"index":4802},{"krate":0,"index":4804},{"krate":0,"index":4806},{"krate":0,"index":4808},{"krate":0,"index":4810},{"krate":0,"index":4814},{"krate":0,"index":4816},{"krate":0,"index":4818},{"krate":0,"index":4820},{"krate":0,"index":4823},{"krate":0,"index":4828},{"krate":0,"index":4830},{"krate":0,"index":4832},{"krate":0,"index":4834},{"krate":0,"index":4836},{"krate":0,"index":4839},{"krate":0,"index":4841},{"krate":0,"index":4843},{"krate":0,"index":4846},{"krate":0,"index":4848},{"krate":0,"index":4850},{"krate":0,"index":4852},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535488,"byte_end":535492,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4867}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535678,"byte_end":535682,"line_start":24,"line_end":24,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4870},{"krate":0,"index":4871}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535827,"byte_end":535831,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4873},{"krate":0,"index":4876},{"krate":0,"index":4879},{"krate":0,"index":4881},{"krate":0,"index":4883},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4896},{"krate":0,"index":4897}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":540138,"byte_end":540139,"line_start":30,"line_end":30,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540415,"byte_end":540417,"line_start":13,"line_end":13,"column_start":26,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4920}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540651,"byte_end":540653,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4928},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4938},{"krate":0,"index":4940},{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4944},{"krate":0,"index":4945},{"krate":0,"index":4946},{"krate":0,"index":4947},{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4956},{"krate":0,"index":4961},{"krate":0,"index":4965}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549477,"byte_end":549479,"line_start":350,"line_end":350,"column_start":16,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4968},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551362,"byte_end":551364,"line_start":420,"line_end":420,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4974}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551753,"byte_end":551755,"line_start":435,"line_end":435,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":4976},{"krate":0,"index":4980},{"krate":0,"index":4984},{"krate":0,"index":4987},{"krate":0,"index":4989},{"krate":0,"index":4991}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554449,"byte_end":554451,"line_start":530,"line_end":530,"column_start":26,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4995}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554601,"byte_end":554603,"line_start":537,"line_end":537,"column_start":37,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4999}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560380,"byte_end":560387,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5043}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560572,"byte_end":560579,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5045},{"krate":0,"index":5046},{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":582465,"byte_end":582472,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5157},{"krate":0,"index":5159}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":587223,"byte_end":587230,"line_start":157,"line_end":157,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5161},{"krate":0,"index":5162},{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5167},{"krate":0,"index":5168},{"krate":0,"index":5169},{"krate":0,"index":5170},{"krate":0,"index":5171},{"krate":0,"index":5172},{"krate":0,"index":5173}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2275,"byte_end":2281,"line_start":77,"line_end":77,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2292,"byte_end":2297,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":24}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2320,"byte_end":2324,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":124}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2348,"byte_end":2353,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":825}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","byte_start":96805,"byte_end":96810,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":846}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\mod.rs","byte_start":101840,"byte_end":101846,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":847}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\mod.rs","byte_start":101856,"byte_end":101861,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":921}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","byte_start":96820,"byte_end":96826,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1113}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\mod.rs","byte_start":96848,"byte_end":96852,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1160}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2364,"byte_end":2369,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1263}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2379,"byte_end":2388,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1275}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2398,"byte_end":2404,"line_start":88,"line_end":88,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1309}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2414,"byte_end":2418,"line_start":89,"line_end":89,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1331}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2428,"byte_end":2433,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1385}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2443,"byte_end":2446,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1625}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2456,"byte_end":2461,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1750}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\lib.rs","byte_start":2591,"byte_end":2598,"line_start":104,"line_end":104,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5014}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557249,"byte_end":557254,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5027}},{"kind":"Mod","span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\mod.rs","byte_start":557278,"byte_end":557287,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":5057}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":4384,"byte_end":4396,"line_start":35,"line_end":35,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":5931,"byte_end":5943,"line_start":90,"line_end":90,"column_start":22,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6055,"byte_end":6067,"line_start":96,"line_end":96,"column_start":21,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6164,"byte_end":6176,"line_start":102,"line_end":102,"column_start":20,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6273,"byte_end":6285,"line_start":108,"line_end":108,"column_start":21,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":6398,"byte_end":6406,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":5218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7208,"byte_end":7216,"line_start":150,"line_end":150,"column_start":16,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":5218},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7396,"byte_end":7404,"line_start":157,"line_end":157,"column_start":46,"column_end":54},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":5218},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7540,"byte_end":7548,"line_start":163,"line_end":163,"column_start":49,"column_end":57},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":5218},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":7689,"byte_end":7697,"line_start":169,"line_end":169,"column_start":42,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5218},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":8112,"byte_end":8123,"line_start":184,"line_end":184,"column_start":6,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":10962,"byte_end":10965,"line_start":317,"line_end":317,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":12508,"byte_end":12518,"line_start":380,"line_end":380,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":5323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":15058,"byte_end":15063,"line_start":461,"line_end":461,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16418,"byte_end":16423,"line_start":512,"line_end":512,"column_start":21,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5352},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\event.rs","byte_start":16509,"byte_end":16514,"line_start":518,"line_end":518,"column_start":20,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5352},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_wrapper.rs","byte_start":22418,"byte_end":22419,"line_start":106,"line_end":106,"column_start":31,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":187},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\any.rs","byte_start":26210,"byte_end":26211,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":212},"to":{"krate":0,"index":207}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\finder.rs","byte_start":28568,"byte_end":28569,"line_start":46,"line_end":46,"column_start":26,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":256},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":29999,"byte_end":30006,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":30861,"byte_end":30868,"line_start":54,"line_end":54,"column_start":45,"column_end":52},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":31061,"byte_end":31068,"line_start":62,"line_end":62,"column_start":37,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":31273,"byte_end":31280,"line_start":68,"line_end":68,"column_start":41,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":31479,"byte_end":31486,"line_start":75,"line_end":75,"column_start":49,"column_end":56},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":31680,"byte_end":31687,"line_start":83,"line_end":83,"column_start":35,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":3083}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":32023,"byte_end":32030,"line_start":98,"line_end":98,"column_start":35,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":32352,"byte_end":32359,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\margins.rs","byte_start":32643,"byte_end":32650,"line_start":126,"line_end":126,"column_start":21,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":3093}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":33044,"byte_end":33052,"line_start":8,"line_end":8,"column_start":6,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\position.rs","byte_start":34822,"byte_end":34828,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":5418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_cache.rs","byte_start":36497,"byte_end":36506,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\size_constraint.rs","byte_start":38358,"byte_end":38372,"line_start":22,"line_end":22,"column_start":6,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_path.rs","byte_start":39660,"byte_end":39668,"line_start":10,"line_end":10,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40538,"byte_end":40541,"line_start":12,"line_end":12,"column_start":17,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":3677},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\view_trait.rs","byte_start":40544,"byte_end":40551,"line_start":12,"line_end":12,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":207},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":44767,"byte_end":44771,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":406},"to":{"krate":0,"index":431}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":44774,"byte_end":44779,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":431}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\boxable.rs","byte_start":46999,"byte_end":47000,"line_start":77,"line_end":77,"column_start":27,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":449},"to":{"krate":0,"index":431}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47172,"byte_end":47176,"line_start":7,"line_end":7,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":406},"to":{"krate":0,"index":457}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":47179,"byte_end":47184,"line_start":7,"line_end":7,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":457}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\identifiable.rs","byte_start":48483,"byte_end":48484,"line_start":50,"line_end":50,"column_start":32,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":461},"to":{"krate":0,"index":457}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\core.rs","byte_start":57582,"byte_end":57586,"line_start":72,"line_end":72,"column_start":18,"column_end":22},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5468},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\core.rs","byte_start":57650,"byte_end":57654,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll\\mod.rs","byte_start":49213,"byte_end":49227,"line_start":28,"line_end":28,"column_start":18,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5480},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scroll_base.rs","byte_start":87019,"byte_end":87029,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96119,"byte_end":96123,"line_start":7,"line_end":7,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":406},"to":{"krate":0,"index":757}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96126,"byte_end":96131,"line_start":7,"line_end":7,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":757}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\scrollable.rs","byte_start":96288,"byte_end":96289,"line_start":14,"line_end":14,"column_start":30,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":760},"to":{"krate":0,"index":757}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\into_boxed_view.rs","byte_start":96508,"byte_end":96509,"line_start":9,"line_end":9,"column_start":27,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":768},"to":{"krate":0,"index":765}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\view\\into_boxed_view.rs","byte_start":96632,"byte_end":96635,"line_start":18,"line_end":18,"column_start":24,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":765}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\counter.rs","byte_start":97169,"byte_end":97176,"line_start":10,"line_end":10,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106012,"byte_end":106028,"line_start":21,"line_end":21,"column_start":10,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106221,"byte_end":106237,"line_start":28,"line_end":28,"column_start":26,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":1167}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":106416,"byte_end":106429,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\lines_iterator.rs","byte_start":107073,"byte_end":107086,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\simple\\row.rs","byte_start":107805,"byte_end":107808,"line_start":17,"line_end":17,"column_start":6,"column_end":9},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\chunk.rs","byte_start":109375,"byte_end":109380,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\chunk_iterator.rs","byte_start":112296,"byte_end":112309,"line_start":22,"line_end":22,"column_start":9,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\chunk_iterator.rs","byte_start":112768,"byte_end":112781,"line_start":37,"line_end":37,"column_start":22,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":118372,"byte_end":118385,"line_start":35,"line_end":35,"column_start":9,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\lines_iterator.rs","byte_start":119106,"byte_end":119119,"line_start":62,"line_end":62,"column_start":22,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":999},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\row.rs","byte_start":127232,"byte_end":127235,"line_start":13,"line_end":13,"column_start":6,"column_end":9},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment.rs","byte_start":128532,"byte_end":128539,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment_merge_iterator.rs","byte_start":129882,"byte_end":129902,"line_start":8,"line_end":8,"column_start":9,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\lines\\spans\\segment_merge_iterator.rs","byte_start":130060,"byte_end":130080,"line_start":17,"line_end":17,"column_start":22,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\markup\\mod.rs","byte_start":131860,"byte_end":131873,"line_start":28,"line_end":28,"column_start":6,"column_end":19},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":133945,"byte_end":133959,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\reader.rs","byte_start":134489,"byte_end":134503,"line_start":56,"line_end":56,"column_start":24,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5580},"to":{"krate":1,"index":4343}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":135855,"byte_end":135868,"line_start":49,"line_end":49,"column_start":21,"column_end":34},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5590},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136179,"byte_end":136193,"line_start":67,"line_end":67,"column_start":29,"column_end":43},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1172},"to":{"krate":0,"index":1167}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136418,"byte_end":136428,"line_start":82,"line_end":82,"column_start":29,"column_end":39},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5611},"to":{"krate":0,"index":1167}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136637,"byte_end":136650,"line_start":97,"line_end":97,"column_start":24,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5590},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":136806,"byte_end":136816,"line_start":107,"line_end":107,"column_start":13,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137766,"byte_end":137776,"line_start":143,"line_end":143,"column_start":23,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5611},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":137925,"byte_end":137938,"line_start":152,"line_end":152,"column_start":6,"column_end":19},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":138145,"byte_end":138158,"line_start":162,"line_end":162,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":140846,"byte_end":140856,"line_start":257,"line_end":257,"column_start":44,"column_end":54},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5611},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141308,"byte_end":141319,"line_start":276,"line_end":276,"column_start":31,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5635},"to":{"krate":2,"index":2913}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":141703,"byte_end":141714,"line_start":295,"line_end":295,"column_start":9,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\utils\\span.rs","byte_start":143202,"byte_end":143212,"line_start":352,"line_end":352,"column_start":6,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":145214,"byte_end":145219,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":146597,"byte_end":146603,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\align.rs","byte_start":147193,"byte_end":147199,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":149021,"byte_end":149032,"line_start":41,"line_end":41,"column_start":6,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":152031,"byte_end":152040,"line_start":137,"line_end":137,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154132,"byte_end":154140,"line_start":210,"line_end":210,"column_start":6,"column_end":14},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\direction.rs","byte_start":154939,"byte_end":154947,"line_start":240,"line_end":240,"column_start":6,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\logger.rs","byte_start":156254,"byte_end":156267,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1319},"to":{"krate":25,"index":159}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":158300,"byte_end":158308,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\menu.rs","byte_start":159569,"byte_end":159577,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\border_style.rs","byte_start":172492,"byte_end":172503,"line_start":16,"line_end":16,"column_start":45,"column_end":56},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173348,"byte_end":173357,"line_start":38,"line_end":38,"column_start":6,"column_end":15},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":173631,"byte_end":173640,"line_start":50,"line_end":50,"column_start":19,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5839},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color.rs","byte_start":174755,"byte_end":174760,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_pair.rs","byte_start":179375,"byte_end":179384,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":180330,"byte_end":180340,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182460,"byte_end":182470,"line_start":88,"line_end":88,"column_start":22,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5922},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182588,"byte_end":182598,"line_start":94,"line_end":94,"column_start":26,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5922},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182736,"byte_end":182746,"line_start":100,"line_end":100,"column_start":29,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5922},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":182871,"byte_end":182881,"line_start":106,"line_end":106,"column_start":26,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5922},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183006,"byte_end":183016,"line_start":112,"line_end":112,"column_start":29,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5922},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183456,"byte_end":183465,"line_start":132,"line_end":132,"column_start":6,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183756,"byte_end":183765,"line_start":142,"line_end":142,"column_start":22,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5940},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\color_style.rs","byte_start":183873,"byte_end":183882,"line_start":148,"line_end":148,"column_start":29,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5940},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185634,"byte_end":185641,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185862,"byte_end":185869,"line_start":59,"line_end":59,"column_start":33,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":3316}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":185998,"byte_end":186005,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":188838,"byte_end":188845,"line_start":147,"line_end":147,"column_start":18,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\palette.rs","byte_start":192320,"byte_end":192332,"line_start":254,"line_end":254,"column_start":6,"column_end":18},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193006,"byte_end":193011,"line_start":20,"line_end":20,"column_start":18,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193076,"byte_end":193081,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":193957,"byte_end":193962,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":194137,"byte_end":194142,"line_start":71,"line_end":71,"column_start":27,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":194311,"byte_end":194316,"line_start":80,"line_end":80,"column_start":22,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":194431,"byte_end":194436,"line_start":86,"line_end":86,"column_start":29,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\style.rs","byte_start":194555,"byte_end":194560,"line_start":92,"line_end":92,"column_start":26,"column_end":31},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6093},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170292,"byte_end":170297,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6108},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":170476,"byte_end":170481,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171224,"byte_end":171229,"line_start":226,"line_end":226,"column_start":26,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6116},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\theme\\mod.rs","byte_start":171333,"byte_end":171338,"line_start":232,"line_end":232,"column_start":32,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6116},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195128,"byte_end":195130,"line_start":20,"line_end":20,"column_start":36,"column_end":38},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":195546,"byte_end":195548,"line_start":35,"line_end":35,"column_start":6,"column_end":8},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":198528,"byte_end":198530,"line_start":148,"line_end":148,"column_start":14,"column_end":16},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":201371,"byte_end":201373,"line_start":244,"line_end":244,"column_start":40,"column_end":42},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":202200,"byte_end":202202,"line_start":272,"line_end":272,"column_start":23,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":203143,"byte_end":203145,"line_start":312,"line_end":312,"column_start":33,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":203531,"byte_end":203533,"line_start":331,"line_end":331,"column_start":21,"column_end":23},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":203947,"byte_end":203949,"line_start":350,"line_end":350,"column_start":27,"column_end":29},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":204253,"byte_end":204255,"line_start":363,"line_end":363,"column_start":27,"column_end":29},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":204551,"byte_end":204553,"line_start":376,"line_end":376,"column_start":25,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":204847,"byte_end":204849,"line_start":389,"line_end":389,"column_start":27,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":205167,"byte_end":205169,"line_start":403,"line_end":403,"column_start":23,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":3083}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":205525,"byte_end":205527,"line_start":422,"line_end":422,"column_start":23,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":205905,"byte_end":205907,"line_start":441,"line_end":441,"column_start":45,"column_end":47},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":206201,"byte_end":206203,"line_start":456,"line_end":456,"column_start":21,"column_end":23},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":3093}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":206509,"byte_end":206511,"line_start":471,"line_end":471,"column_start":24,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":3093}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\vec.rs","byte_start":206880,"byte_end":206882,"line_start":489,"line_end":489,"column_start":24,"column_end":26},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":211330,"byte_end":211337,"line_start":41,"line_end":41,"column_start":15,"column_end":22},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\box_view.rs","byte_start":216593,"byte_end":216600,"line_start":208,"line_end":208,"column_start":31,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1772},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":221911,"byte_end":221917,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\button.rs","byte_start":224485,"byte_end":224491,"line_start":139,"line_end":139,"column_start":15,"column_end":21},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1842},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":227482,"byte_end":227488,"line_start":29,"line_end":29,"column_start":25,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":228086,"byte_end":228092,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\canvas.rs","byte_start":233307,"byte_end":233313,"line_start":244,"line_end":244,"column_start":27,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1914},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":234768,"byte_end":234776,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\checkbox.rs","byte_start":236883,"byte_end":236891,"line_start":107,"line_end":107,"column_start":15,"column_end":23},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2042},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":238349,"byte_end":238362,"line_start":17,"line_end":17,"column_start":15,"column_end":28},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\circular_focus.rs","byte_start":239654,"byte_end":239667,"line_start":60,"line_end":60,"column_start":31,"column_end":44},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2092},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242257,"byte_end":242266,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242376,"byte_end":242385,"line_start":21,"line_end":21,"column_start":18,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\debug_view.rs","byte_start":242458,"byte_end":242467,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":245140,"byte_end":245151,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":246343,"byte_end":246349,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dialog.rs","byte_start":260867,"byte_end":260873,"line_start":524,"line_end":524,"column_start":15,"column_end":21},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2222},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\dummy.rs","byte_start":266254,"byte_end":266263,"line_start":9,"line_end":9,"column_start":15,"column_end":24},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2308},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":269718,"byte_end":269726,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\edit_view.rs","byte_start":282298,"byte_end":282306,"line_start":504,"line_end":504,"column_start":15,"column_end":23},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2384},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":289732,"byte_end":289746,"line_start":13,"line_end":13,"column_start":9,"column_end":23},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\enableable_view.rs","byte_start":290040,"byte_end":290054,"line_start":27,"line_end":27,"column_start":31,"column_end":45},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2484},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":290951,"byte_end":290963,"line_start":21,"line_end":21,"column_start":9,"column_end":21},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\hideable_view.rs","byte_start":292054,"byte_end":292066,"line_start":68,"line_end":68,"column_start":31,"column_end":43},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2515},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":293752,"byte_end":293758,"line_start":21,"line_end":21,"column_start":15,"column_end":21},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\id_view.rs","byte_start":294531,"byte_end":294537,"line_start":47,"line_end":47,"column_start":41,"column_end":47},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2578},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296328,"byte_end":296333,"line_start":14,"line_end":14,"column_start":15,"column_end":20},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\layer.rs","byte_start":296500,"byte_end":296505,"line_start":23,"line_end":23,"column_start":31,"column_end":36},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6190},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":297427,"byte_end":297432,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":298002,"byte_end":298015,"line_start":59,"line_end":59,"column_start":9,"column_end":22},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":298330,"byte_end":298343,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":299202,"byte_end":299214,"line_start":112,"line_end":112,"column_start":6,"column_end":18},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\linear_layout.rs","byte_start":306852,"byte_end":306864,"line_start":370,"line_end":370,"column_start":15,"column_end":27},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2677},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":318422,"byte_end":318431,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":319034,"byte_end":319042,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\list_view.rs","byte_start":324732,"byte_end":324740,"line_start":253,"line_end":253,"column_start":15,"column_end":23},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2831},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331078,"byte_end":331087,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2951},"to":{"krate":0,"index":517}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":331271,"byte_end":331280,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menu_popup.rs","byte_start":339990,"byte_end":339999,"line_start":315,"line_end":315,"column_start":15,"column_end":24},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2951},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":345242,"byte_end":345249,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\menubar.rs","byte_start":351752,"byte_end":351759,"line_start":265,"line_end":265,"column_start":15,"column_end":22},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3055},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358296,"byte_end":358302,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3141},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":358560,"byte_end":358571,"line_start":68,"line_end":68,"column_start":15,"column_end":26},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\on_event_view.rs","byte_start":364584,"byte_end":364595,"line_start":257,"line_end":257,"column_start":31,"column_end":42},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3135},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367177,"byte_end":367187,"line_start":27,"line_end":27,"column_start":15,"column_end":25},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\padded_view.rs","byte_start":367619,"byte_end":367629,"line_start":41,"line_end":41,"column_start":31,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3218},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":369001,"byte_end":369006,"line_start":27,"line_end":27,"column_start":15,"column_end":20},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\panel.rs","byte_start":371034,"byte_end":371039,"line_start":93,"line_end":93,"column_start":31,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6250},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":374332,"byte_end":374343,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\progress_bar.rs","byte_start":378221,"byte_end":378232,"line_start":227,"line_end":227,"column_start":15,"column_end":26},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3324},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":379960,"byte_end":379971,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380470,"byte_end":380480,"line_start":37,"line_end":37,"column_start":30,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6271},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":380559,"byte_end":380569,"line_start":43,"line_end":43,"column_start":18,"column_end":28},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382148,"byte_end":382158,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":6271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":382965,"byte_end":382976,"line_start":123,"line_end":123,"column_start":18,"column_end":29},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\radio.rs","byte_start":384716,"byte_end":384727,"line_start":187,"line_end":187,"column_start":27,"column_end":38},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3427},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386081,"byte_end":386091,"line_start":14,"line_end":14,"column_start":30,"column_end":40},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3491},"to":{"krate":0,"index":517}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":386285,"byte_end":386295,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\scroll_view.rs","byte_start":389526,"byte_end":389536,"line_start":143,"line_end":143,"column_start":18,"column_end":28},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3491},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":393594,"byte_end":393604,"line_start":85,"line_end":85,"column_start":30,"column_end":40},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3624},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":393683,"byte_end":393693,"line_start":91,"line_end":91,"column_start":18,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":411890,"byte_end":411900,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413249,"byte_end":413259,"line_start":709,"line_end":709,"column_start":18,"column_end":28},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":413686,"byte_end":413696,"line_start":722,"line_end":722,"column_start":27,"column_end":37},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3624},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\select_view.rs","byte_start":417021,"byte_end":417025,"line_start":829,"line_end":829,"column_start":9,"column_end":13},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":421245,"byte_end":421255,"line_start":17,"line_end":17,"column_start":15,"column_end":25},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\shadow_view.rs","byte_start":422120,"byte_end":422130,"line_start":54,"line_end":54,"column_start":31,"column_end":41},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3793},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":423931,"byte_end":423940,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\sized_view.rs","byte_start":424164,"byte_end":424173,"line_start":25,"line_end":25,"column_start":31,"column_end":40},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3822},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":424867,"byte_end":424877,"line_start":22,"line_end":22,"column_start":6,"column_end":16},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\slider_view.rs","byte_start":427363,"byte_end":427373,"line_start":116,"line_end":116,"column_start":15,"column_end":25},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3881},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":431627,"byte_end":431636,"line_start":43,"line_end":43,"column_start":6,"column_end":15},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":432425,"byte_end":432437,"line_start":73,"line_end":73,"column_start":15,"column_end":27},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":433259,"byte_end":433271,"line_start":101,"line_end":101,"column_start":15,"column_end":27},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":434266,"byte_end":434278,"line_start":130,"line_end":130,"column_start":24,"column_end":36},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3991},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":436956,"byte_end":436965,"line_start":210,"line_end":210,"column_start":6,"column_end":15},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":447601,"byte_end":447622,"line_start":557,"line_end":557,"column_start":9,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":447958,"byte_end":447979,"line_start":573,"line_end":573,"column_start":22,"column_end":43},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4074},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\stack_view.rs","byte_start":448460,"byte_end":448469,"line_start":596,"line_end":596,"column_start":15,"column_end":24},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3976},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":455582,"byte_end":455590,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_area.rs","byte_start":467814,"byte_end":467822,"line_start":445,"line_end":445,"column_start":15,"column_end":23},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4176},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":475663,"byte_end":475674,"line_start":37,"line_end":37,"column_start":6,"column_end":17},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":6327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476458,"byte_end":476472,"line_start":70,"line_end":70,"column_start":16,"column_end":30},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4302},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":476590,"byte_end":476601,"line_start":78,"line_end":78,"column_start":6,"column_end":17},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":6327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":477884,"byte_end":477900,"line_start":130,"line_end":130,"column_start":6,"column_end":22},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":479076,"byte_end":479084,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\text_view.rs","byte_start":483781,"byte_end":483789,"line_start":348,"line_end":348,"column_start":15,"column_end":23},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4325},"to":{"krate":0,"index":406}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":485713,"byte_end":485724,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\tracked_view.rs","byte_start":486257,"byte_end":486268,"line_start":37,"line_end":37,"column_start":31,"column_end":42},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4387},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":486641,"byte_end":486648,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":487069,"byte_end":487076,"line_start":31,"line_end":31,"column_start":16,"column_end":23},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4417},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":487190,"byte_end":487197,"line_start":39,"line_end":39,"column_start":19,"column_end":26},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4417},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\views\\view_box.rs","byte_start":487301,"byte_end":487308,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4417},"to":{"krate":0,"index":158}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489479,"byte_end":489483,"line_start":69,"line_end":69,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":4652}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":489622,"byte_end":489623,"line_start":74,"line_end":74,"column_start":55,"column_end":56},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4655},"to":{"krate":0,"index":4652}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490157,"byte_end":490164,"line_start":94,"line_end":94,"column_start":26,"column_end":33},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4636},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":490660,"byte_end":490667,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\cursive.rs","byte_start":515317,"byte_end":515324,"line_start":899,"line_end":899,"column_start":15,"column_end":22},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4636},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\printer.rs","byte_start":517319,"byte_end":517326,"line_start":64,"line_end":64,"column_start":14,"column_end":21},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535488,"byte_end":535492,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6358},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535678,"byte_end":535682,"line_start":24,"line_end":24,"column_start":20,"column_end":24},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6358},"to":{"krate":2,"index":3083}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\rect.rs","byte_start":535827,"byte_end":535831,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":539509,"byte_end":539514,"line_start":2,"line_end":2,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":4899}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\with.rs","byte_start":540138,"byte_end":540139,"line_start":30,"line_end":30,"column_start":25,"column_end":26},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4908},"to":{"krate":0,"index":4899}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540415,"byte_end":540417,"line_start":13,"line_end":13,"column_start":26,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":7473}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":540651,"byte_end":540653,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":549477,"byte_end":549479,"line_start":350,"line_end":350,"column_start":16,"column_end":18},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551362,"byte_end":551364,"line_start":420,"line_end":420,"column_start":9,"column_end":11},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":551753,"byte_end":551755,"line_start":435,"line_end":435,"column_start":6,"column_end":8},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554449,"byte_end":554451,"line_start":530,"line_end":530,"column_start":26,"column_end":28},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\xy.rs","byte_start":554601,"byte_end":554603,"line_start":537,"line_end":537,"column_start":37,"column_end":39},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560380,"byte_end":560387,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\dummy.rs","byte_start":560572,"byte_end":560579,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5040},"to":{"krate":0,"index":5177}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":582465,"byte_end":582472,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\user\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cursive-0.11.2\\src\\backend\\crossterm.rs","byte_start":587223,"byte_end":587230,"line_start":157,"line_end":157,"column_start":27,"column_end":34},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5144},"to":{"krate":0,"index":5177}}]}